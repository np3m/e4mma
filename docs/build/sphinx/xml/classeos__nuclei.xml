<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classeos__nuclei" kind="class" language="C++" prot="public">
    <compoundname>eos_nuclei</compoundname>
    <basecompoundref refid="classeos" prot="public" virt="non-virtual">eos</basecompoundref>
    <includes refid="eos__nuclei_8h" local="no">eos_nuclei.h</includes>
      <sectiondef kind="user-defined">
      <header>Constructor and destructor</header>
      <memberdef kind="variable" id="classeos__nuclei_1a4c9b3f05b15b2b960ef9aeb8b216b716" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1part__funcs" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::part_funcs</ref></type>
        <definition>o2scl::part_funcs eos_nuclei::pfuncs</definition>
        <argsstring></argsstring>
        <name>pfuncs</name>
        <qualifiedname>eos_nuclei::pfuncs</qualifiedname>
        <briefdescription>
<para>Desc. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="131" column="21" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a59bbe55fff67dcdb57b902e323932d8e" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1boson__rel" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::boson_rel</ref></type>
        <definition>o2scl::boson_rel eos_nuclei::relb</definition>
        <argsstring></argsstring>
        <name>relb</name>
        <qualifiedname>eos_nuclei::relb</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="138" column="20" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a8b7222738b1708c9e2fb067a0d8fd407" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1boson__eff" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::boson_eff</ref></type>
        <definition>o2scl::boson_eff eos_nuclei::effb</definition>
        <argsstring></argsstring>
        <name>effb</name>
        <qualifiedname>eos_nuclei::effb</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="139" column="20" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1aa26805a032925090b41943025ff92b61" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos_nuclei::inc_hrg</definition>
        <argsstring></argsstring>
        <name>inc_hrg</name>
        <qualifiedname>eos_nuclei::inc_hrg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="141" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a89e02af0348fcfafaf330ab26d22c7af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eos_nuclei::eos_nuclei</definition>
        <argsstring>()</argsstring>
        <name>eos_nuclei</name>
        <qualifiedname>eos_nuclei::eos_nuclei</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="125" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a58ccebd0fe88fbe499d7e88e739d2fd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual eos_nuclei::~eos_nuclei</definition>
        <argsstring>()</argsstring>
        <name>~eos_nuclei</name>
        <qualifiedname>eos_nuclei::~eos_nuclei</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="127" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1ade2effe8a0653d0359467fee5f387f25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::solve_hrg</definition>
        <argsstring>(size_t nv, const ubvector &amp;x, ubvector &amp;y, double nB, double Ye, double T)</argsstring>
        <name>solve_hrg</name>
        <qualifiedname>eos_nuclei::solve_hrg</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>nv</declname>
        </param>
        <param>
          <type>const <ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nB</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Ye</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="143" column="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Grid specification</header>
      <memberdef kind="variable" id="classeos__nuclei_1a45b349dfca3ef36ac30bda2e3958932f" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t eos_nuclei::n_nB2</definition>
        <argsstring></argsstring>
        <name>n_nB2</name>
        <qualifiedname>eos_nuclei::n_nB2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="148" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1aa78cff585679ca83ce4faae2ac11ef08" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t eos_nuclei::n_Ye2</definition>
        <argsstring></argsstring>
        <name>n_Ye2</name>
        <qualifiedname>eos_nuclei::n_Ye2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="149" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a0c7287732760fcb2f9811bbb8f7ea571" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t eos_nuclei::n_T2</definition>
        <argsstring></argsstring>
        <name>n_T2</name>
        <qualifiedname>eos_nuclei::n_T2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="150" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1abff5a99f10e3fadf06d088a4e1377b12" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t eos_nuclei::n_S2</definition>
        <argsstring></argsstring>
        <name>n_S2</name>
        <qualifiedname>eos_nuclei::n_S2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="151" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1aa35cdb1ef03cd7004e7775f9fff5b326" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; eos_nuclei::nB_grid2</definition>
        <argsstring></argsstring>
        <name>nB_grid2</name>
        <qualifiedname>eos_nuclei::nB_grid2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="152" column="15" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a0e6983e5c37d4203b6d3c467774d3966" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; eos_nuclei::Ye_grid2</definition>
        <argsstring></argsstring>
        <name>Ye_grid2</name>
        <qualifiedname>eos_nuclei::Ye_grid2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="153" column="15" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a70464c87915d9cecf9161e1d9aad2d76" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; eos_nuclei::T_grid2</definition>
        <argsstring></argsstring>
        <name>T_grid2</name>
        <qualifiedname>eos_nuclei::T_grid2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="154" column="15" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1ac0b5c62b2f374365904eaa4bd4c62bd2" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; eos_nuclei::S_grid2</definition>
        <argsstring></argsstring>
        <name>S_grid2</name>
        <qualifiedname>eos_nuclei::S_grid2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="155" column="15" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a84917126cdf34b7899627c705ad72e45" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string eos_nuclei::nB_grid_spec</definition>
        <argsstring></argsstring>
        <name>nB_grid_spec</name>
        <qualifiedname>eos_nuclei::nB_grid_spec</qualifiedname>
        <briefdescription>
<para>The function for default baryon density grid. </para>
        </briefdescription>
        <detaileddescription>
<para>This parameter is used by the <ref refid="classeos__nuclei_1a4ed2d01020c376d09c7e80d4691a0002" kindref="member">new_table()</ref> function, and the <computeroutput>check-virial</computeroutput> and <computeroutput>eos-deriv</computeroutput> commands. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="161" column="15" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1abcd0a5feca72f18f6b789d3d1709fb35" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string eos_nuclei::Ye_grid_spec</definition>
        <argsstring></argsstring>
        <name>Ye_grid_spec</name>
        <qualifiedname>eos_nuclei::Ye_grid_spec</qualifiedname>
        <briefdescription>
<para>The function for default electron fraction grid. </para>
        </briefdescription>
        <detaileddescription>
<para>This parameter is used by the <ref refid="classeos__nuclei_1a4ed2d01020c376d09c7e80d4691a0002" kindref="member">new_table()</ref> function, and the <computeroutput>check-virial</computeroutput> and eos-deriv <computeroutput>commands</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="167" column="15" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1ad6cc0c08c901eb35afabcc6f6b0d9a86" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string eos_nuclei::T_grid_spec</definition>
        <argsstring></argsstring>
        <name>T_grid_spec</name>
        <qualifiedname>eos_nuclei::T_grid_spec</qualifiedname>
        <briefdescription>
<para>The function for default temperature grid. </para>
        </briefdescription>
        <detaileddescription>
<para>This parameter is used by the <ref refid="classeos__nuclei_1a4ed2d01020c376d09c7e80d4691a0002" kindref="member">new_table()</ref> function, and the <computeroutput>check-virial</computeroutput> and <computeroutput>eos-deriv</computeroutput> commands. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="173" column="15" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a42b5029c314928bcfafc3487d6840ce3" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string eos_nuclei::S_grid_spec</definition>
        <argsstring></argsstring>
        <name>S_grid_spec</name>
        <qualifiedname>eos_nuclei::S_grid_spec</qualifiedname>
        <briefdescription>
<para>The function for default strangeness grid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="176" column="15" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Nuclear masses and their fits</header>
      <memberdef kind="variable" id="classeos__nuclei_1a47a76469f97ff30926321b51fd0cecb5" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1nucmass__mnmsk" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::nucmass_mnmsk</ref></type>
        <definition>o2scl::nucmass_mnmsk eos_nuclei::m95</definition>
        <argsstring></argsstring>
        <name>m95</name>
        <qualifiedname>eos_nuclei::m95</qualifiedname>
        <briefdescription>
<para>Theoretical nuclear masses. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="192" column="24" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a1b46f1ba98caef463efb3d0b5b9ff492" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1nucmass__hfb__sp" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::nucmass_hfb_sp</ref></type>
        <definition>o2scl::nucmass_hfb_sp eos_nuclei::hfb</definition>
        <argsstring></argsstring>
        <name>hfb</name>
        <qualifiedname>eos_nuclei::hfb</qualifiedname>
        <briefdescription>
<para>HFB masses for spin predictions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="196" column="25" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a413ada2b57a752222ed73c5c5feb468f" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1nucmass__ame" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::nucmass_ame</ref></type>
        <definition>o2scl::nucmass_ame eos_nuclei::ame</definition>
        <argsstring></argsstring>
        <name>ame</name>
        <qualifiedname>eos_nuclei::ame</qualifiedname>
        <briefdescription>
<para>Experimental nuclear masses. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="200" column="22" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a61720a84d5f6af3136b150a7beb58efd" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1nucmass__frdm" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::nucmass_frdm</ref></type>
        <definition>o2scl::nucmass_frdm eos_nuclei::frdm</definition>
        <argsstring></argsstring>
        <name>frdm</name>
        <qualifiedname>eos_nuclei::frdm</qualifiedname>
        <briefdescription>
<para>Theoretical nuclear masses far from stability. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="204" column="23" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a617715389811945428a28aac994f2d4d" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1nucmass__fit" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::nucmass_fit</ref></type>
        <definition>o2scl::nucmass_fit eos_nuclei::nm_fit</definition>
        <argsstring></argsstring>
        <name>nm_fit</name>
        <qualifiedname>eos_nuclei::nm_fit</qualifiedname>
        <briefdescription>
<para>Fit theory masses. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="208" column="22" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1af66a0c79f0a2cdbc4167ec7d94e72ffd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::fit_frdm</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>fit_frdm</name>
        <qualifiedname>eos_nuclei::fit_frdm</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Fit the FRDM mass model. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;no parameters&gt;</para>
<para>Fit the FRDM mass model. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="187" column="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Nucleus objects</header>
      <memberdef kind="variable" id="classeos__nuclei_1a0214b5d087de581e4956016c77a8c022" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classo2scl_1_1nucleus" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::nucleus</ref> &gt;</type>
        <definition>std::vector&lt;o2scl::nucleus&gt; eos_nuclei::nuclei</definition>
        <argsstring></argsstring>
        <name>nuclei</name>
        <qualifiedname>eos_nuclei::nuclei</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="213" column="15" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a4f4849d6d4b5181abf10851f80fe0e79" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1nucleus" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::nucleus</ref> *</type>
        <definition>o2scl::nucleus* eos_nuclei::nuc_alpha</definition>
        <argsstring></argsstring>
        <name>nuc_alpha</name>
        <qualifiedname>eos_nuclei::nuc_alpha</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="214" column="18" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1ad96854c380c8a06cb7920a5a73efa06a" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1nucleus" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::nucleus</ref> *</type>
        <definition>o2scl::nucleus* eos_nuclei::nuc_deut</definition>
        <argsstring></argsstring>
        <name>nuc_deut</name>
        <qualifiedname>eos_nuclei::nuc_deut</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="215" column="18" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a3d109091b9cc536e258b427902cc9a8a" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1nucleus" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::nucleus</ref> *</type>
        <definition>o2scl::nucleus* eos_nuclei::nuc_trit</definition>
        <argsstring></argsstring>
        <name>nuc_trit</name>
        <qualifiedname>eos_nuclei::nuc_trit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="216" column="18" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a52be68ebd33895f19d2bd8938d64f928" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1nucleus" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::nucleus</ref> *</type>
        <definition>o2scl::nucleus* eos_nuclei::nuc_he3</definition>
        <argsstring></argsstring>
        <name>nuc_he3</name>
        <qualifiedname>eos_nuclei::nuc_he3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="217" column="18" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a83302306c61e924014d3a3de8a2a9522" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1nucleus" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::nucleus</ref> *</type>
        <definition>o2scl::nucleus* eos_nuclei::nuc_li4</definition>
        <argsstring></argsstring>
        <name>nuc_li4</name>
        <qualifiedname>eos_nuclei::nuc_li4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="218" column="18" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a5eeb7c88917d123776bae1b3117ab9ad" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1nucleus" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::nucleus</ref> *</type>
        <definition>o2scl::nucleus* eos_nuclei::nuc_heavy</definition>
        <argsstring></argsstring>
        <name>nuc_heavy</name>
        <qualifiedname>eos_nuclei::nuc_heavy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="219" column="18" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Mathematical algorithm objects</header>
      <memberdef kind="variable" id="classeos__nuclei_1ad0f430299bfde0f00e06cd9a228bf7c7" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1inte__qag__gsl" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::inte_qag_gsl</ref></type>
        <definition>o2scl::inte_qag_gsl eos_nuclei::iqg</definition>
        <argsstring></argsstring>
        <name>iqg</name>
        <qualifiedname>eos_nuclei::iqg</qualifiedname>
        <briefdescription>
<para>Integrator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="225" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a7f24be12bb5c16ff00fe8e152155202a" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1mroot__hybrids" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::mroot_hybrids</ref></type>
        <definition>o2scl::mroot_hybrids eos_nuclei::mh</definition>
        <argsstring></argsstring>
        <name>mh</name>
        <qualifiedname>eos_nuclei::mh</qualifiedname>
        <briefdescription>
<para>Solver. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="229" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1ae294cb0d74607054bd37ba0b4b32941e" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1root__brent__gsl" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::root_brent_gsl</ref></type>
        <definition>o2scl::root_brent_gsl eos_nuclei::rbg</definition>
        <argsstring></argsstring>
        <name>rbg</name>
        <qualifiedname>eos_nuclei::rbg</qualifiedname>
        <briefdescription>
<para>Bracketing solver. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="233" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>The nuclear partition function</header>
      <memberdef kind="variable" id="classeos__nuclei_1aaa29c37e1529b29e1cec979c8f994656" prot="public" static="no" mutable="no">
        <type><ref refid="classpartition__func" kindref="compound">partition_func</ref></type>
        <definition>partition_func eos_nuclei::part_func</definition>
        <argsstring></argsstring>
        <name>part_func</name>
        <qualifiedname>eos_nuclei::part_func</qualifiedname>
        <briefdescription>
<para>Object which integrates partition functions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="239" column="18" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a42747d737de3ca6f9631c2ef653e43ab" prot="public" static="no" mutable="no">
        <type><ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref></type>
        <definition>ubvector eos_nuclei::Sneut</definition>
        <argsstring></argsstring>
        <name>Sneut</name>
        <qualifiedname>eos_nuclei::Sneut</qualifiedname>
        <briefdescription>
<para>Neutron separation energies (in MeV) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="243" column="12" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1afd0e2e87dbe65ff8cf7488606e870b8c" prot="public" static="no" mutable="no">
        <type><ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref></type>
        <definition>ubvector eos_nuclei::Sprot</definition>
        <argsstring></argsstring>
        <name>Sprot</name>
        <qualifiedname>eos_nuclei::Sprot</qualifiedname>
        <briefdescription>
<para>Proton separation energies (in MeV) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="247" column="12" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a1be55c7bf591a308ee150480cc2c6dcd" prot="public" static="no" mutable="no">
        <type><ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref></type>
        <definition>ubvector eos_nuclei::vomega</definition>
        <argsstring></argsstring>
        <name>vomega</name>
        <qualifiedname>eos_nuclei::vomega</qualifiedname>
        <briefdescription>
<para>Partition function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="251" column="12" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a2f2cbf1eaf75f60d69f4f6c4e95659d5" prot="public" static="no" mutable="no">
        <type><ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref></type>
        <definition>ubvector eos_nuclei::vomega_prime</definition>
        <argsstring></argsstring>
        <name>vomega_prime</name>
        <qualifiedname>eos_nuclei::vomega_prime</qualifiedname>
        <briefdescription>
<para>Derivative of partition function with respect to temperature, in units of <formula id="16">$ \mathrm{fm} $</formula>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="256" column="12" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Parameters modifiable by the CLI user</header>
      <memberdef kind="variable" id="classeos__nuclei_1addd97acf845f34327f16bc09e23ead9b" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double eos_nuclei::file_update_time</definition>
        <argsstring></argsstring>
        <name>file_update_time</name>
        <qualifiedname>eos_nuclei::file_update_time</qualifiedname>
        <briefdescription>
<para>The time (in seconds) between output file updates for <ref refid="classeos__nuclei_1aceee50342315ece4e551fe9fb12918aa" kindref="member">generate_table()</ref> (default 1800) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="270" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1aa68e7326e3954b0c2e50fef2d5d612dc" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int eos_nuclei::file_update_iters</definition>
        <argsstring></argsstring>
        <name>file_update_iters</name>
        <qualifiedname>eos_nuclei::file_update_iters</qualifiedname>
        <briefdescription>
<para>The number of iterations between file updates (default 100000) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="273" column="7" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1afdec88d36c8891280a981df1d998889d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int eos_nuclei::fd_A_max</definition>
        <argsstring></argsstring>
        <name>fd_A_max</name>
        <qualifiedname>eos_nuclei::fd_A_max</qualifiedname>
        <briefdescription>
<para>The maximum value of A for a fixed distribution when alg_mode is 4 (default 600) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="278" column="7" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1ada7cee58f713ad6905ceb30a328e71ff" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos_nuclei::extend_frdm</definition>
        <argsstring></argsstring>
        <name>extend_frdm</name>
        <qualifiedname>eos_nuclei::extend_frdm</qualifiedname>
        <briefdescription>
<para>If true, attempt to extend FRDM beyond the drip lines (default false). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="283" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a38f192295a91ff802335cf8e06e1c30e" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double eos_nuclei::max_ratio</definition>
        <argsstring></argsstring>
        <name>max_ratio</name>
        <qualifiedname>eos_nuclei::max_ratio</qualifiedname>
        <briefdescription>
<para>The maximum value of <formula id="17">$ N/Z $</formula> or <formula id="18">$ Z/N $</formula> (default 7) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="286" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a19904b5c40236839a7782c80474eb852" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double eos_nuclei::mh_tol_rel</definition>
        <argsstring></argsstring>
        <name>mh_tol_rel</name>
        <qualifiedname>eos_nuclei::mh_tol_rel</qualifiedname>
        <briefdescription>
<para>Relative tolerance for the solver in the <ref refid="classeos__nuclei_1affdd30692a9b5ab5de04dedc1292c127" kindref="member">eos_fixed_dist()</ref> function (default <formula id="19">$ 10^{-6} $</formula>) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="291" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1acf9211fc713e0bd204c9e78c9266e85f" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string eos_nuclei::ext_guess</definition>
        <argsstring></argsstring>
        <name>ext_guess</name>
        <qualifiedname>eos_nuclei::ext_guess</qualifiedname>
        <briefdescription>
<para>Filename containing separate table to use as a guess for the <computeroutput>generate-table</computeroutput> command (default is the empty string) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="296" column="15" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a035ec31a7ad9d0341f71515d00ed966f" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string eos_nuclei::nucleon_func</definition>
        <argsstring></argsstring>
        <name>nucleon_func</name>
        <qualifiedname>eos_nuclei::nucleon_func</qualifiedname>
        <briefdescription>
<para>Function for delta Z and delta N in the single nucleus approximation. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the function used to specify the range of Z and N which is varied to find the smallest free energy </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="304" column="15" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a579ac167d74c08da18cb75d6df7e1cd1" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double eos_nuclei::max_time</definition>
        <argsstring></argsstring>
        <name>max_time</name>
        <qualifiedname>eos_nuclei::max_time</qualifiedname>
        <briefdescription>
<para>Maximum time, in seconds, for the <computeroutput>generate-table</computeroutput> command. The default is 0.0 which is interpreted as no maximum time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="310" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a149f15c25567f030d59ad187ffbffaff" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos_nuclei::show_all_nuclei</definition>
        <argsstring></argsstring>
        <name>show_all_nuclei</name>
        <qualifiedname>eos_nuclei::show_all_nuclei</qualifiedname>
        <briefdescription>
<para>If true, show all nuclei considered at every point (default false) </para>
        </briefdescription>
        <detaileddescription>
<para>This applies to the <computeroutput>point-nuclei</computeroutput> command and the <ref refid="classeos__nuclei_1a9860dc645b8d0378a4d5e19fa0f32808" kindref="member">eos_vary_ZN()</ref> function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="318" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a23b5e4c392132ae728edc34fa564a02a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos_nuclei::rnuc_less_rws</definition>
        <argsstring></argsstring>
        <name>rnuc_less_rws</name>
        <qualifiedname>eos_nuclei::rnuc_less_rws</qualifiedname>
        <briefdescription>
<para>If true, ensure that the nuclear radius is less than the Wigner-Seitz radius (default true) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="323" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a78227dbf57ccbffc1cd8684894cfa55a" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::string &gt;</type>
        <definition>std::map&lt;std::string,std::string&gt; eos_nuclei::vdet_units</definition>
        <argsstring></argsstring>
        <name>vdet_units</name>
        <qualifiedname>eos_nuclei::vdet_units</qualifiedname>
        <briefdescription>
<para>Units of objects in the vdet arrays. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="326" column="12" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a765a1a973e5ad6f59fb78c996c0755b0" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos_nuclei::recompute</definition>
        <argsstring></argsstring>
        <name>recompute</name>
        <qualifiedname>eos_nuclei::recompute</qualifiedname>
        <briefdescription>
<para>If true, recompute all points, irrespective of the value of the convergence flag (default false) </para>
        </briefdescription>
        <detaileddescription>
<para>This setting is used in <computeroutput>point-nuclei</computeroutput> and <computeroutput>generate-table</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="333" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a7aa168037269f4ef8ab626b079988ec9" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos_nuclei::verify_only</definition>
        <argsstring></argsstring>
        <name>verify_only</name>
        <qualifiedname>eos_nuclei::verify_only</qualifiedname>
        <briefdescription>
<para>If true, verify points only and do not attempt to solve (default false) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="338" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a0a604d4a31718e53752b439ab11a053f" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string eos_nuclei::edge_list</definition>
        <argsstring></argsstring>
        <name>edge_list</name>
        <qualifiedname>eos_nuclei::edge_list</qualifiedname>
        <briefdescription>
<para>If true, recompute points where Z, A, log_xn, or log_xp reach a maximum or minimum (default false) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="343" column="15" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1af212462812d08ec8110d201c18d4a271" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int eos_nuclei::alg_mode</definition>
        <argsstring></argsstring>
        <name>alg_mode</name>
        <qualifiedname>eos_nuclei::alg_mode</qualifiedname>
        <briefdescription>
<para>Algorithm mode (default 4) </para>
        </briefdescription>
        <detaileddescription>
<para>0 for SNA, 1 for old SNA method, 2 for vary dist., 3 for old vary dist., and 4 for fixed dist. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="350" column="7" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a5c6efdbb42094ec4d757a5410f3826aa" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int eos_nuclei::fixed_dist_alg</definition>
        <argsstring></argsstring>
        <name>fixed_dist_alg</name>
        <qualifiedname>eos_nuclei::fixed_dist_alg</qualifiedname>
        <briefdescription>
<para>Algorithm for <ref refid="classeos__nuclei_1affdd30692a9b5ab5de04dedc1292c127" kindref="member">eos_fixed_dist()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Modify the algorithm for the <ref refid="classeos__nuclei_1affdd30692a9b5ab5de04dedc1292c127" kindref="member">eos_fixed_dist()</ref> function. The 1s digit is the number of solves minus 1, the 10s digit is the number of brackets divided by 10, the 100s digit is the number of minimizes, and the 1000s digit is the number of random guesses to try divided by 1000. The default is 1111. Other good options are 1319, 1919, 1999, and 9999. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="361" column="7" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1add3c0308b16526ddc563d8b68ad4c69d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int eos_nuclei::six_neighbors</definition>
        <argsstring></argsstring>
        <name>six_neighbors</name>
        <qualifiedname>eos_nuclei::six_neighbors</qualifiedname>
        <briefdescription>
<para>If true, when computing a point, perform the calculation using some of the neighboring points as an initial guess (default 0) </para>
        </briefdescription>
        <detaileddescription>
<para>Values greater than 0 use the point at the next smallest density, values greater than 1 use the point at the next largest density, values greater than 2 use points at the next largest and next smallest temperature, and values greater than 4 use the next largest and smallest electron fraction. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="373" column="7" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a213862312a3f3a6f966e5e49520575d7" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int eos_nuclei::function_verbose</definition>
        <argsstring></argsstring>
        <name>function_verbose</name>
        <qualifiedname>eos_nuclei::function_verbose</qualifiedname>
        <briefdescription>
<para>A new function verbose parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>Verbose for individual functions (default value 11111).<linebreak/>
\t1s digit: fixed_ZN()<linebreak/>
\t10s digit: vary_ZN()<linebreak/>
\t100s digit: fixed_dist()<linebreak/>
\t1000s digit: vary_dist()<linebreak/>
\t10000s digit: <ref refid="classeos__nuclei_1a0a87adc1ff5b65ce4d033a6336cb932e" kindref="member">store_point()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="383" column="7" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1acc7abc9cd375b05f20f47afb34782720" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos_nuclei::propagate_points</definition>
        <argsstring></argsstring>
        <name>propagate_points</name>
        <qualifiedname>eos_nuclei::propagate_points</qualifiedname>
        <briefdescription>
<para>If true, use previously computed points (or guesses) as an initial guess to compute adjacent points (default true) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="392" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1aefdd3a39cdf13c2bbd1348c7958c0b5f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos_nuclei::survey_eqs</definition>
        <argsstring></argsstring>
        <name>survey_eqs</name>
        <qualifiedname>eos_nuclei::survey_eqs</qualifiedname>
        <briefdescription>
<para>If true, survey the nB and Ye equations near a failed point (default false) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="397" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a93cb54979a0223ec380db70969121a06" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos_nuclei::derivs_computed</definition>
        <argsstring></argsstring>
        <name>derivs_computed</name>
        <qualifiedname>eos_nuclei::derivs_computed</qualifiedname>
        <briefdescription>
<para>If true, output all of the data necessary for a full EOS. </para>
        </briefdescription>
        <detaileddescription>
<para>If true, include Eint, Pint, Sint, mun, and mup. If include_eg is additionally true, then add F, E, P, and S. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="404" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1af3884c83f3345c284e49d40cf4d74e02" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos_nuclei::baryons_only</definition>
        <argsstring></argsstring>
        <name>baryons_only</name>
        <qualifiedname>eos_nuclei::baryons_only</qualifiedname>
        <briefdescription>
<para>Always true, included for consistency with <ref refid="classo2scl_1_1eos__sn__base" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::eos_sn_base</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="408" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1ab1a3b47a2f9843632f6a539d42283d1d" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos_nuclei::with_leptons</definition>
        <argsstring></argsstring>
        <name>with_leptons</name>
        <qualifiedname>eos_nuclei::with_leptons</qualifiedname>
        <briefdescription>
<para>If true, include electrons and photons. </para>
        </briefdescription>
        <detaileddescription>
<para>Requires that derivs_computed is also true </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="414" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a64732e062b6e199e56723ff363eb18de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eos_nuclei::store_hrg</definition>
        <argsstring>(double mun, double mup, double nn, double np, double T, o2scl::table_units&lt;&gt; &amp;tab)</argsstring>
        <name>store_hrg</name>
        <qualifiedname>eos_nuclei::store_hrg</qualifiedname>
        <param>
          <type>double</type>
          <declname>mun</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mup</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>np</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type><ref refid="classo2scl_1_1table__units" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::table_units</ref>&lt;&gt; &amp;</type>
          <declname>tab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="385" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Other internal objects</header>
      <memberdef kind="variable" id="classeos__nuclei_1a0f60c0e9b9f751ecb03e4fff387273f6" prot="public" static="no" mutable="no">
        <type><ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref></type>
        <definition>ubvector eos_nuclei::Ec</definition>
        <argsstring></argsstring>
        <name>Ec</name>
        <qualifiedname>eos_nuclei::Ec</qualifiedname>
        <briefdescription>
<para>Coulomb energy (in <formula id="20">$ \mathrm{fm}^{-1} $</formula> ) </para>
        </briefdescription>
        <detaileddescription>
<para>This quantity is computed in <ref refid="classeos__nuclei_1a40aac5b607cd8c5d7f0b5ab22380c9b6" kindref="member">solve_nuclei()</ref> and then used later in <ref refid="classeos__nuclei_1affdd30692a9b5ab5de04dedc1292c127" kindref="member">eos_fixed_dist()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="424" column="12" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a3f1117145eaf9cbce21f15078b6dc9cc" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1vec__index" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::vec_index</ref></type>
        <definition>o2scl::vec_index eos_nuclei::vi</definition>
        <argsstring></argsstring>
        <name>vi</name>
        <qualifiedname>eos_nuclei::vi</qualifiedname>
        <briefdescription>
<para>Dictionary for mapping buffers to physical quantities. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="427" column="20" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1afb96a831c4da38e5c05c4ad2738ff50c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos_nuclei::loaded</definition>
        <argsstring></argsstring>
        <name>loaded</name>
        <qualifiedname>eos_nuclei::loaded</qualifiedname>
        <briefdescription>
<para>True if an EOS is currently loaded. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="430" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a0295e987ef254dbccdb5e342180e77f0" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; eos_nuclei::fd_rand_ranges</definition>
        <argsstring></argsstring>
        <name>fd_rand_ranges</name>
        <qualifiedname>eos_nuclei::fd_rand_ranges</qualifiedname>
        <briefdescription>
<para>Ranges for randomly selected ranges in <ref refid="classeos__nuclei_1affdd30692a9b5ab5de04dedc1292c127" kindref="member">eos_fixed_dist()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="435" column="15" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1ad51274167059b031089982cbe81a0325" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1slack__messenger" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::slack_messenger</ref></type>
        <definition>o2scl::slack_messenger eos_nuclei::slack</definition>
        <argsstring></argsstring>
        <name>slack</name>
        <qualifiedname>eos_nuclei::slack</qualifiedname>
        <briefdescription>
<para>Object for sending slack messages. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="439" column="26" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1aaf1dde49bf14b9a91f9524881943225b" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string eos_nuclei::Ye_list</definition>
        <argsstring></argsstring>
        <name>Ye_list</name>
        <qualifiedname>eos_nuclei::Ye_list</qualifiedname>
        <briefdescription>
<para>The list of electron fractions to consider for the <computeroutput>generate-table</computeroutput> command. </para>
        </briefdescription>
        <detaileddescription>
<para>Can be several comma-separated ranges e.g. &quot;1-3,5-7,59-60&quot;. Zero-indexed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="447" column="15" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="447" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Other internal physics objects</header>
      <memberdef kind="variable" id="classeos__nuclei_1ad96a0533266e63e6e607dfb89b114aea" prot="public" static="no" mutable="no">
        <type><ref refid="classeos__had__skyrme__ext" kindref="compound">eos_had_skyrme_ext</ref></type>
        <definition>eos_had_skyrme_ext eos_nuclei::skyrme_ext</definition>
        <argsstring></argsstring>
        <name>skyrme_ext</name>
        <qualifiedname>eos_nuclei::skyrme_ext</qualifiedname>
        <briefdescription>
<para>Extended Skyrme model for finite-temperature corrections. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="453" column="22" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1aca1afa3074c80479fdc0081c1e58e218" prot="public" static="no" mutable="no">
        <type><ref refid="classeos__had__lim__holt" kindref="compound">eos_had_lim_holt</ref></type>
        <definition>eos_had_lim_holt eos_nuclei::lim_holt</definition>
        <argsstring></argsstring>
        <name>lim_holt</name>
        <qualifiedname>eos_nuclei::lim_holt</qualifiedname>
        <briefdescription>
<para>Extended Skyrme model for finite-temperature corrections. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="456" column="20" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="456" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Main EOS table storage</header>
      <memberdef kind="variable" id="classeos__nuclei_1abfe2ca1cfff02482fc0aef779adf5948" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_log_xn</definition>
        <argsstring></argsstring>
        <name>tg_log_xn</name>
        <qualifiedname>eos_nuclei::tg_log_xn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="475" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="475" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a88b62625548fb17a98d8716888dc669f" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_log_xp</definition>
        <argsstring></argsstring>
        <name>tg_log_xp</name>
        <qualifiedname>eos_nuclei::tg_log_xp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="476" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1ae6a19c2cd1fa1ccd87b86601534f9e91" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_flag</definition>
        <argsstring></argsstring>
        <name>tg_flag</name>
        <qualifiedname>eos_nuclei::tg_flag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="477" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a03672e8e1f20bead45740c7ec72e2ebb" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_F</definition>
        <argsstring></argsstring>
        <name>tg_F</name>
        <qualifiedname>eos_nuclei::tg_F</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="478" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a4d8dcea83e8b11e9ae3f3a4dec0b6867" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_E</definition>
        <argsstring></argsstring>
        <name>tg_E</name>
        <qualifiedname>eos_nuclei::tg_E</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="479" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1abc4cbbc24d7ecefb41643829035f132a" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_P</definition>
        <argsstring></argsstring>
        <name>tg_P</name>
        <qualifiedname>eos_nuclei::tg_P</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="480" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a7190a56772676f59e7cfe4fec4c11373" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_S</definition>
        <argsstring></argsstring>
        <name>tg_S</name>
        <qualifiedname>eos_nuclei::tg_S</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="481" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="481" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1aeba5d7466002ea08bc1808e639ff4ade" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_Fint</definition>
        <argsstring></argsstring>
        <name>tg_Fint</name>
        <qualifiedname>eos_nuclei::tg_Fint</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="482" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a70d2dda04bbcf60854b7670102f56de0" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_Eint</definition>
        <argsstring></argsstring>
        <name>tg_Eint</name>
        <qualifiedname>eos_nuclei::tg_Eint</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="483" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="483" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a5350ccc3f6a84937d808d76ce5bc3535" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_Pint</definition>
        <argsstring></argsstring>
        <name>tg_Pint</name>
        <qualifiedname>eos_nuclei::tg_Pint</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="484" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1ab6c02707e4ccfc85a57dc392312b858d" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_Sint</definition>
        <argsstring></argsstring>
        <name>tg_Sint</name>
        <qualifiedname>eos_nuclei::tg_Sint</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="485" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="485" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a06b8c9725c02758c06e28a90b9a0b460" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_mun</definition>
        <argsstring></argsstring>
        <name>tg_mun</name>
        <qualifiedname>eos_nuclei::tg_mun</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="486" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a0e46415ceec10241748d3b7e3975eb35" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_mup</definition>
        <argsstring></argsstring>
        <name>tg_mup</name>
        <qualifiedname>eos_nuclei::tg_mup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="487" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="487" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1ad1227ef10b6e0d48d443f2acc1429193" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_mue</definition>
        <argsstring></argsstring>
        <name>tg_mue</name>
        <qualifiedname>eos_nuclei::tg_mue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="488" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="488" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1abfff102abee916ed3e89a84c6880192e" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_Z</definition>
        <argsstring></argsstring>
        <name>tg_Z</name>
        <qualifiedname>eos_nuclei::tg_Z</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="489" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a11c1b1969e2ba5ef9b18d4b57330da4e" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_A</definition>
        <argsstring></argsstring>
        <name>tg_A</name>
        <qualifiedname>eos_nuclei::tg_A</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="490" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="490" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a004b4b83f1dffcd1b5d1800cfdc29b0b" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_Xn</definition>
        <argsstring></argsstring>
        <name>tg_Xn</name>
        <qualifiedname>eos_nuclei::tg_Xn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="491" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="491" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1ab64ab28f693c6d3ef0b87da1343dbd6e" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_Xp</definition>
        <argsstring></argsstring>
        <name>tg_Xp</name>
        <qualifiedname>eos_nuclei::tg_Xp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="492" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="492" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1af444fb252ee474ed57564452c030a3cf" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_Xalpha</definition>
        <argsstring></argsstring>
        <name>tg_Xalpha</name>
        <qualifiedname>eos_nuclei::tg_Xalpha</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="493" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a492319b4f6e26525c5d42b3b283d872f" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_Xnuclei</definition>
        <argsstring></argsstring>
        <name>tg_Xnuclei</name>
        <qualifiedname>eos_nuclei::tg_Xnuclei</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="494" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1aeb396b53697b9f1de3e69d8e9dada40e" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_Ymu</definition>
        <argsstring></argsstring>
        <name>tg_Ymu</name>
        <qualifiedname>eos_nuclei::tg_Ymu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="495" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a4b71c77ee78348145eafe9672ad01218" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_Xd</definition>
        <argsstring></argsstring>
        <name>tg_Xd</name>
        <qualifiedname>eos_nuclei::tg_Xd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="496" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1af3a8eefc23db6b6a6e172812e5d2df68" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_Xt</definition>
        <argsstring></argsstring>
        <name>tg_Xt</name>
        <qualifiedname>eos_nuclei::tg_Xt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="497" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a9c19aba86fcc0a6fc081ffdfc1f60472" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_XHe3</definition>
        <argsstring></argsstring>
        <name>tg_XHe3</name>
        <qualifiedname>eos_nuclei::tg_XHe3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="498" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1af7ead89609f0c6327a49bda1b6842a61" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_XLi4</definition>
        <argsstring></argsstring>
        <name>tg_XLi4</name>
        <qualifiedname>eos_nuclei::tg_XLi4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="499" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a0b37376081ff2573fcb59161c8a92493" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_A_min</definition>
        <argsstring></argsstring>
        <name>tg_A_min</name>
        <qualifiedname>eos_nuclei::tg_A_min</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="500" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="500" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1ad2b9d2603630db4db8f4213d4e181e4f" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_A_max</definition>
        <argsstring></argsstring>
        <name>tg_A_max</name>
        <qualifiedname>eos_nuclei::tg_A_max</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="501" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1aeb4ced40ed759436e405de206be713bd" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_NmZ_min</definition>
        <argsstring></argsstring>
        <name>tg_NmZ_min</name>
        <qualifiedname>eos_nuclei::tg_NmZ_min</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="502" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="502" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1abf3b5e7073974ace451d0bc93e970178" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_NmZ_max</definition>
        <argsstring></argsstring>
        <name>tg_NmZ_max</name>
        <qualifiedname>eos_nuclei::tg_NmZ_max</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="503" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="503" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Detail storage</header>
      <memberdef kind="variable" id="classeos__nuclei_1ac54292646a75f5095e6195122eaf6340" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos_nuclei::include_detail</definition>
        <argsstring></argsstring>
        <name>include_detail</name>
        <qualifiedname>eos_nuclei::include_detail</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="508" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a34f07f57a646e68b7ad8224cbff2cb25" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_zn</definition>
        <argsstring></argsstring>
        <name>tg_zn</name>
        <qualifiedname>eos_nuclei::tg_zn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="509" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="509" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a11ce9720370ac275fc54f1ed15e4b828" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_zp</definition>
        <argsstring></argsstring>
        <name>tg_zp</name>
        <qualifiedname>eos_nuclei::tg_zp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="510" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="510" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a12d5b08736061d3354419adeaa01ed0d" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_F1</definition>
        <argsstring></argsstring>
        <name>tg_F1</name>
        <qualifiedname>eos_nuclei::tg_F1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="511" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a407c06a8301cc809db24f8f63b970c6d" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_F2</definition>
        <argsstring></argsstring>
        <name>tg_F2</name>
        <qualifiedname>eos_nuclei::tg_F2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="512" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="512" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a7881bc2e6030cf83cdcd1c754c09cf42" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_F3</definition>
        <argsstring></argsstring>
        <name>tg_F3</name>
        <qualifiedname>eos_nuclei::tg_F3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="513" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a425f1eead1cd755e75d5025d20d55472" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_F4</definition>
        <argsstring></argsstring>
        <name>tg_F4</name>
        <qualifiedname>eos_nuclei::tg_F4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="514" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="514" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a0c84525c44c79e4320ef133c3cd6e1b0" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_Un</definition>
        <argsstring></argsstring>
        <name>tg_Un</name>
        <qualifiedname>eos_nuclei::tg_Un</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="515" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="515" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1ad42647c219ad62f7423cb2d9d6a5d4f6" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_Up</definition>
        <argsstring></argsstring>
        <name>tg_Up</name>
        <qualifiedname>eos_nuclei::tg_Up</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="516" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="516" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a60e60a375f8beb2ad39b61be54916367" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_msn</definition>
        <argsstring></argsstring>
        <name>tg_msn</name>
        <qualifiedname>eos_nuclei::tg_msn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="517" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="517" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a68bf7f276dc5453eca3fca821f8c97d6" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_msp</definition>
        <argsstring></argsstring>
        <name>tg_msp</name>
        <qualifiedname>eos_nuclei::tg_msp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="518" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="518" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a4a931b5aaf9df3a9449aa03ad9a11d3a" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_g</definition>
        <argsstring></argsstring>
        <name>tg_g</name>
        <qualifiedname>eos_nuclei::tg_g</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="519" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="519" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a4bd3b59e17f2d95cbf169616908096cb" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_dgdT</definition>
        <argsstring></argsstring>
        <name>tg_dgdT</name>
        <qualifiedname>eos_nuclei::tg_dgdT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="520" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="520" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1aee6292cf424f9351204441b8ce30be2f" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_sigma</definition>
        <argsstring></argsstring>
        <name>tg_sigma</name>
        <qualifiedname>eos_nuclei::tg_sigma</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="521" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="521" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a19d601be68cfda684729148306f5dbe6" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_omega</definition>
        <argsstring></argsstring>
        <name>tg_omega</name>
        <qualifiedname>eos_nuclei::tg_omega</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="522" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="522" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a3f74250a2d6fe46f41e8f4663ef4c534" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1tensor__grid" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::tensor_grid</ref></type>
        <definition>o2scl::tensor_grid eos_nuclei::tg_rho</definition>
        <argsstring></argsstring>
        <name>tg_rho</name>
        <qualifiedname>eos_nuclei::tg_rho</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="523" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="523" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Other parameter objects</header>
      <memberdef kind="variable" id="classeos__nuclei_1afce5fb5f9288e093c4f882a62a1eff5f" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__bool" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_bool</ref></type>
        <definition>o2scl::cli::parameter_bool eos_nuclei::p_inc_hrg</definition>
        <argsstring></argsstring>
        <name>p_inc_hrg</name>
        <qualifiedname>eos_nuclei::p_inc_hrg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="528" column="30" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="528" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a704214f3aa577b0a5696b69120803831" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__bool" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_bool</ref></type>
        <definition>o2scl::cli::parameter_bool eos_nuclei::p_survey_eqs</definition>
        <argsstring></argsstring>
        <name>p_survey_eqs</name>
        <qualifiedname>eos_nuclei::p_survey_eqs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="529" column="30" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="529" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a4558095e40049f6d2b96253e2c8482c3" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__bool" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_bool</ref></type>
        <definition>o2scl::cli::parameter_bool eos_nuclei::p_extend_frdm</definition>
        <argsstring></argsstring>
        <name>p_extend_frdm</name>
        <qualifiedname>eos_nuclei::p_extend_frdm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="530" column="30" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="530" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a40f7a07df5b1fc5f083b6607683ba14d" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__bool" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_bool</ref></type>
        <definition>o2scl::cli::parameter_bool eos_nuclei::p_show_all_nuclei</definition>
        <argsstring></argsstring>
        <name>p_show_all_nuclei</name>
        <qualifiedname>eos_nuclei::p_show_all_nuclei</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="531" column="30" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="531" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1ad632b8055ddb2a7793f41a194e4d1795" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__int" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_int</ref></type>
        <definition>o2scl::cli::parameter_int eos_nuclei::p_fd_A_max</definition>
        <argsstring></argsstring>
        <name>p_fd_A_max</name>
        <qualifiedname>eos_nuclei::p_fd_A_max</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="532" column="29" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="532" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a3f8925afd7f4de41d40f834e34ef9bf3" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__bool" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_bool</ref></type>
        <definition>o2scl::cli::parameter_bool eos_nuclei::p_recompute</definition>
        <argsstring></argsstring>
        <name>p_recompute</name>
        <qualifiedname>eos_nuclei::p_recompute</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="533" column="30" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="533" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a555f7b4054913327461106517f79d28d" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__bool" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_bool</ref></type>
        <definition>o2scl::cli::parameter_bool eos_nuclei::p_verify_only</definition>
        <argsstring></argsstring>
        <name>p_verify_only</name>
        <qualifiedname>eos_nuclei::p_verify_only</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="534" column="30" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="534" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1ade3866fc48028463c7c835442d7d0363" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__string" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_string</ref></type>
        <definition>o2scl::cli::parameter_string eos_nuclei::p_edge_list</definition>
        <argsstring></argsstring>
        <name>p_edge_list</name>
        <qualifiedname>eos_nuclei::p_edge_list</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="535" column="32" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="535" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a5f4c08d089d974b91bf45d789dd91727" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__string" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_string</ref></type>
        <definition>o2scl::cli::parameter_string eos_nuclei::p_ext_guess</definition>
        <argsstring></argsstring>
        <name>p_ext_guess</name>
        <qualifiedname>eos_nuclei::p_ext_guess</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="536" column="32" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="536" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1aec3ff2601bac9ab73f45c1dfb09eda02" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__int" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_int</ref></type>
        <definition>o2scl::cli::parameter_int eos_nuclei::p_six_neighbors</definition>
        <argsstring></argsstring>
        <name>p_six_neighbors</name>
        <qualifiedname>eos_nuclei::p_six_neighbors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="537" column="29" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="537" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1ad77de576bae71fb8e81673b2e9e807d1" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__bool" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_bool</ref></type>
        <definition>o2scl::cli::parameter_bool eos_nuclei::p_full_results</definition>
        <argsstring></argsstring>
        <name>p_full_results</name>
        <qualifiedname>eos_nuclei::p_full_results</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="538" column="30" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="538" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1aa41b4da957490f1b93fbdd9bc81ee728" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__bool" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_bool</ref></type>
        <definition>o2scl::cli::parameter_bool eos_nuclei::p_rnuc_less_rws</definition>
        <argsstring></argsstring>
        <name>p_rnuc_less_rws</name>
        <qualifiedname>eos_nuclei::p_rnuc_less_rws</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="539" column="30" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="539" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a3fd9e2feae434accf048f448f005c73d" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__bool" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_bool</ref></type>
        <definition>o2scl::cli::parameter_bool eos_nuclei::p_include_eg</definition>
        <argsstring></argsstring>
        <name>p_include_eg</name>
        <qualifiedname>eos_nuclei::p_include_eg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="540" column="30" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="540" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a2a48ce9f315d748fa4a0d52bbffe38c6" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__bool" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_bool</ref></type>
        <definition>o2scl::cli::parameter_bool eos_nuclei::p_propagate_points</definition>
        <argsstring></argsstring>
        <name>p_propagate_points</name>
        <qualifiedname>eos_nuclei::p_propagate_points</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="541" column="30" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="541" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a6a8c00a8fd74aa9bd595efb64683ffe0" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__bool" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_bool</ref></type>
        <definition>o2scl::cli::parameter_bool eos_nuclei::p_include_detail</definition>
        <argsstring></argsstring>
        <name>p_include_detail</name>
        <qualifiedname>eos_nuclei::p_include_detail</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="542" column="30" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="542" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a3dda8480375e0275294318c3b0aec51d" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__bool" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_bool</ref></type>
        <definition>o2scl::cli::parameter_bool eos_nuclei::p_strange_axis</definition>
        <argsstring></argsstring>
        <name>p_strange_axis</name>
        <qualifiedname>eos_nuclei::p_strange_axis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="543" column="30" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="543" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1af05574b96e9f8433d350760b33ddbdc9" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__double" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_double</ref></type>
        <definition>o2scl::cli::parameter_double eos_nuclei::p_mh_tol_rel</definition>
        <argsstring></argsstring>
        <name>p_mh_tol_rel</name>
        <qualifiedname>eos_nuclei::p_mh_tol_rel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="544" column="32" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="544" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a70c28ddbc7ded7525cb341f0cec82e94" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__double" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_double</ref></type>
        <definition>o2scl::cli::parameter_double eos_nuclei::p_max_time</definition>
        <argsstring></argsstring>
        <name>p_max_time</name>
        <qualifiedname>eos_nuclei::p_max_time</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="545" column="32" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="545" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a5d8c1d46c698d9aa6e933c1b8e70a736" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__string" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_string</ref></type>
        <definition>o2scl::cli::parameter_string eos_nuclei::p_nucleon_func</definition>
        <argsstring></argsstring>
        <name>p_nucleon_func</name>
        <qualifiedname>eos_nuclei::p_nucleon_func</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="546" column="32" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="546" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a61150726ea0811558024ed26d3d2367c" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__int" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_int</ref></type>
        <definition>o2scl::cli::parameter_int eos_nuclei::p_alg_mode</definition>
        <argsstring></argsstring>
        <name>p_alg_mode</name>
        <qualifiedname>eos_nuclei::p_alg_mode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="547" column="29" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="547" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a85a93ac08fb1b6c4016055a7b2eb3b3d" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__int" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_int</ref></type>
        <definition>o2scl::cli::parameter_int eos_nuclei::p_fixed_dist_alg</definition>
        <argsstring></argsstring>
        <name>p_fixed_dist_alg</name>
        <qualifiedname>eos_nuclei::p_fixed_dist_alg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="548" column="29" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="548" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1ac3ff86e1f1d5506e5f74db8435b7a962" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__int" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_int</ref></type>
        <definition>o2scl::cli::parameter_int eos_nuclei::p_function_verbose</definition>
        <argsstring></argsstring>
        <name>p_function_verbose</name>
        <qualifiedname>eos_nuclei::p_function_verbose</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="549" column="29" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="549" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a92d43e4a994e334a5000d8ab6e015f72" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__string" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_string</ref></type>
        <definition>o2scl::cli::parameter_string eos_nuclei::p_Ye_list</definition>
        <argsstring></argsstring>
        <name>p_Ye_list</name>
        <qualifiedname>eos_nuclei::p_Ye_list</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="550" column="32" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="550" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a9d1c51cb604ba83f9debb378078301c1" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__double" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_double</ref></type>
        <definition>o2scl::cli::parameter_double eos_nuclei::p_max_ratio</definition>
        <argsstring></argsstring>
        <name>p_max_ratio</name>
        <qualifiedname>eos_nuclei::p_max_ratio</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="551" column="32" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="551" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1aec90cff67945b9560619cb4516add781" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__double" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_double</ref></type>
        <definition>o2scl::cli::parameter_double eos_nuclei::p_file_update_time</definition>
        <argsstring></argsstring>
        <name>p_file_update_time</name>
        <qualifiedname>eos_nuclei::p_file_update_time</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="552" column="32" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="552" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a00ce6347b39d3bed4cde37a65d2217fa" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__int" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_int</ref></type>
        <definition>o2scl::cli::parameter_int eos_nuclei::p_file_update_iters</definition>
        <argsstring></argsstring>
        <name>p_file_update_iters</name>
        <qualifiedname>eos_nuclei::p_file_update_iters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="553" column="29" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="553" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1ac2e5b3410f1cc8bba78fb4f4fd1e0a43" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__string" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_string</ref></type>
        <definition>o2scl::cli::parameter_string eos_nuclei::p_nB_grid_spec</definition>
        <argsstring></argsstring>
        <name>p_nB_grid_spec</name>
        <qualifiedname>eos_nuclei::p_nB_grid_spec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="554" column="32" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="554" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a6c3159186083694169a1facc7c8bd3f7" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__string" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_string</ref></type>
        <definition>o2scl::cli::parameter_string eos_nuclei::p_Ye_grid_spec</definition>
        <argsstring></argsstring>
        <name>p_Ye_grid_spec</name>
        <qualifiedname>eos_nuclei::p_Ye_grid_spec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="555" column="32" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="555" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a085c4f10a505c02c83e1b6f4658c1b37" prot="public" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__string" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_string</ref></type>
        <definition>o2scl::cli::parameter_string eos_nuclei::p_T_grid_spec</definition>
        <argsstring></argsstring>
        <name>p_T_grid_spec</name>
        <qualifiedname>eos_nuclei::p_T_grid_spec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="556" column="32" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="556" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>MPI message values</header>
      <memberdef kind="variable" id="classeos__nuclei_1ad3cbdb0ace2ea7d0f82408e4ca66021c" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int eos_nuclei::message_continue</definition>
        <argsstring></argsstring>
        <name>message_continue</name>
        <qualifiedname>eos_nuclei::message_continue</qualifiedname>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="261" column="20" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a08709c65212e72fefa2c0c9741e3b7d5" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int eos_nuclei::message_done</definition>
        <argsstring></argsstring>
        <name>message_done</name>
        <qualifiedname>eos_nuclei::message_done</qualifiedname>
        <initializer>=1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="262" column="20" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Flag values</header>
      <memberdef kind="variable" id="classeos__nuclei_1a7da7cc86a531b33d8f22039bfcb63622" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int eos_nuclei::iflag_empty</definition>
        <argsstring></argsstring>
        <name>iflag_empty</name>
        <qualifiedname>eos_nuclei::iflag_empty</qualifiedname>
        <initializer>=0</initializer>
        <briefdescription>
<para>Point is empty. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="462" column="20" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a3bf59116e634ce79d04192044581b5e4" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int eos_nuclei::iflag_in_progress_empty</definition>
        <argsstring></argsstring>
        <name>iflag_in_progress_empty</name>
        <qualifiedname>eos_nuclei::iflag_in_progress_empty</qualifiedname>
        <initializer>=-1</initializer>
        <briefdescription>
<para>Point is in progress, and empty. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="464" column="20" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a85dd3228def3fdaba7c6c2796fb5e66e" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int eos_nuclei::iflag_in_progress_with_guess</definition>
        <argsstring></argsstring>
        <name>iflag_in_progress_with_guess</name>
        <qualifiedname>eos_nuclei::iflag_in_progress_with_guess</qualifiedname>
        <initializer>=-5</initializer>
        <briefdescription>
<para>Point is in progress, and has initial guess. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="466" column="20" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a01be0524b53a5b2ab21b2e694b796030" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int eos_nuclei::iflag_guess</definition>
        <argsstring></argsstring>
        <name>iflag_guess</name>
        <qualifiedname>eos_nuclei::iflag_guess</qualifiedname>
        <initializer>=5</initializer>
        <briefdescription>
<para>Point has initial guess. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="468" column="20" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos__nuclei_1a96b2d980473d1553b69bc39312b4b06a" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int eos_nuclei::iflag_done</definition>
        <argsstring></argsstring>
        <name>iflag_done</name>
        <qualifiedname>eos_nuclei::iflag_done</qualifiedname>
        <initializer>=10</initializer>
        <briefdescription>
<para>Point is finished. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="470" column="20" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="470" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions for the main algorithm</header>
      <memberdef kind="function" id="classeos__nuclei_1aae563f3bd21262b89651453b834f4d7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eos_nuclei::solve_nuclei_ld</definition>
        <argsstring>(double x2, size_t nv, const ubvector &amp;x, double nb, double ye, double T, int ix, double &amp;mun_gas, double &amp;mup_gas, o2scl::thermo &amp;th_gas)</argsstring>
        <name>solve_nuclei_ld</name>
        <qualifiedname>eos_nuclei::solve_nuclei_ld</qualifiedname>
        <param>
          <type>double</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nv</declname>
        </param>
        <param>
          <type>const <ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nb</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ye</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ix</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>mun_gas</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>mup_gas</declname>
        </param>
        <param>
          <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref> &amp;</type>
          <declname>th_gas</declname>
        </param>
        <briefdescription>
<para>Use only one of the two equations for a function for a root bracketing algorithm. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="564" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1af2977d2c5707b931f2c9d79977f4988e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eos_nuclei::solve_nuclei_min</definition>
        <argsstring>(size_t nv, const ubvector &amp;x, double nb, double ye, double T, double &amp;mun_gas, double &amp;mup_gas, o2scl::thermo &amp;th_gas)</argsstring>
        <name>solve_nuclei_min</name>
        <qualifiedname>eos_nuclei::solve_nuclei_min</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>nv</declname>
        </param>
        <param>
          <type>const <ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nb</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ye</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>mun_gas</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>mup_gas</declname>
        </param>
        <param>
          <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref> &amp;</type>
          <declname>th_gas</declname>
        </param>
        <briefdescription>
<para>Solve for the nuclei via minimization. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="571" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a40aac5b607cd8c5d7f0b5ab22380c9b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::solve_nuclei</definition>
        <argsstring>(size_t nv, const ubvector &amp;x, ubvector &amp;y, double nb, double ye, double T, int loc_verbose, double &amp;mun_gas, double &amp;mup_gas, o2scl::thermo &amp;th_gas, std::map&lt; std::string, double &gt; &amp;vdet)</argsstring>
        <name>solve_nuclei</name>
        <qualifiedname>eos_nuclei::solve_nuclei</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>nv</declname>
        </param>
        <param>
          <type>const <ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nb</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ye</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc_verbose</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>mun_gas</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>mup_gas</declname>
        </param>
        <param>
          <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref> &amp;</type>
          <declname>th_gas</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, double &gt; &amp;</type>
          <declname>vdet</declname>
        </param>
        <briefdescription>
<para>Construct equations to solve for a fixed baryon density and electron fraction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="579" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a534fa250430a6bee6e10d8d8368387e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::eos_fixed_ZN</definition>
        <argsstring>(double nb, double ye, double T, double &amp;log_xn, double &amp;log_xp, size_t nuc_Z1, size_t nuc_N1, o2scl::thermo &amp;thx, double &amp;mun_full, double &amp;mup_full)</argsstring>
        <name>eos_fixed_ZN</name>
        <qualifiedname>eos_nuclei::eos_fixed_ZN</qualifiedname>
        <param>
          <type>double</type>
          <declname>nb</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ye</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>log_xn</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>log_xp</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nuc_Z1</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nuc_N1</declname>
        </param>
        <param>
          <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref> &amp;</type>
          <declname>thx</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>mun_full</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>mup_full</declname>
        </param>
        <briefdescription>
<para>Determine the EOS presuming a fixed single heavy nucleus and solving for the log (base 10) of the free neutron and proton abundances. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="588" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a0a87adc1ff5b65ce4d033a6336cb932e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::store_point</definition>
        <argsstring>(size_t i_nB, size_t i_Ye, size_t i_T, double nB, double Ye, double T, o2scl::thermo &amp;th, double log_xn, double log_xp, double Zbar, double Nbar, double mun_full, double mup_full, ubvector &amp;X, double A_min, double A_max, double NmZ_min, double NmZ_max, double flag, std::map&lt; std::string, double &gt; &amp;vdet)</argsstring>
        <name>store_point</name>
        <qualifiedname>eos_nuclei::store_point</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i_nB</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>i_Ye</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>i_T</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nB</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Ye</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref> &amp;</type>
          <declname>th</declname>
        </param>
        <param>
          <type>double</type>
          <declname>log_xn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>log_xp</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Zbar</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Nbar</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mun_full</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mup_full</declname>
        </param>
        <param>
          <type><ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>X</declname>
        </param>
        <param>
          <type>double</type>
          <declname>A_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>A_max</declname>
        </param>
        <param>
          <type>double</type>
          <declname>NmZ_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>NmZ_max</declname>
        </param>
        <param>
          <type>double</type>
          <declname>flag</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, double &gt; &amp;</type>
          <declname>vdet</declname>
        </param>
        <briefdescription>
<para>Store data in the tensor objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="596" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a9860dc645b8d0378a4d5e19fa0f32808" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::eos_vary_ZN</definition>
        <argsstring>(double nb, double ye, double T, double &amp;log_xn, double &amp;log_xp, size_t &amp;nuc_Z1, size_t &amp;nuc_N1, o2scl::thermo &amp;thx, double &amp;mun_full, double &amp;mup_full, bool nu_nuclei=false)</argsstring>
        <name>eos_vary_ZN</name>
        <qualifiedname>eos_nuclei::eos_vary_ZN</qualifiedname>
        <param>
          <type>double</type>
          <declname>nb</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ye</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>log_xn</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>log_xp</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>nuc_Z1</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>nuc_N1</declname>
        </param>
        <param>
          <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref> &amp;</type>
          <declname>thx</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>mun_full</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>mup_full</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>nu_nuclei</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Determine the EOS allowing the Z and N of the nucleus to vary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="607" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1affdd30692a9b5ab5de04dedc1292c127" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::eos_fixed_dist</definition>
        <argsstring>(double nB, double Ye, double T, double &amp;log_xn, double &amp;log_xp, o2scl::thermo &amp;thx, double &amp;mun_full, double &amp;mup_full, int &amp;A_min, int &amp;A_max, int &amp;NmZ_min, int &amp;NmZ_max, std::map&lt; std::string, double &gt; &amp;vdet, bool dist_changed, bool no_nuclei)</argsstring>
        <name>eos_fixed_dist</name>
        <qualifiedname>eos_nuclei::eos_fixed_dist</qualifiedname>
        <param>
          <type>double</type>
          <declname>nB</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Ye</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>log_xn</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>log_xp</declname>
        </param>
        <param>
          <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref> &amp;</type>
          <declname>thx</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>mun_full</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>mup_full</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>A_min</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>A_max</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>NmZ_min</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>NmZ_max</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, double &gt; &amp;</type>
          <declname>vdet</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dist_changed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>no_nuclei</declname>
        </param>
        <briefdescription>
<para>Determine the EOS presuming a distribution of nuclei with fixed limits in A and <formula id="21">$ N-Z $</formula>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="617" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a8e5130033d82c8b74e2e186642fa109e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::eos_fixed_dist_fix_table</definition>
        <argsstring>(double nB, double Ye, double T, double &amp;log_xn, double &amp;log_xp, o2scl::thermo &amp;thx, double &amp;mun_full, double &amp;mup_full, int &amp;A_min, int &amp;A_max, int &amp;NmZ_min, int &amp;NmZ_max, bool dist_changed, bool no_nuclei)</argsstring>
        <name>eos_fixed_dist_fix_table</name>
        <qualifiedname>eos_nuclei::eos_fixed_dist_fix_table</qualifiedname>
        <param>
          <type>double</type>
          <declname>nB</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Ye</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>log_xn</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>log_xp</declname>
        </param>
        <param>
          <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref> &amp;</type>
          <declname>thx</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>mun_full</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>mup_full</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>A_min</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>A_max</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>NmZ_min</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>NmZ_max</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dist_changed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>no_nuclei</declname>
        </param>
        <briefdescription>
<para>Determine the EOS presuming a distribution of nuclei with fixed limits in A and <formula id="21">$ N-Z $</formula> but used to fix table only. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="627" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1aaec4a435a6806773068024b2aad1eea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::nuc_matter</definition>
        <argsstring>(double nB, double Ye, double T, double &amp;log_xn, double &amp;log_xp, double &amp;Zbar, double &amp;Nbar, o2scl::thermo &amp;thx, double &amp;mun_full, double &amp;mup_full, int &amp;A_min, int &amp;A_max, int &amp;NmZ_min, int &amp;NmZ_max, std::map&lt; std::string, double &gt; &amp;vdet)</argsstring>
        <name>nuc_matter</name>
        <qualifiedname>eos_nuclei::nuc_matter</qualifiedname>
        <param>
          <type>double</type>
          <declname>nB</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Ye</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>log_xn</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>log_xp</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>Zbar</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>Nbar</declname>
        </param>
        <param>
          <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref> &amp;</type>
          <declname>thx</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>mun_full</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>mup_full</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>A_min</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>A_max</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>NmZ_min</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>NmZ_max</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, double &gt; &amp;</type>
          <declname>vdet</declname>
        </param>
        <briefdescription>
<para>Compute the EOS presuming homogeneous nuclear matter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="635" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1ae21ac91d7c6ca23d42f30153b461a973" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::nuc_matter_muons</definition>
        <argsstring>(size_t nv, const ubvector &amp;x, ubvector &amp;y, double nB, double Ye, double T, std::map&lt; std::string, double &gt; &amp;vdet)</argsstring>
        <name>nuc_matter_muons</name>
        <qualifiedname>eos_nuclei::nuc_matter_muons</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>nv</declname>
        </param>
        <param>
          <type>const <ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nB</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Ye</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, double &gt; &amp;</type>
          <declname>vdet</declname>
        </param>
        <briefdescription>
<para>Compute muons in nuclear matter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="645" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a1c1b4b4617ed20e5a268ae56db02c639" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::new_muons</definition>
        <argsstring>(size_t nv, const ubvector &amp;x, ubvector &amp;y, double nB, double Ye, double T, std::map&lt; std::string, double &gt; &amp;vdet, o2scl::eos_sn_base &amp;eso)</argsstring>
        <name>new_muons</name>
        <qualifiedname>eos_nuclei::new_muons</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>nv</declname>
        </param>
        <param>
          <type>const <ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nB</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Ye</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, double &gt; &amp;</type>
          <declname>vdet</declname>
        </param>
        <param>
          <type><ref refid="classo2scl_1_1eos__sn__base" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::eos_sn_base</ref> &amp;</type>
          <declname>eso</declname>
        </param>
        <briefdescription>
<para>Compute muons. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="651" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a49ab1d375fad40db59052d1c93c77162" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::eos_vary_dist</definition>
        <argsstring>(double nB, double Ye, double T, double &amp;log_xn, double &amp;log_xp, double &amp;Zbar, double &amp;Nbar, o2scl::thermo &amp;thx, double &amp;mun_full, double &amp;mup_full, int &amp;A_min, int &amp;A_max, int &amp;NmZ_min, int &amp;NmZ_max, std::map&lt; std::string, double &gt; &amp;vdet, bool dist_changed, bool no_nuclei)</argsstring>
        <name>eos_vary_dist</name>
        <qualifiedname>eos_nuclei::eos_vary_dist</qualifiedname>
        <param>
          <type>double</type>
          <declname>nB</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Ye</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>log_xn</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>log_xp</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>Zbar</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>Nbar</declname>
        </param>
        <param>
          <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref> &amp;</type>
          <declname>thx</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>mun_full</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>mup_full</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>A_min</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>A_max</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>NmZ_min</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>NmZ_max</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, double &gt; &amp;</type>
          <declname>vdet</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dist_changed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>no_nuclei</declname>
        </param>
        <briefdescription>
<para>Determine the EOS presuming a distribution of nuclei and optimizing the limits in A and <formula id="21">$ N-Z $</formula>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="659" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1aceee50342315ece4e551fe9fb12918aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::generate_table</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>generate_table</name>
        <qualifiedname>eos_nuclei::generate_table</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Generate an EOS table. </para>
        </briefdescription>
        <detaileddescription>
<para>[out file]</para>
<para>Help. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="672" column="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>EOS post-processing functions</header>
      <memberdef kind="function" id="classeos__nuclei_1ad3a50f4aeae4af6f4c137cea6c0d2ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::eos_deriv</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>eos_deriv</name>
        <qualifiedname>eos_nuclei::eos_deriv</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Compute derivatives numerically. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;no parameters&gt;</para>
<para>Help. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="683" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a157a32216b4cb525ff782dd8018488c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::eos_deriv_v2</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>eos_deriv_v2</name>
        <qualifiedname>eos_nuclei::eos_deriv_v2</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Desc. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="687" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1aa73cb0cc717abbee7d37004b5c1cd347" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::eos_second_deriv</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>eos_second_deriv</name>
        <qualifiedname>eos_nuclei::eos_second_deriv</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Compute second derivatives numerically. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="691" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1af76d052dfa9dd1b11245f66c74d0a4eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::add_eg</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>add_eg</name>
        <qualifiedname>eos_nuclei::add_eg</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Add electrons and photons. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;no parameters&gt;</para>
<para>Help. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="699" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a5f3e04dca895ed3694189561efc431c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::eg_table</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>eg_table</name>
        <qualifiedname>eos_nuclei::eg_table</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Construct an electrons and photon table. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;output file&gt;</para>
<para>Help. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="707" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a063ca5e97144d1d9b9ab08e715c88110" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::edit_data</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>edit_data</name>
        <qualifiedname>eos_nuclei::edit_data</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Edit an EOS table. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;select func.&gt; [tensor to modify] [value func.]</para>
<para>The <computeroutput>edit-data</computeroutput> command counts the number of (nB,Ye,T) points matching the criteria specified in &lt;select func.&gt;. If the remaining two arguments are given, then the values of [tensor to modify] for the selected points are changed to the result of the function [value func.]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="719" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a1870d4fe51570422d3e1948510e87bec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::merge_tables</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>merge_tables</name>
        <qualifiedname>eos_nuclei::merge_tables</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Merge two output tables to create a third. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;input file 1&gt; &lt;input file 2&gt; &lt;output file&gt;</para>
<para>Tables can only be merged if their grids and settings match. If the Fint table is anomalously small or large or not-finite, then this function calls the error handler. Otherwise, for each point in (nB,Ye,T), there are four reasons for which a point is copied from the second table to the first: (i) they both have flag=10 but the second has a smaller Fint, (ii) the second has flag=10 but the first does not, (iii) they both have flags less than 10 but the second has a non-zero flag with a smaller Fint, or (iv) the second table has a non-zero flag and the first does not. After the merge, the number of points modified is reported. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="736" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a5316ad41fe6d07c03f9d03b4536db4bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::compare_tables</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>compare_tables</name>
        <qualifiedname>eos_nuclei::compare_tables</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Compare two output tables. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;input file 1&gt; &lt;input file 2&gt; [quantity]</para>
<para>Compare two EOS tables. If the optional argument &quot;)+
is unspecified, then all quantities are compared. If [quantity] &quot;+ is specified, then only that particular quantitiy is compared. &quot;+
Only points for which flag=10 in both tables are compared. &quot;+ If derivs_computed is true, then Pint, mun, and &quot;+
mup are available for comparisons. If with_leptons is &quot;+ true, then &quot;+
F, E, P, and S, are also available for comparisons. Any current &quot;+ EOS data stored is cleared before the comparison. If the "+ nB, Ye, or T grids do not match, then no comparison is performed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="753" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1ade7ea962d1f3bb5f5bec604850bfcff9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::stats</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>stats</name>
        <qualifiedname>eos_nuclei::stats</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Output convergence statistics and simple checks. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;no parameters&gt;</para>
<para>If an EOS is loaded, this function counts the number of points with each flag value, checks that the nuclear fractions add up to 1, checks that the free energy internal energy, and entropy are consistent, and checks the thermodynamic identity. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="765" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a59e80bdb0d3d6a663a3be4df506c9c74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::point_nuclei</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>point_nuclei</name>
        <qualifiedname>eos_nuclei::point_nuclei</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Compute and/or show EOS results at one (n_B,Y_e,T) point. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;n_B&gt; &lt;Y_e&gt; &lt;T (MeV)&gt; [log(xn) log(xp) Z N] [alg_mode 2-4: log(xn) log(xp) A_min A_max NmZ_min NmZ_max] [fname]</para>
<para>If an EOS is loaded, then the n_B, Y_e, and T values are modified to ensure that they lie on a grid point. If an initial guess is specified on the command line, it is used even if there is a good guess already in the table. If the flag is not 10 or if <ref refid="classeos__nuclei_1a765a1a973e5ad6f59fb78c996c0755b0" kindref="member">recompute</ref> is true, then the EOS is recomputed. If an EOS is loaded or the recompute was successful, then the results are output to the screen. If the point was successful it is stored in the current tables. If <ref refid="classeos__nuclei_1a149f15c25567f030d59ad187ffbffaff" kindref="member">show_all_nuclei</ref> is true, then a file named <computeroutput>dist.o2</computeroutput> is created which holds the full nuclear distribution. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="783" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a6851712e5fcbb0a02eaf79e3b2164bbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::test_random</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>test_random</name>
        <qualifiedname>eos_nuclei::test_random</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Test an EOS at random points in (nB,Ye,T) </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;n_tests&gt; ["lg"]</para>
<para>This function tests the EOS at randomly chosen points in (nB,Ye,T) space. If the new calculation and the stored result disagree, then the new result is stored in the table. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="793" column="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>File I/O functions</header>
      <memberdef kind="function" id="classeos__nuclei_1af36f2d3c15c1c7059d3878a9765f2a3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::load</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>load</name>
        <qualifiedname>eos_nuclei::load</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Load an EOS table. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;filename&gt;</para>
<para>Loads an EOS table in to memory. In the case where MPI is used, only one MPI rank reads the table at a time. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="805" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a5d7466960fa588348c42d83561e0ae07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::output</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>output</name>
        <qualifiedname>eos_nuclei::output</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Output an EOS table to a file. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;filename&gt;</para>
<para>Loads an EOS table in to memory. In the case where MPI is used, only one MPI rank writes the table at a time. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="814" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1ae8a14d1cd9bd89aade37fe44507226ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::write_results</definition>
        <argsstring>(std::string fname)</argsstring>
        <name>write_results</name>
        <qualifiedname>eos_nuclei::write_results</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
<para>Write results to an HDF5 file. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="future_1_future000001"><xreftitle>Idea for Future</xreftitle><xrefdescription><para>Eventually replace this with eos_sn_base::output()? </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="820" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a0a17e1d732e68d9df401491bcc282d87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::read_results</definition>
        <argsstring>(std::string fname)</argsstring>
        <name>read_results</name>
        <qualifiedname>eos_nuclei::read_results</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
<para>Read results from an HDF5 file. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="future_1_future000002"><xreftitle>Idea for Future</xreftitle><xrefdescription><para>Eventually replace this with eos_sn_base::load()? </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="826" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a2fdd3ed505fccdb2ccd0c76f74461aef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::write_nuclei</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>write_nuclei</name>
        <qualifiedname>eos_nuclei::write_nuclei</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Write the nuclear masses to an HDF5 file. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;output file&gt;</para>
<para>Help. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="834" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a589e9ce90ed45f886adf9d57d1f05a64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eos_nuclei::load_nuclei</definition>
        <argsstring>()</argsstring>
        <name>load_nuclei</name>
        <qualifiedname>eos_nuclei::load_nuclei</qualifiedname>
        <briefdescription>
<para>Load nuclear masses. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called in <computeroutput>main()</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="841" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1ad9e6df69a1d17e370375477ae090de08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eos_nuclei::write_nuclei</definition>
        <argsstring>(std::string fname)</argsstring>
        <name>write_nuclei</name>
        <qualifiedname>eos_nuclei::write_nuclei</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
<para>Write nuclear masses to a file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="845" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Miscellaneous functions</header>
      <memberdef kind="function" id="classeos__nuclei_1a740b74ccb19bac55a9d067dc15a618a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void eos_nuclei::setup_cli</definition>
        <argsstring>(o2scl::cli &amp;cli)</argsstring>
        <name>setup_cli</name>
        <qualifiedname>eos_nuclei::setup_cli</qualifiedname>
        <param>
          <type><ref refid="classo2scl_1_1cli" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli</ref> &amp;</type>
          <declname>cli</declname>
        </param>
        <briefdescription>
<para>Setup the command-line interface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="852" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a4ed2d01020c376d09c7e80d4691a0002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eos_nuclei::new_table</definition>
        <argsstring>()</argsstring>
        <name>new_table</name>
        <qualifiedname>eos_nuclei::new_table</qualifiedname>
        <briefdescription>
<para>Initialize tensors for a new EOS table. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="856" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a5d1fa0a49d55a9a7ceecb6f2dc814f85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::check_virial</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>check_virial</name>
        <qualifiedname>eos_nuclei::check_virial</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Check the virial EOS. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;no parameters&gt;</para>
<para>This function checks the solver by using it to compute the EOS over a wide range of densities and temperatures This function is particularly good for checking to make sure that the virial part of the EOS does not lead to any discontinuities. For example, o2graph -read check_virial.o2 zn -Ye-slice 0.3 -set logz 1 -den-plot slice -show.</para>
<para>This function creates a file &apos;check_virial.o2&apos; with four tensor_grid objects which store the neutron and proton fugacities. This file can be plotted with, e.g. o2graph -set logz 1 -read check_virial.o2 zn -set logx 1 -set logy 1 -set colbar 1 -to-table3d 0 2 slice 0.01 -den-plot slice -show. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="876" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a53160bce70df3565db4721db3920fed8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::increase_density</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>increase_density</name>
        <qualifiedname>eos_nuclei::increase_density</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Use low densities to improve results at high densities. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;nB low&gt; &lt;nB high&gt; &lt;Ye low&gt; &lt;Ye high&gt; &lt;T low&gt; &lt;T high&gt; &lt;output
file&gt;</para>
<para>This function computes the EOS at higher densities using initial guess from lower densities. It is particularly helpful in getting the phase transition between nuclei and nuclear matter correct. The outermost loop is temperature, the second loop is electron fraction and the inner loop is density. This function requires a table has been loaded and the EOS is specified. It has no parallelization support. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="891" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a782cead037ec487215ed702046efbf94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::fix_cc</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>fix_cc</name>
        <qualifiedname>eos_nuclei::fix_cc</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Increase nB to optimize the phase transition. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;output file&gt;</para>
<para>Help </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="899" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1adc76328f89a19ae582e33e94f5fdf012" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::verify</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>verify</name>
        <qualifiedname>eos_nuclei::verify</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Verify the EOS. </para>
        </briefdescription>
        <detaileddescription>
<para>&quot;random&quot; &lt;n_tests&gt; &lt;output file&gt;, &quot;random_lg&quot; &lt;n_tests&gt; &lt;output file&gt;, &quot;all&quot; &lt;output file&gt;, &quot;all_lg&quot; &lt;output
file&gt;, or &quot;point&quot; &lt;output file&gt; &lt;nB&gt; &lt;Ye&gt; &lt;T&gt;</para>
<para>Verify the EOS, recompute if a point fails and the write final results to the specified output file. This function only verifies that the baryon density and electron fraction equations are solved to within the current tolerance and does not attempt to solve them again. The test-random function is different, it actually re-solves the equations to show the answer is correct. Thus, this function requires a bit less running time at each point. The first argument is a mode parameter which determines which points will be verified. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="918" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1aacc21e32b0592eeb32aa4d4fbc5446d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::mcarlo_nuclei</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>mcarlo_nuclei</name>
        <qualifiedname>eos_nuclei::mcarlo_nuclei</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Monte Carlo results with nuclei. </para>
        </briefdescription>
        <detaileddescription>
<para>Params.</para>
<para>Help. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="926" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1ab2f73f5619e98bf20d0b8eb311fdf3b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::mcarlo_nuclei2</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>mcarlo_nuclei2</name>
        <qualifiedname>eos_nuclei::mcarlo_nuclei2</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Monte Carlo results with nuclei (v2) </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;nB&gt; &lt;Ye&gt; &lt;T&gt; &lt;N&gt; &lt;filename&gt;</para>
<para>Help </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="934" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a346357bfcc8220ed56316ed23686d53a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::mcarlo_beta</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>mcarlo_beta</name>
        <qualifiedname>eos_nuclei::mcarlo_beta</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Monte Carlo neutrino opacity in beta equilibrium. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;filename&gt; [n_point]</para>
<para>Help </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="942" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a8f6e17f580929833eeb11ac054274b69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::mcarlo_neutron</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>mcarlo_neutron</name>
        <qualifiedname>eos_nuclei::mcarlo_neutron</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Monte Carlo neutrino opacity in pure neutron matter. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;filename&gt; [n_point]</para>
<para>Help </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="950" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1abc6f1bc0f5b05dd7cc9cf6d1b6fd3f6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eos_nuclei::compute_X</definition>
        <argsstring>(double nB, ubvector &amp;X)</argsstring>
        <name>compute_X</name>
        <qualifiedname>eos_nuclei::compute_X</qualifiedname>
        <param>
          <type>double</type>
          <declname>nB</declname>
        </param>
        <param>
          <type><ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>X</declname>
        </param>
        <briefdescription>
<para>Compute the baryon number fractions and put them in <computeroutput>X</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="953" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a3d212298dad98cae2d6d1310c52a136c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::select_high_T_internal</definition>
        <argsstring>(int option)</argsstring>
        <name>select_high_T_internal</name>
        <qualifiedname>eos_nuclei::select_high_T_internal</qualifiedname>
        <param>
          <type>int</type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>Select high-temperature EOS. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function is called by the constructor and thus cannot be virtual </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="960" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a20563ca9ef25a2a3d6dc44c3c3105206" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::stability</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>stability</name>
        <qualifiedname>eos_nuclei::stability</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Compute the second derivatives and the stability matrix. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;output file&gt;</para>
<para>The <computeroutput>stability</computeroutput> command creates an output file with several additional data objects for the second derivatives of the free energy, the eigenvalues of the curvature matrix, and the squared speed of sound. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="971" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a5f19d4a4c83e3d76edf03e01fe8e3df6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::select_high_T</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>select_high_T</name>
        <qualifiedname>eos_nuclei::select_high_T</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Select the high-temperature Skyrme EOS. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;index&gt;</para>
<para>Select 0 for the original DSH fit, 1 for NRAPR, 2 for Sk chi 414, 3 for Skchi450, 4 for Skchi500, 5 for ?, "+ and 6 for Sk chi m* (the default). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="982" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1ab940f90e1dc234212bd9d20bfd4c5e0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eos_nuclei::f_min_search</definition>
        <argsstring>(size_t nvar, const ubvector &amp;x, double nb, double ye, double T)</argsstring>
        <name>f_min_search</name>
        <qualifiedname>eos_nuclei::f_min_search</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>nvar</declname>
        </param>
        <param>
          <type>const <ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nb</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ye</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <briefdescription>
<para>Compute eos with nuclei by searching minimum. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="986" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1aa13a2c14da94d5d854399dc357410cb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::init_function</definition>
        <argsstring>(size_t dim, const ubvector &amp;x, ubvector &amp;y)</argsstring>
        <name>init_function</name>
        <qualifiedname>eos_nuclei::init_function</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>const <ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Initialization for differential evolution approach. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="991" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a80e2a3f16b57acaeae0352a665986e2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::maxwell</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>maxwell</name>
        <qualifiedname>eos_nuclei::maxwell</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Maxwell construction. </para>
        </briefdescription>
        <detaileddescription>
<para>Params.</para>
<para>Help. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="999" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos__nuclei_1a90757fda0ca76057b31e58215d7d3079" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos_nuclei::max_fun</definition>
        <argsstring>(size_t nv, const ubvector &amp;x, ubvector &amp;y, o2scl::interp_vec&lt; std::vector&lt; double &gt;, ubvector &gt; &amp;itp_P, o2scl::interp_vec&lt; std::vector&lt; double &gt;, ubvector &gt; &amp;itp_mun)</argsstring>
        <name>max_fun</name>
        <qualifiedname>eos_nuclei::max_fun</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>nv</declname>
        </param>
        <param>
          <type>const <ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classo2scl_1_1interp__vec" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::interp_vec</ref>&lt; std::vector&lt; double &gt;, <ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &gt; &amp;</type>
          <declname>itp_P</declname>
        </param>
        <param>
          <type><ref refid="classo2scl_1_1interp__vec" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::interp_vec</ref>&lt; std::vector&lt; double &gt;, <ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &gt; &amp;</type>
          <declname>itp_mun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="1001" column="7"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Solve for the EOS including nuclei. </para>
    </briefdescription>
    <detaileddescription>
<para><verbatim>embed:rst

.. todo::

   Class eos_nuclei:

   - Rename n_nB2 to n_nB, etc.
   - Make child of eos_sn_base
   - Use \c loaded instead of testing n_nB2==0
   - Move select_high_T to the parent
   - 1/15/22: I&apos;m not sure if fix_cc() is really useful or 
     not anymore?
   - 1/15/22: I&apos;m not sure the non-derivative virial solver
     is needed anymore?
   - Future: Allow different form for the NS fit
   - Future: Allow user to specify where data files are
     located or to manually specify the nuclear model?
   - Future: Allow RMF rather than just Skyrme.</verbatim></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>eos</label>
        <link refid="classeos"/>
      </node>
      <node id="1">
        <label>eos_nuclei</label>
        <link refid="classeos__nuclei"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9">
        <label>o2scl::convert_units&lt; double &gt;</label>
        <link refid="classo2scl_1_1convert__units" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="10" relation="usage">
          <edgelabel>fc</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>o2scl::cubic_real_coeff_gsl2&lt; fp_t &gt;</label>
        <link refid="classo2scl_1_1cubic__real__coeff__gsl2" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>eos</label>
        <link refid="classeos"/>
        <childnode refid="3" relation="usage">
          <edgelabel>UNEDF_tab</edgelabel>
          <edgelabel>nstar_tab</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>rng</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>p_verbose</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>p_include_muons</edgelabel>
          <edgelabel>p_ns_record</edgelabel>
          <edgelabel>p_old_ns_fit</edgelabel>
          <edgelabel>p_select_cs2_test</edgelabel>
          <edgelabel>p_test_ns_cs2</edgelabel>
          <edgelabel>p_use_alt_eos</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>p_a_virial</edgelabel>
          <edgelabel>p_b_virial</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>elep</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>photon</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>vsd</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>sk</edgelabel>
          <edgelabel>sk_Tcorr</edgelabel>
          <edgelabel>sk_alt</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>rmf</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>rmf_hyp</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>eos_Tcorr</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>ecv</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>eosp_alt</edgelabel>
        </childnode>
      </node>
      <node id="51">
        <label>eos_crust_virial_v2</label>
        <link refid="classeos__crust__virial__v2"/>
        <childnode refid="52" relation="public-inheritance">
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>iv_ba</edgelabel>
          <edgelabel>iv_bpna</edgelabel>
        </childnode>
      </node>
      <node id="89">
        <label>eos_had_lim_holt</label>
        <link refid="classeos__had__lim__holt"/>
        <childnode refid="41" relation="public-inheritance">
        </childnode>
      </node>
      <node id="88">
        <label>eos_had_skyrme_ext</label>
        <link refid="classeos__had__skyrme__ext"/>
        <childnode refid="40" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>eos_nuclei</label>
        <link refid="classeos__nuclei"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>pfuncs</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>relb</edgelabel>
        </childnode>
        <childnode refid="75" relation="usage">
          <edgelabel>effb</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>m95</edgelabel>
        </childnode>
        <childnode refid="61" relation="usage">
          <edgelabel>hfb</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>ame</edgelabel>
        </childnode>
        <childnode refid="78" relation="usage">
          <edgelabel>frdm</edgelabel>
        </childnode>
        <childnode refid="80" relation="usage">
          <edgelabel>nm_fit</edgelabel>
        </childnode>
        <childnode refid="83" relation="usage">
          <edgelabel>nuc_alpha</edgelabel>
          <edgelabel>nuc_deut</edgelabel>
          <edgelabel>nuc_he3</edgelabel>
          <edgelabel>nuc_heavy</edgelabel>
          <edgelabel>nuc_li4</edgelabel>
          <edgelabel>nuc_trit</edgelabel>
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>iqg</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>mh</edgelabel>
        </childnode>
        <childnode refid="84" relation="usage">
          <edgelabel>rbg</edgelabel>
        </childnode>
        <childnode refid="85" relation="usage">
          <edgelabel>part_func</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>Ec</edgelabel>
          <edgelabel>Sneut</edgelabel>
          <edgelabel>Sprot</edgelabel>
          <edgelabel>vomega</edgelabel>
          <edgelabel>vomega_prime</edgelabel>
        </childnode>
        <childnode refid="86" relation="usage">
          <edgelabel>vi</edgelabel>
        </childnode>
        <childnode refid="87" relation="usage">
          <edgelabel>slack</edgelabel>
        </childnode>
        <childnode refid="88" relation="usage">
          <edgelabel>skyrme_ext</edgelabel>
        </childnode>
        <childnode refid="89" relation="usage">
          <edgelabel>lim_holt</edgelabel>
        </childnode>
        <childnode refid="90" relation="usage">
          <edgelabel>tg_A</edgelabel>
          <edgelabel>tg_A_max</edgelabel>
          <edgelabel>tg_A_min</edgelabel>
          <edgelabel>tg_E</edgelabel>
          <edgelabel>tg_Eint</edgelabel>
          <edgelabel>tg_F</edgelabel>
          <edgelabel>tg_F1</edgelabel>
          <edgelabel>tg_F2</edgelabel>
          <edgelabel>tg_F3</edgelabel>
          <edgelabel>tg_F4</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>p_extend_frdm</edgelabel>
          <edgelabel>p_full_results</edgelabel>
          <edgelabel>p_inc_hrg</edgelabel>
          <edgelabel>p_include_detail</edgelabel>
          <edgelabel>p_include_eg</edgelabel>
          <edgelabel>p_propagate_points</edgelabel>
          <edgelabel>p_recompute</edgelabel>
          <edgelabel>p_rnuc_less_rws</edgelabel>
          <edgelabel>p_show_all_nuclei</edgelabel>
          <edgelabel>p_strange_axis</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>p_alg_mode</edgelabel>
          <edgelabel>p_fd_A_max</edgelabel>
          <edgelabel>p_file_update_iters</edgelabel>
          <edgelabel>p_fixed_dist_alg</edgelabel>
          <edgelabel>p_function_verbose</edgelabel>
          <edgelabel>p_six_neighbors</edgelabel>
        </childnode>
        <childnode refid="92" relation="usage">
          <edgelabel>p_T_grid_spec</edgelabel>
          <edgelabel>p_Ye_grid_spec</edgelabel>
          <edgelabel>p_Ye_list</edgelabel>
          <edgelabel>p_edge_list</edgelabel>
          <edgelabel>p_ext_guess</edgelabel>
          <edgelabel>p_nB_grid_spec</edgelabel>
          <edgelabel>p_nucleon_func</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>p_file_update_time</edgelabel>
          <edgelabel>p_max_ratio</edgelabel>
          <edgelabel>p_max_time</edgelabel>
          <edgelabel>p_mh_tol_rel</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>o2scl::find_constants&lt; fp_t &gt;</label>
        <link refid="classo2scl_1_1find__constants" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="66">
        <label>o2scl::inte&lt; func_t &gt;</label>
        <link refid="classo2scl_1_1inte" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="8">
        <label>o2scl::interp_base&lt; vec_t, vec2_t &gt;</label>
        <link refid="classo2scl_1_1interp__base" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="7" relation="usage">
          <edgelabel>svx</edgelabel>
        </childnode>
      </node>
      <node id="53">
        <label>o2scl::interp_vec&lt; std::vector&lt; double &gt; &gt;</label>
        <link refid="classo2scl_1_1interp__vec" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>itp</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>o2scl::interp_vec&lt; vec_t &gt;</label>
        <link refid="classo2scl_1_1interp__vec" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>itp</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>o2scl::jacobian&lt; func_t, vec_t, mat_t &gt;</label>
        <link refid="classo2scl_1_1jacobian" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="20">
        <label>o2scl::jacobian_gsl&lt; func_t, vec_t, mat_t &gt;</label>
        <link refid="classo2scl_1_1jacobian__gsl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
      </node>
      <node id="77">
        <label>boost::numeric::ublas::matrix&lt; double &gt;</label>
        <link refid="classboost_1_1numeric_1_1ublas_1_1matrix" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="70">
        <label>o2scl::bessel_K_exp_integ_gsl</label>
        <link refid="classo2scl_1_1bessel__K__exp__integ__gsl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="36">
        <label>o2scl::boson</label>
        <link refid="classo2scl_1_1boson" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="37" relation="public-inheritance">
        </childnode>
      </node>
      <node id="75">
        <label>o2scl::boson_eff</label>
        <link refid="classo2scl_1_1boson__eff" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="69" relation="public-inheritance">
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>def_density_mroot</edgelabel>
        </childnode>
        <childnode refid="76" relation="usage">
          <edgelabel>def_psi_root</edgelabel>
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>Pmnb</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>density_mroot</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>psi_root</edgelabel>
        </childnode>
      </node>
      <node id="68">
        <label>o2scl::boson_rel</label>
        <link refid="classo2scl_1_1boson__rel" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="69" relation="public-inheritance">
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>def_density_mroot</edgelabel>
        </childnode>
        <childnode refid="71" relation="usage">
          <edgelabel>def_nit</edgelabel>
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>def_dit</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>dit</edgelabel>
          <edgelabel>nit</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>density_mroot</edgelabel>
        </childnode>
      </node>
      <node id="69">
        <label>o2scl::boson_thermo</label>
        <link refid="classo2scl_1_1boson__thermo" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="70" relation="usage">
          <edgelabel>be_integ</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>o2scl::cli::parameter</label>
        <link refid="classo2scl_1_1cli_1_1parameter" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="14">
        <label>o2scl::cli::parameter_bool</label>
        <link refid="classo2scl_1_1cli_1_1parameter__bool" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>o2scl::cli::parameter_double</label>
        <link refid="classo2scl_1_1cli_1_1parameter__double" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>o2scl::cli::parameter_int</label>
        <link refid="classo2scl_1_1cli_1_1parameter__int" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="92">
        <label>o2scl::cli::parameter_string</label>
        <link refid="classo2scl_1_1cli_1_1parameter__string" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>o2scl::cubic_real&lt; class fp_t &gt;</label>
        <link refid="classo2scl_1_1cubic__real" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>o2scl::cubic_real_coeff&lt; class fp_t, class cx_t &gt;</label>
        <link refid="classo2scl_1_1cubic__real__coeff" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="47">
        <label>o2scl::deriv_base&lt; class func_t, class fp_t &gt;</label>
        <link refid="classo2scl_1_1deriv__base" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="46">
        <label>o2scl::deriv_gsl&lt; class func_t, class fp_t &gt;</label>
        <link refid="classo2scl_1_1deriv__gsl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="47" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>o2scl::eos_base</label>
        <link refid="classo2scl_1_1eos__base" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="38" relation="usage">
          <edgelabel>def_thermo</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>eos_thermo</edgelabel>
        </childnode>
      </node>
      <node id="52">
        <label>o2scl::eos_crust_virial</label>
        <link refid="classo2scl_1_1eos__crust__virial" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="49" relation="public-inheritance">
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>alpha</edgelabel>
          <edgelabel>deuteron</edgelabel>
        </childnode>
      </node>
      <node id="43">
        <label>o2scl::eos_had_base</label>
        <link refid="classo2scl_1_1eos__had__base" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="44" relation="public-inheritance">
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>def_deriv</edgelabel>
          <edgelabel>def_deriv2</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>beta_mroot</edgelabel>
          <edgelabel>def_mroot</edgelabel>
          <edgelabel>def_sat_mroot</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>eos_mroot</edgelabel>
          <edgelabel>sat_mroot</edgelabel>
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>sat_deriv</edgelabel>
          <edgelabel>sat_deriv2</edgelabel>
        </childnode>
      </node>
      <node id="48">
        <label>o2scl::eos_had_rmf</label>
        <link refid="classo2scl_1_1eos__had__rmf" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="49" relation="public-inheritance">
        </childnode>
      </node>
      <node id="50">
        <label>o2scl::eos_had_rmf_hyp</label>
        <link refid="classo2scl_1_1eos__had__rmf__hyp" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="48" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>o2scl::eos_had_skyrme</label>
        <link refid="classo2scl_1_1eos__had__skyrme" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="41" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>o2scl::eos_had_temp_base</label>
        <link refid="classo2scl_1_1eos__had__temp__base" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="43" relation="public-inheritance">
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>fet</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>def_fet</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>o2scl::eos_had_temp_eden_base</label>
        <link refid="classo2scl_1_1eos__had__temp__eden__base" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="49">
        <label>o2scl::eos_had_temp_pres_base</label>
        <link refid="classo2scl_1_1eos__had__temp__pres__base" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="39">
        <label>o2scl::eos_had_virial</label>
        <link refid="classo2scl_1_1eos__had__virial" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="16">
        <label>o2scl::eos_leptons</label>
        <link refid="classo2scl_1_1eos__leptons" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="17" relation="usage">
          <edgelabel>mh</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>frel</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>ph</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>th</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>o2scl::fermion_rel_tl&lt; class fermion_t, class fd_inte_t, class be_inte_t, class inte_t, class density_root_t, class root_t, class func_t, class fp_t &gt;</label>
        <link refid="classo2scl_1_1fermion__rel__tl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="25" relation="public-inheritance">
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>alt_solver</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>density_root</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>o2scl::fermion_thermo_tl&lt; class fermion_t, class fd_inte_t, class be_inte_t, class root_t, class func_t, class fp_t &gt;</label>
        <link refid="classo2scl_1_1fermion__thermo__tl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>crcg2</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>massless_root</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>o2scl::fermion_zerot_tl&lt; class fp_t &gt;</label>
        <link refid="classo2scl_1_1fermion__zerot__tl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="74">
        <label>o2scl::inte&lt; class func_t, class fp_t &gt;</label>
        <link refid="classo2scl_1_1inte" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="65">
        <label>o2scl::inte_gsl</label>
        <link refid="classo2scl_1_1inte__gsl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="64">
        <label>o2scl::inte_kronrod_gsl&lt; class func_t &gt;</label>
        <link refid="classo2scl_1_1inte__kronrod__gsl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="65" relation="public-inheritance">
        </childnode>
        <childnode refid="66" relation="public-inheritance">
        </childnode>
        <childnode refid="67" relation="usage">
          <edgelabel>w</edgelabel>
        </childnode>
      </node>
      <node id="63">
        <label>o2scl::inte_qag_gsl&lt; class func_t &gt;</label>
        <link refid="classo2scl_1_1inte__qag__gsl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="64" relation="public-inheritance">
        </childnode>
      </node>
      <node id="71">
        <label>o2scl::inte_qagiu_gsl&lt; class func_t &gt;</label>
        <link refid="classo2scl_1_1inte__qagiu__gsl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="72" relation="public-inheritance">
        </childnode>
      </node>
      <node id="73">
        <label>o2scl::inte_singular_gsl&lt; class func_t &gt;</label>
        <link refid="classo2scl_1_1inte__singular__gsl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="64" relation="public-inheritance">
        </childnode>
      </node>
      <node id="72">
        <label>o2scl::inte_transform_gsl&lt; class func_t &gt;</label>
        <link refid="classo2scl_1_1inte__transform__gsl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="73" relation="public-inheritance">
        </childnode>
      </node>
      <node id="67">
        <label>o2scl::inte_workspace_gsl</label>
        <link refid="classo2scl_1_1inte__workspace__gsl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="6">
        <label>o2scl::interp_base&lt; class vec_t, class vec2_t &gt;</label>
        <link refid="classo2scl_1_1interp__base" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="7" relation="usage">
          <edgelabel>svx</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>o2scl::jacobian&lt; class func_t, class vec_t, class mat_t &gt;</label>
        <link refid="classo2scl_1_1jacobian" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="82">
        <label>o2scl::mmin_base&lt; class func_t, class dfunc_t, class vec_t &gt;</label>
        <link refid="classo2scl_1_1mmin__base" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="81">
        <label>o2scl::mmin_simp2&lt; class func_t, class vec_t &gt;</label>
        <link refid="classo2scl_1_1mmin__simp2" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="82" relation="public-inheritance">
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>step_vec</edgelabel>
          <edgelabel>y1</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>o2scl::mroot&lt; class func_t, class vec_t, class jfunc_t &gt;</label>
        <link refid="classo2scl_1_1mroot" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="17">
        <label>o2scl::mroot_hybrids&lt; class func_t, class vec_t, class mat_t, class jfunc_t &gt;</label>
        <link refid="classo2scl_1_1mroot__hybrids" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
        <childnode refid="19" relation="private-inheritance">
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>def_jac</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>df</edgelabel>
          <edgelabel>diag</edgelabel>
          <edgelabel>gradient</edgelabel>
          <edgelabel>newton</edgelabel>
          <edgelabel>qtdf</edgelabel>
          <edgelabel>qtf</edgelabel>
          <edgelabel>rdx</edgelabel>
          <edgelabel>v</edgelabel>
          <edgelabel>w</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>ajac</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>o2scl::mroot_hybrids_base</label>
        <link refid="classo2scl_1_1mroot__hybrids__base" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="83">
        <label>o2scl::nucleus</label>
        <link refid="classo2scl_1_1nucleus" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="37" relation="public-inheritance">
        </childnode>
      </node>
      <node id="57">
        <label>o2scl::nucmass</label>
        <link refid="classo2scl_1_1nucmass" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="58" relation="public-inheritance">
        </childnode>
      </node>
      <node id="60">
        <label>o2scl::nucmass_ame</label>
        <link refid="classo2scl_1_1nucmass__ame" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="56" relation="public-inheritance">
        </childnode>
      </node>
      <node id="80">
        <label>o2scl::nucmass_fit</label>
        <link refid="classo2scl_1_1nucmass__fit" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="81" relation="usage">
          <edgelabel>def_mmin</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>uncs</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>mm</edgelabel>
        </childnode>
        <childnode refid="79" relation="usage">
          <edgelabel>nmf</edgelabel>
        </childnode>
      </node>
      <node id="79">
        <label>o2scl::nucmass_fit_base</label>
        <link refid="classo2scl_1_1nucmass__fit__base" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="57" relation="public-inheritance">
        </childnode>
      </node>
      <node id="78">
        <label>o2scl::nucmass_frdm</label>
        <link refid="classo2scl_1_1nucmass__frdm" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="79" relation="public-inheritance">
        </childnode>
      </node>
      <node id="61">
        <label>o2scl::nucmass_hfb_sp</label>
        <link refid="classo2scl_1_1nucmass__hfb__sp" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="56" relation="public-inheritance">
        </childnode>
        <childnode refid="62" relation="usage">
          <edgelabel>mass</edgelabel>
        </childnode>
      </node>
      <node id="62">
        <label>o2scl::nucmass_hfb_sp::entry</label>
        <link refid="structo2scl_1_1nucmass__hfb__sp_1_1entry" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="58">
        <label>o2scl::nucmass_info</label>
        <link refid="classo2scl_1_1nucmass__info" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="55">
        <label>o2scl::nucmass_mnmsk</label>
        <link refid="classo2scl_1_1nucmass__mnmsk" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="56" relation="public-inheritance">
        </childnode>
        <childnode refid="59" relation="usage">
          <edgelabel>mass</edgelabel>
        </childnode>
      </node>
      <node id="59">
        <label>o2scl::nucmass_mnmsk::entry</label>
        <link refid="structo2scl_1_1nucmass__mnmsk_1_1entry" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="56">
        <label>o2scl::nucmass_table</label>
        <link refid="classo2scl_1_1nucmass__table" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="57" relation="public-inheritance">
        </childnode>
      </node>
      <node id="54">
        <label>o2scl::part_funcs</label>
        <link refid="classo2scl_1_1part__funcs" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="3" relation="usage">
          <edgelabel>tab_g08</edgelabel>
          <edgelabel>tab_r03</edgelabel>
          <edgelabel>tab_rt00</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>mnmsk</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>ame</edgelabel>
        </childnode>
        <childnode refid="61" relation="usage">
          <edgelabel>hfb</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>cu</edgelabel>
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>iqg</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>o2scl::poly_real_base&lt; class fp_t &gt;</label>
        <link refid="classo2scl_1_1poly__real__base" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="31" relation="usage">
          <edgelabel>rbg</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>o2scl::rng&lt; class fp_t &gt;</label>
        <link refid="classo2scl_1_1rng" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="33">
        <label>o2scl::root&lt; class func_t, class dfunc_t, class fp_t &gt;</label>
        <link refid="classo2scl_1_1root" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="32">
        <label>o2scl::root_bkt&lt; class func_t, class dfunc_t, class fp_t &gt;</label>
        <link refid="classo2scl_1_1root__bkt" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
      </node>
      <node id="84">
        <label>o2scl::root_brent_gsl&lt; class func_t, class fp_t &gt;</label>
        <link refid="classo2scl_1_1root__brent__gsl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="76">
        <label>o2scl::root_cern&lt; class func_t &gt;</label>
        <link refid="classo2scl_1_1root__cern" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
      </node>
      <node id="87">
        <label>o2scl::slack_messenger</label>
        <link refid="classo2scl_1_1slack__messenger" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="4">
        <label>o2scl::table&lt; class vec_t &gt;</label>
        <link refid="classo2scl_1_1table" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="5" relation="usage">
          <edgelabel>si</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>o2scl::table_units&lt; class vec_t &gt;</label>
        <link refid="classo2scl_1_1table__units" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>cup</edgelabel>
        </childnode>
      </node>
      <node id="91">
        <label>o2scl::tensor&lt; class data_t, class vec_t, class vec_size_t &gt;</label>
        <link refid="classo2scl_1_1tensor" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="90">
        <label>o2scl::tensor_grid&lt; class vec_t, class vec_size_t &gt;</label>
        <link refid="classo2scl_1_1tensor__grid" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="91" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>o2scl::thermo_tl&lt; class fp_t &gt;</label>
        <link refid="classo2scl_1_1thermo__tl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="86">
        <label>o2scl::vec_index</label>
        <link refid="classo2scl_1_1vec__index" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="37">
        <label>o2scl::part_tl&lt; double &gt;</label>
        <link refid="classo2scl_1_1part__tl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="85">
        <label>partition_func</label>
        <link refid="classpartition__func"/>
      </node>
      <node id="34">
        <label>o2scl::root&lt; func_t, func_t, fp_t &gt;</label>
        <link refid="classo2scl_1_1root" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="35">
        <label>o2scl::root_brent_gsl&lt; func_t, fp_t &gt;</label>
        <link refid="classo2scl_1_1root__brent__gsl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>o2scl::root_brent_gsl&lt; std::function&lt; fp_t(fp_t)&gt;, fp_t &gt;</label>
        <link refid="classo2scl_1_1root__brent__gsl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>o2scl::search_vec&lt; const vec_t &gt;</label>
        <link refid="classo2scl_1_1search__vec" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="38">
        <label>o2scl::thermo_tl&lt; double &gt;</label>
        <link refid="classo2scl_1_1thermo__tl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="22">
        <label>boost::numeric::ublas::vector&lt; double &gt;</label>
        <link refid="classboost_1_1numeric_1_1ublas_1_1vector" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
    </collaborationgraph>
    <location file="/Users/awsteiner/wcs/eos/eos_nuclei.h" line="119" column="1" bodyfile="/Users/awsteiner/wcs/eos/eos_nuclei.h" bodystart="119" bodyend="1007"/>
    <listofallmembers>
      <member refid="classeos_1a5a1b813d87a973d3552ddcbcaae4c2eb" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>a_virial</name></member>
      <member refid="classeos__nuclei_1af76d052dfa9dd1b11245f66c74d0a4eb" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>add_eg</name></member>
      <member refid="classeos__nuclei_1af212462812d08ec8110d201c18d4a271" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>alg_mode</name></member>
      <member refid="classeos_1a5c3ca739dbccf7e530bc5bc660f575b7" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>alt_model</name></member>
      <member refid="classeos_1a72b86f7d53fc7dd3947c556f7fa0d3b9" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>alt_name</name></member>
      <member refid="classeos__nuclei_1a413ada2b57a752222ed73c5c5feb468f" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>ame</name></member>
      <member refid="classeos_1a828e85c817596153f6607355e42e5a85" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>b_virial</name></member>
      <member refid="classeos__nuclei_1af3884c83f3345c284e49d40cf4d74e02" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>baryons_only</name></member>
      <member refid="classeos__nuclei_1a5d1fa0a49d55a9a7ceecb6f2dc814f85" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>check_virial</name></member>
      <member refid="classeos_1ad75fc91b44b7c8a44c0820191d2e5ee3" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>chi2_ns</name></member>
      <member refid="classeos_1a572d844aa0cbd2fa62446886ca7c5f1e" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>comp_figs</name></member>
      <member refid="classeos__nuclei_1a5316ad41fe6d07c03f9d03b4536db4bb" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>compare_tables</name></member>
      <member refid="classeos__nuclei_1abc6f1bc0f5b05dd7cc9cf6d1b6fd3f6d" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>compute_X</name></member>
      <member refid="classeos_1a337b4bb929454134ff7295409fdf8dfd" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>cs2_fit</name></member>
      <member refid="classeos_1ac61da4952bdae6a0dcdd1fa5a037fa36" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>cs2_func</name></member>
      <member refid="classeos__nuclei_1a93cb54979a0223ec380db70969121a06" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>derivs_computed</name></member>
      <member refid="classeos_1a0450e91436baddef1b53ec21791373e4" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>dfdnn_total</name></member>
      <member refid="classeos_1a1d556879c5caf09532ca7398dce99a61" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>dfdnp_total</name></member>
      <member refid="classeos_1a7b77c6340798d21d2115deece7efd8ca" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>dmudn_fit</name></member>
      <member refid="classeos__nuclei_1a0f60c0e9b9f751ecb03e4fff387273f6" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>Ec</name></member>
      <member refid="classeos_1a48c44c24584afa24b514959434cda651" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>ecv</name></member>
      <member refid="classeos_1a3289d875b0f100e291d26fe2391840ab" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>ed</name></member>
      <member refid="classeos_1a11dcf97591da472a52cc06b72beb0d1b" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>ed_fit</name></member>
      <member refid="classeos__nuclei_1a0a604d4a31718e53752b439ab11a053f" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>edge_list</name></member>
      <member refid="classeos__nuclei_1a063ca5e97144d1d9b9ab08e715c88110" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>edit_data</name></member>
      <member refid="classeos__nuclei_1a8b7222738b1708c9e2fb067a0d8fd407" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>effb</name></member>
      <member refid="classeos__nuclei_1a5f3e04dca895ed3694189561efc431c7" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>eg_table</name></member>
      <member refid="classeos_1a7d08a8fedcc33b7789cd889f30aff342" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>electron</name></member>
      <member refid="classeos_1a4e879d0da07e477432f13fd60e7eb962" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>elep</name></member>
      <member refid="classeos_1a56066be90d4464ee499c2ed326d5b6b5" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>energy_density_ns</name></member>
      <member refid="classeos_1a5f918881edf43f4a4a0797eea8e70c9a" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>energy_density_qmc</name></member>
      <member refid="classeos_1a105fb4842fa275a592d84df10b77b313" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>entropy</name></member>
      <member refid="classeos_1a1df61d910b9ac311960ec8d4f1290fff" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>eos</name></member>
      <member refid="classeos__nuclei_1ad3a50f4aeae4af6f4c137cea6c0d2ab0" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>eos_deriv</name></member>
      <member refid="classeos__nuclei_1a157a32216b4cb525ff782dd8018488c8" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>eos_deriv_v2</name></member>
      <member refid="classeos_1a01e4cfdcfa60927e73089f6bf586ff14" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>eos_EoA</name></member>
      <member refid="classeos__nuclei_1affdd30692a9b5ab5de04dedc1292c127" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>eos_fixed_dist</name></member>
      <member refid="classeos__nuclei_1a8e5130033d82c8b74e2e186642fa109e" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>eos_fixed_dist_fix_table</name></member>
      <member refid="classeos__nuclei_1a534fa250430a6bee6e10d8d8368387e5" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>eos_fixed_ZN</name></member>
      <member refid="classeos_1aa5d6c808833673220aed207a40dfe5fd" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>eos_K</name></member>
      <member refid="classeos_1a4189930e80f2c9c6400fe4c35faa4646" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>eos_L</name></member>
      <member refid="classeos_1a7b0ce0f801d0318e5804d2b2daaab6cb" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>eos_n0</name></member>
      <member refid="classeos__nuclei_1a89e02af0348fcfafaf330ab26d22c7af" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>eos_nuclei</name></member>
      <member refid="classeos_1af00734826d37d4e2b40de82cffebc842" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>eos_S</name></member>
      <member refid="classeos__nuclei_1aa73cb0cc717abbee7d37004b5c1cd347" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>eos_second_deriv</name></member>
      <member refid="classeos_1a2763ba531a632f0924afaf81c6bd478d" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>eos_sn</name></member>
      <member refid="classeos_1a0e84093516ee705a0f759d12be6152f5" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>eos_Tcorr</name></member>
      <member refid="classeos__nuclei_1a49ab1d375fad40db59052d1c93c77162" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>eos_vary_dist</name></member>
      <member refid="classeos__nuclei_1a9860dc645b8d0378a4d5e19fa0f32808" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>eos_vary_ZN</name></member>
      <member refid="classeos_1a2f327f60301c5def791ed3e2e31a505e" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>eosp_alt</name></member>
      <member refid="classeos__nuclei_1acf9211fc713e0bd204c9e78c9266e85f" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>ext_guess</name></member>
      <member refid="classeos__nuclei_1ada7cee58f713ad6905ceb30a328e71ff" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>extend_frdm</name></member>
      <member refid="classeos_1a0e349604b1fbd0c44265a042d25caa85" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>f_deg</name></member>
      <member refid="classeos__nuclei_1ab940f90e1dc234212bd9d20bfd4c5e0a" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>f_min_search</name></member>
      <member refid="classeos_1a903b4089d53c001c24a5a5608882a9cb" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>f_virial</name></member>
      <member refid="classeos__nuclei_1afdec88d36c8891280a981df1d998889d" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>fd_A_max</name></member>
      <member refid="classeos__nuclei_1a0295e987ef254dbccdb5e342180e77f0" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>fd_rand_ranges</name></member>
      <member refid="classeos__nuclei_1aa68e7326e3954b0c2e50fef2d5d612dc" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>file_update_iters</name></member>
      <member refid="classeos__nuclei_1addd97acf845f34327f16bc09e23ead9b" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>file_update_time</name></member>
      <member refid="classeos__nuclei_1af66a0c79f0a2cdbc4167ec7d94e72ffd" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>fit_frdm</name></member>
      <member refid="classeos_1a7ea14982214528c766ec361401684e24" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>fit_fun</name></member>
      <member refid="classeos__nuclei_1a782cead037ec487215ed702046efbf94" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>fix_cc</name></member>
      <member refid="classeos__nuclei_1a5c6efdbb42094ec4d757a5410f3826aa" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>fixed_dist_alg</name></member>
      <member refid="classeos__nuclei_1a61720a84d5f6af3136b150a7beb58efd" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>frdm</name></member>
      <member refid="classeos_1ac16f6a759590825144bea5e6944153a9" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>free_energy_density</name></member>
      <member refid="classeos_1a9d4b034dd1e222ce248e478a89d9004b" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>free_energy_density_alt</name></member>
      <member refid="classeos_1abda7474511cb007f9549a59c137fae84" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>free_energy_density_detail</name></member>
      <member refid="classeos_1a4c6a1d2ba60fbb06bd3b3eb40b3ef5c1" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>free_energy_density_detail_s</name></member>
      <member refid="classeos_1aac2d380b4481aec1f81bef711df6ce01" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>free_energy_density_ep</name></member>
      <member refid="classeos_1a0b672fd7170daab632111f4e26cc0c68" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>free_energy_density_s</name></member>
      <member refid="classeos_1a4144f3aff52bde7d7e2b00099061ae60" prot="protected" virt="virtual"><scope>eos_nuclei</scope><name>free_energy_density_virial</name></member>
      <member refid="classeos_1ab3ce280e28cbe6afedd9a74815592090" prot="protected" virt="virtual"><scope>eos_nuclei</scope><name>free_energy_density_virial</name></member>
      <member refid="classeos__nuclei_1a213862312a3f3a6f966e5e49520575d7" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>function_verbose</name></member>
      <member refid="classeos__nuclei_1aceee50342315ece4e551fe9fb12918aa" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>generate_table</name></member>
      <member refid="classeos__nuclei_1a1b46f1ba98caef463efb3d0b5b9ff492" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>hfb</name></member>
      <member refid="classeos_1aa295268eede25d82a2b192aa7b627083" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>hrg_load</name></member>
      <member refid="classeos_1a8cd68a65afed99d0baf75edd407f598a" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>i_ns</name></member>
      <member refid="classeos_1a07f7d8c8b08ead664234f8c0a1a34e93" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>i_skyrme</name></member>
      <member refid="classeos__nuclei_1a96b2d980473d1553b69bc39312b4b06a" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>iflag_done</name></member>
      <member refid="classeos__nuclei_1a7da7cc86a531b33d8f22039bfcb63622" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>iflag_empty</name></member>
      <member refid="classeos__nuclei_1a01be0524b53a5b2ab21b2e694b796030" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>iflag_guess</name></member>
      <member refid="classeos__nuclei_1a3bf59116e634ce79d04192044581b5e4" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>iflag_in_progress_empty</name></member>
      <member refid="classeos__nuclei_1a85dd3228def3fdaba7c6c2796fb5e66e" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>iflag_in_progress_with_guess</name></member>
      <member refid="classeos__nuclei_1aa26805a032925090b41943025ff92b61" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>inc_hrg</name></member>
      <member refid="classeos__nuclei_1ac54292646a75f5095e6195122eaf6340" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>include_detail</name></member>
      <member refid="classeos_1adcd6aa9ad3fbe21200c70c877374aba9" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>include_muons</name></member>
      <member refid="classeos__nuclei_1a53160bce70df3565db4721db3920fed8" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>increase_density</name></member>
      <member refid="classeos__nuclei_1aa13a2c14da94d5d854399dc357410cb5" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>init_function</name></member>
      <member refid="classeos__nuclei_1ad0f430299bfde0f00e06cd9a228bf7c7" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>iqg</name></member>
      <member refid="classeos_1a123f00b92ba314ddcb470a2b1f7ef59c" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>Lambda_bar_14</name></member>
      <member refid="classeos__nuclei_1aca1afa3074c80479fdc0081c1e58e218" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>lim_holt</name></member>
      <member refid="classeos__nuclei_1af36f2d3c15c1c7059d3878a9765f2a3b" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>load</name></member>
      <member refid="classeos__nuclei_1a589e9ce90ed45f886adf9d57d1f05a64" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>load_nuclei</name></member>
      <member refid="classeos__nuclei_1afb96a831c4da38e5c05c4ad2738ff50c" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>loaded</name></member>
      <member refid="classeos__nuclei_1a47a76469f97ff30926321b51fd0cecb5" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>m95</name></member>
      <member refid="classeos__nuclei_1a90757fda0ca76057b31e58215d7d3079" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>max_fun</name></member>
      <member refid="classeos__nuclei_1a38f192295a91ff802335cf8e06e1c30e" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>max_ratio</name></member>
      <member refid="classeos__nuclei_1a579ac167d74c08da18cb75d6df7e1cd1" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>max_time</name></member>
      <member refid="classeos__nuclei_1a80e2a3f16b57acaeae0352a665986e2c" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>maxwell</name></member>
      <member refid="classeos__nuclei_1a346357bfcc8220ed56316ed23686d53a" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>mcarlo_beta</name></member>
      <member refid="classeos_1a0704d6eea1ea797affeb42a358b7971f" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>mcarlo_data</name></member>
      <member refid="classeos__nuclei_1a8f6e17f580929833eeb11ac054274b69" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>mcarlo_neutron</name></member>
      <member refid="classeos__nuclei_1aacc21e32b0592eeb32aa4d4fbc5446d2" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>mcarlo_nuclei</name></member>
      <member refid="classeos__nuclei_1ab2f73f5619e98bf20d0b8eb311fdf3b2" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>mcarlo_nuclei2</name></member>
      <member refid="classeos__nuclei_1a1870d4fe51570422d3e1948510e87bec" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>merge_tables</name></member>
      <member refid="classeos__nuclei_1ad3cbdb0ace2ea7d0f82408e4ca66021c" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>message_continue</name></member>
      <member refid="classeos__nuclei_1a08709c65212e72fefa2c0c9741e3b7d5" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>message_done</name></member>
      <member refid="classeos__nuclei_1a7f24be12bb5c16ff00fe8e152155202a" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>mh</name></member>
      <member refid="classeos__nuclei_1a19904b5c40236839a7782c80474eb852" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>mh_tol_rel</name></member>
      <member refid="classeos_1aa6e39d3d5519ba1b07a58bc84c8ba91b" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>min_max_cs2</name></member>
      <member refid="classeos_1af54fbf548389aaf2cdcc10bd3318c7aa" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>model_selected</name></member>
      <member refid="classeos_1a4726c6da75a70d1e7294f20e1a297b5b" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>mu_fit</name></member>
      <member refid="classeos_1a9163e34ddcb615af9ec561fb44f1655f" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>muon</name></member>
      <member refid="classeos_1a59936e5b4616951e3cb4b2a605b26698" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>n_chiral</name></member>
      <member refid="classeos__nuclei_1a45b349dfca3ef36ac30bda2e3958932f" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>n_nB2</name></member>
      <member refid="classeos__nuclei_1abff5a99f10e3fadf06d088a4e1377b12" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>n_S2</name></member>
      <member refid="classeos__nuclei_1a0c7287732760fcb2f9811bbb8f7ea571" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>n_T2</name></member>
      <member refid="classeos__nuclei_1aa78cff585679ca83ce4faae2ac11ef08" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>n_Ye2</name></member>
      <member refid="classeos__nuclei_1aa35cdb1ef03cd7004e7775f9fff5b326" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>nB_grid2</name></member>
      <member refid="classeos__nuclei_1a84917126cdf34b7899627c705ad72e45" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>nB_grid_spec</name></member>
      <member refid="classeos_1a60f53d36893b821e72e08aff3250ddd8" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>neutrino</name></member>
      <member refid="classeos_1a1d6a2e292171de1dc51960cc51c610f9" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>neutron</name></member>
      <member refid="classeos__nuclei_1a1c1b4b4617ed20e5a268ae56db02c639" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>new_muons</name></member>
      <member refid="classeos_1a1363b6b6d6cb43829b672e35a2434832" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>new_ns_eos</name></member>
      <member refid="classeos__nuclei_1a4ed2d01020c376d09c7e80d4691a0002" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>new_table</name></member>
      <member refid="classeos__nuclei_1a617715389811945428a28aac994f2d4d" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>nm_fit</name></member>
      <member refid="classeos_1ae02ba6f3224e7ae56586f9aca94f5c87" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>ns_fit</name></member>
      <member refid="classeos_1a55791c582d903aaaf61de6e25ae5be41" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>ns_fit_parms</name></member>
      <member refid="classeos_1a03553fcb0bf2589de3324ad40d9543a9" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>ns_nb_max</name></member>
      <member refid="classeos_1aef3af455de493d339ea33c47747e018d" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>ns_record</name></member>
      <member refid="classeos_1ac62d7915bc25bbf00048aee31181e0ce" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>nstar_tab</name></member>
      <member refid="classeos__nuclei_1a4f4849d6d4b5181abf10851f80fe0e79" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>nuc_alpha</name></member>
      <member refid="classeos__nuclei_1ad96854c380c8a06cb7920a5a73efa06a" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>nuc_deut</name></member>
      <member refid="classeos__nuclei_1a52be68ebd33895f19d2bd8938d64f928" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>nuc_he3</name></member>
      <member refid="classeos__nuclei_1a5eeb7c88917d123776bae1b3117ab9ad" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>nuc_heavy</name></member>
      <member refid="classeos__nuclei_1a83302306c61e924014d3a3de8a2a9522" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>nuc_li4</name></member>
      <member refid="classeos__nuclei_1aaec4a435a6806773068024b2aad1eea4" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>nuc_matter</name></member>
      <member refid="classeos__nuclei_1ae21ac91d7c6ca23d42f30153b461a973" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>nuc_matter_muons</name></member>
      <member refid="classeos__nuclei_1a3d109091b9cc536e258b427902cc9a8a" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>nuc_trit</name></member>
      <member refid="classeos__nuclei_1a0214b5d087de581e4956016c77a8c022" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>nuclei</name></member>
      <member refid="classeos__nuclei_1a035ec31a7ad9d0341f71515d00ed966f" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>nucleon_func</name></member>
      <member refid="classeos_1afa72659710add3dd0b7139b7da0a07dd" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>old_ns_fit</name></member>
      <member refid="classeos_1aa8930152bcf67361a3d99726c206dee8" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>old_version</name></member>
      <member refid="classeos__nuclei_1a5d7466960fa588348c42d83561e0ae07" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>output</name></member>
      <member refid="classeos_1ad1c7d55cb03ff0f19ecc4b6195ffabf9" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>output_files</name></member>
      <member refid="classeos_1af18bdac8e8845a31672bcc5e89a2e103" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>p_a_virial</name></member>
      <member refid="classeos__nuclei_1a61150726ea0811558024ed26d3d2367c" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_alg_mode</name></member>
      <member refid="classeos_1ad4c78d840172ba24b525f562efe4a3d7" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>p_b_virial</name></member>
      <member refid="classeos_1a1e9900aedd76d412c6471bb41793a18e" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>p_chiral</name></member>
      <member refid="classeos__nuclei_1ade3866fc48028463c7c835442d7d0363" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_edge_list</name></member>
      <member refid="classeos__nuclei_1a5f4c08d089d974b91bf45d789dd91727" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_ext_guess</name></member>
      <member refid="classeos__nuclei_1a4558095e40049f6d2b96253e2c8482c3" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_extend_frdm</name></member>
      <member refid="classeos__nuclei_1ad632b8055ddb2a7793f41a194e4d1795" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_fd_A_max</name></member>
      <member refid="classeos__nuclei_1a00ce6347b39d3bed4cde37a65d2217fa" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_file_update_iters</name></member>
      <member refid="classeos__nuclei_1aec90cff67945b9560619cb4516add781" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_file_update_time</name></member>
      <member refid="classeos__nuclei_1a85a93ac08fb1b6c4016055a7b2eb3b3d" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_fixed_dist_alg</name></member>
      <member refid="classeos__nuclei_1ad77de576bae71fb8e81673b2e9e807d1" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_full_results</name></member>
      <member refid="classeos__nuclei_1ac3ff86e1f1d5506e5f74db8435b7a962" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_function_verbose</name></member>
      <member refid="classeos__nuclei_1afce5fb5f9288e093c4f882a62a1eff5f" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_inc_hrg</name></member>
      <member refid="classeos__nuclei_1a6a8c00a8fd74aa9bd595efb64683ffe0" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_include_detail</name></member>
      <member refid="classeos__nuclei_1a3fd9e2feae434accf048f448f005c73d" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_include_eg</name></member>
      <member refid="classeos_1a368119648c8709b9d53ad13d375073f5" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>p_include_muons</name></member>
      <member refid="classeos__nuclei_1a9d1c51cb604ba83f9debb378078301c1" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_max_ratio</name></member>
      <member refid="classeos__nuclei_1a70c28ddbc7ded7525cb341f0cec82e94" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_max_time</name></member>
      <member refid="classeos__nuclei_1af05574b96e9f8433d350760b33ddbdc9" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_mh_tol_rel</name></member>
      <member refid="classeos__nuclei_1ac2e5b3410f1cc8bba78fb4f4fd1e0a43" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_nB_grid_spec</name></member>
      <member refid="classeos_1ae04c7341212965d955c71cb688cebaa5" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>p_ns_record</name></member>
      <member refid="classeos__nuclei_1a5d8c1d46c698d9aa6e933c1b8e70a736" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_nucleon_func</name></member>
      <member refid="classeos_1ab5cef53d24699c484d538a856ca03bd0" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>p_old_ns_fit</name></member>
      <member refid="classeos__nuclei_1a2a48ce9f315d748fa4a0d52bbffe38c6" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_propagate_points</name></member>
      <member refid="classeos__nuclei_1a3f8925afd7f4de41d40f834e34ef9bf3" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_recompute</name></member>
      <member refid="classeos__nuclei_1aa41b4da957490f1b93fbdd9bc81ee728" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_rnuc_less_rws</name></member>
      <member refid="classeos_1a5ff4775cbc9def7bcb9c123744397048" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>p_select_cs2_test</name></member>
      <member refid="classeos__nuclei_1a40f7a07df5b1fc5f083b6607683ba14d" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_show_all_nuclei</name></member>
      <member refid="classeos__nuclei_1aec3ff2601bac9ab73f45c1dfb09eda02" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_six_neighbors</name></member>
      <member refid="classeos__nuclei_1a3dda8480375e0275294318c3b0aec51d" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_strange_axis</name></member>
      <member refid="classeos__nuclei_1a704214f3aa577b0a5696b69120803831" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_survey_eqs</name></member>
      <member refid="classeos__nuclei_1a085c4f10a505c02c83e1b6f4658c1b37" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_T_grid_spec</name></member>
      <member refid="classeos_1af8925da98b919072e94a34b493f0c185" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>p_test_ns_cs2</name></member>
      <member refid="classeos_1a1f7f15f61f329ddf72a0733d77a36bac" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>p_use_alt_eos</name></member>
      <member refid="classeos_1a113d544db8f2fb842b57ff2f91eec588" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>p_verbose</name></member>
      <member refid="classeos__nuclei_1a555f7b4054913327461106517f79d28d" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_verify_only</name></member>
      <member refid="classeos__nuclei_1a6c3159186083694169a1facc7c8bd3f7" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_Ye_grid_spec</name></member>
      <member refid="classeos__nuclei_1a92d43e4a994e334a5000d8ab6e015f72" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>p_Ye_list</name></member>
      <member refid="classeos_1a15e16e70ada929ed33667a05842a3553" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>part_db</name></member>
      <member refid="classeos__nuclei_1aaa29c37e1529b29e1cec979c8f994656" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>part_func</name></member>
      <member refid="classeos__nuclei_1a4c9b3f05b15b2b960ef9aeb8b216b716" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>pfuncs</name></member>
      <member refid="classeos_1add88b86b2418c74c0f8140b959427f09" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>phi</name></member>
      <member refid="classeos_1a5ff2fbd5f7622bf05e31bb03a63c900e" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>photon</name></member>
      <member refid="classeos_1ae642fc617fe1b1b5af6c347a45ac59eb" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>pns_eos</name></member>
      <member refid="classeos_1a9155f6ba7680bfc4c0abaf7fa7001a9d" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>point</name></member>
      <member refid="classeos__nuclei_1a59e80bdb0d3d6a663a3be4df506c9c74" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>point_nuclei</name></member>
      <member refid="classeos__nuclei_1acc7abc9cd375b05f20f47afb34782720" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>propagate_points</name></member>
      <member refid="classeos_1a4644e7862f3fecbaa246beb554da8847" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>proton</name></member>
      <member refid="classeos_1a6ddc966f3bb9ccf15585fb3a33dade7c" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>qmc_a</name></member>
      <member refid="classeos_1a7579e6411263dd0d2180b5b2a7f18582" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>qmc_alpha</name></member>
      <member refid="classeos_1aa1d4bd74068377744160c5aa5b6c46a3" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>qmc_b</name></member>
      <member refid="classeos_1aac78f7dc19ac34864c8903f6797378d5" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>qmc_beta</name></member>
      <member refid="classeos_1ad656a3078814fbeceb967e6d43f08bfa" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>qmc_n0</name></member>
      <member refid="classeos_1a73f6d595ccaf7a58edd90f90e6d8e27b" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>random</name></member>
      <member refid="classeos__nuclei_1ae294cb0d74607054bd37ba0b4b32941e" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>rbg</name></member>
      <member refid="classeos__nuclei_1a0a17e1d732e68d9df401491bcc282d87" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>read_results</name></member>
      <member refid="classeos__nuclei_1a765a1a973e5ad6f59fb78c996c0755b0" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>recompute</name></member>
      <member refid="classeos__nuclei_1a59bbe55fff67dcdb57b902e323932d8e" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>relb</name></member>
      <member refid="classeos_1afead2a3442d9ad320bcce5043a6a801e" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>relf</name></member>
      <member refid="classeos_1a26a9aa2bd8891eddc06dbae463307896" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>res_b</name></member>
      <member refid="classeos_1a26747a345bdc51dd4b21f4dfe531464a" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>res_f</name></member>
      <member refid="classeos_1a672a26f8553d520dc941519e63e86fcc" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>rmf</name></member>
      <member refid="classeos_1a06ea10ebf76e95b729bc34d5edb59427" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>rmf_fields</name></member>
      <member refid="classeos_1a0373c607528d50a208fbe0bff038380f" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>rmf_hyp</name></member>
      <member refid="classeos_1a0b14a8f3c4f4675cc67626a5db20ec14" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>rng</name></member>
      <member refid="classeos__nuclei_1a23b5e4c392132ae728edc34fa564a02a" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>rnuc_less_rws</name></member>
      <member refid="classeos__nuclei_1ac0b5c62b2f374365904eaa4bd4c62bd2" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>S_grid2</name></member>
      <member refid="classeos__nuclei_1a42b5029c314928bcfafc3487d6840ce3" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>S_grid_spec</name></member>
      <member refid="classeos_1a2e1699b00bfc1d3d65d33c2ecea127cd" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>s_virial</name></member>
      <member refid="classeos_1a2d54b943239f6dc81e07efdfd8b3e945" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>select_cs2_test</name></member>
      <member refid="classeos__nuclei_1a5f19d4a4c83e3d76edf03e01fe8e3df6" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>select_high_T</name></member>
      <member refid="classeos__nuclei_1a3d212298dad98cae2d6d1310c52a136c" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>select_high_T_internal</name></member>
      <member refid="classeos_1aa6e242360755e084e3845f8ad7ca5034" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>select_internal</name></member>
      <member refid="classeos_1aa3bc65fa01f0eb33e795b5f2fe0c7d21" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>select_model</name></member>
      <member refid="classeos__nuclei_1a740b74ccb19bac55a9d067dc15a618a0" prot="public" virt="virtual"><scope>eos_nuclei</scope><name>setup_cli</name></member>
      <member refid="classeos_1a95f4ca5114228035d40de725eefc521a" prot="public" virt="virtual" ambiguityscope="eos::"><scope>eos_nuclei</scope><name>setup_cli</name></member>
      <member refid="classeos__nuclei_1a149f15c25567f030d59ad187ffbffaff" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>show_all_nuclei</name></member>
      <member refid="classeos__nuclei_1add3c0308b16526ddc563d8b68ad4c69d" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>six_neighbors</name></member>
      <member refid="classeos_1a1ce709670f5e43caba65e040b9cc02f9" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>sk</name></member>
      <member refid="classeos_1a48d645e17b016ffef047b73d2f517d11" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>sk_alt</name></member>
      <member refid="classeos_1ae08253e92e8f4dec1d3e41ce2d5d0279" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>sk_Tcorr</name></member>
      <member refid="classeos__nuclei_1ad96a0533266e63e6e607dfb89b114aea" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>skyrme_ext</name></member>
      <member refid="classeos__nuclei_1ad51274167059b031089982cbe81a0325" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>slack</name></member>
      <member refid="classeos__nuclei_1a42747d737de3ca6f9631c2ef653e43ab" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>Sneut</name></member>
      <member refid="classeos_1a76f06b1b3ab9e0fc55f6ff024a38db2f" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>solve_coeff_big</name></member>
      <member refid="classeos_1a11c54a35b13fa5c9eb3229a019d1d164" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>solve_coeff_small</name></member>
      <member refid="classeos_1a4480600e93a338f8a2618b03b69efd13" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>solve_fixed_sonb_YL</name></member>
      <member refid="classeos__nuclei_1ade2effe8a0653d0359467fee5f387f25" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>solve_hrg</name></member>
      <member refid="classeos__nuclei_1a40aac5b607cd8c5d7f0b5ab22380c9b6" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>solve_nuclei</name></member>
      <member refid="classeos__nuclei_1aae563f3bd21262b89651453b834f4d7c" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>solve_nuclei_ld</name></member>
      <member refid="classeos__nuclei_1af2977d2c5707b931f2c9d79977f4988e" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>solve_nuclei_min</name></member>
      <member refid="classeos_1a8d1df2f651c5278f9c0b1e6a31d4e264" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>solve_T</name></member>
      <member refid="classeos_1a1f8ac29273e5e0f1fc6bb1da9c2c578f" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>solve_Ye</name></member>
      <member refid="classeos__nuclei_1afd0e2e87dbe65ff8cf7488606e870b8c" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>Sprot</name></member>
      <member refid="classeos__nuclei_1a20563ca9ef25a2a3d6dc44c3c3105206" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>stability</name></member>
      <member refid="classeos__nuclei_1ade7ea962d1f3bb5f5bec604850bfcff9" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>stats</name></member>
      <member refid="classeos__nuclei_1a64732e062b6e199e56723ff363eb18de" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>store_hrg</name></member>
      <member refid="classeos__nuclei_1a0a87adc1ff5b65ce4d033a6336cb932e" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>store_point</name></member>
      <member refid="classeos_1ac7d5a5cfdb371e944d4d830717edf87c" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>strange_axis</name></member>
      <member refid="classeos__nuclei_1aefdd3a39cdf13c2bbd1348c7958c0b5f" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>survey_eqs</name></member>
      <member refid="classeos__nuclei_1a70464c87915d9cecf9161e1d9aad2d76" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>T_grid2</name></member>
      <member refid="classeos__nuclei_1ad6cc0c08c901eb35afabcc6f6b0d9a86" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>T_grid_spec</name></member>
      <member refid="classeos_1a8747580da79f5b7a67c2d398fc92da9a" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>table_full</name></member>
      <member refid="classeos_1a9037d1e643beb2a46975c2d6ee0f7701" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>table_nB</name></member>
      <member refid="classeos_1ab08256bdce7d3ff415c484b774505e2e" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>table_Ye</name></member>
      <member refid="classeos_1a2c05bd84679793e7df3b7f23a92b89fb" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>test_deriv</name></member>
      <member refid="classeos_1aea1bd679e9f8b33ea8079b7cfd85ab0a" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>test_eg</name></member>
      <member refid="classeos_1a74f5a2586276e7bfd2290d956b291141" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>test_ns_cs2</name></member>
      <member refid="classeos__nuclei_1a6851712e5fcbb0a02eaf79e3b2164bbd" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>test_random</name></member>
      <member refid="classeos__nuclei_1a11c1b1969e2ba5ef9b18d4b57330da4e" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_A</name></member>
      <member refid="classeos__nuclei_1ad2b9d2603630db4db8f4213d4e181e4f" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_A_max</name></member>
      <member refid="classeos__nuclei_1a0b37376081ff2573fcb59161c8a92493" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_A_min</name></member>
      <member refid="classeos__nuclei_1a4bd3b59e17f2d95cbf169616908096cb" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_dgdT</name></member>
      <member refid="classeos__nuclei_1a4d8dcea83e8b11e9ae3f3a4dec0b6867" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_E</name></member>
      <member refid="classeos__nuclei_1a70d2dda04bbcf60854b7670102f56de0" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_Eint</name></member>
      <member refid="classeos__nuclei_1a03672e8e1f20bead45740c7ec72e2ebb" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_F</name></member>
      <member refid="classeos__nuclei_1a12d5b08736061d3354419adeaa01ed0d" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_F1</name></member>
      <member refid="classeos__nuclei_1a407c06a8301cc809db24f8f63b970c6d" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_F2</name></member>
      <member refid="classeos__nuclei_1a7881bc2e6030cf83cdcd1c754c09cf42" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_F3</name></member>
      <member refid="classeos__nuclei_1a425f1eead1cd755e75d5025d20d55472" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_F4</name></member>
      <member refid="classeos__nuclei_1aeba5d7466002ea08bc1808e639ff4ade" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_Fint</name></member>
      <member refid="classeos__nuclei_1ae6a19c2cd1fa1ccd87b86601534f9e91" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_flag</name></member>
      <member refid="classeos__nuclei_1a4a931b5aaf9df3a9449aa03ad9a11d3a" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_g</name></member>
      <member refid="classeos__nuclei_1abfe2ca1cfff02482fc0aef779adf5948" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_log_xn</name></member>
      <member refid="classeos__nuclei_1a88b62625548fb17a98d8716888dc669f" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_log_xp</name></member>
      <member refid="classeos__nuclei_1a60e60a375f8beb2ad39b61be54916367" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_msn</name></member>
      <member refid="classeos__nuclei_1a68bf7f276dc5453eca3fca821f8c97d6" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_msp</name></member>
      <member refid="classeos__nuclei_1ad1227ef10b6e0d48d443f2acc1429193" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_mue</name></member>
      <member refid="classeos__nuclei_1a06b8c9725c02758c06e28a90b9a0b460" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_mun</name></member>
      <member refid="classeos__nuclei_1a0e46415ceec10241748d3b7e3975eb35" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_mup</name></member>
      <member refid="classeos__nuclei_1abf3b5e7073974ace451d0bc93e970178" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_NmZ_max</name></member>
      <member refid="classeos__nuclei_1aeb4ced40ed759436e405de206be713bd" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_NmZ_min</name></member>
      <member refid="classeos__nuclei_1a19d601be68cfda684729148306f5dbe6" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_omega</name></member>
      <member refid="classeos__nuclei_1abc4cbbc24d7ecefb41643829035f132a" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_P</name></member>
      <member refid="classeos__nuclei_1a5350ccc3f6a84937d808d76ce5bc3535" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_Pint</name></member>
      <member refid="classeos__nuclei_1a3f74250a2d6fe46f41e8f4663ef4c534" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_rho</name></member>
      <member refid="classeos__nuclei_1a7190a56772676f59e7cfe4fec4c11373" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_S</name></member>
      <member refid="classeos__nuclei_1aee6292cf424f9351204441b8ce30be2f" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_sigma</name></member>
      <member refid="classeos__nuclei_1ab6c02707e4ccfc85a57dc392312b858d" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_Sint</name></member>
      <member refid="classeos__nuclei_1a0c84525c44c79e4320ef133c3cd6e1b0" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_Un</name></member>
      <member refid="classeos__nuclei_1ad42647c219ad62f7423cb2d9d6a5d4f6" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_Up</name></member>
      <member refid="classeos__nuclei_1af444fb252ee474ed57564452c030a3cf" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_Xalpha</name></member>
      <member refid="classeos__nuclei_1a4b71c77ee78348145eafe9672ad01218" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_Xd</name></member>
      <member refid="classeos__nuclei_1a9c19aba86fcc0a6fc081ffdfc1f60472" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_XHe3</name></member>
      <member refid="classeos__nuclei_1af7ead89609f0c6327a49bda1b6842a61" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_XLi4</name></member>
      <member refid="classeos__nuclei_1a004b4b83f1dffcd1b5d1800cfdc29b0b" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_Xn</name></member>
      <member refid="classeos__nuclei_1a492319b4f6e26525c5d42b3b283d872f" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_Xnuclei</name></member>
      <member refid="classeos__nuclei_1ab64ab28f693c6d3ef0b87da1343dbd6e" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_Xp</name></member>
      <member refid="classeos__nuclei_1af3a8eefc23db6b6a6e172812e5d2df68" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_Xt</name></member>
      <member refid="classeos__nuclei_1aeb396b53697b9f1de3e69d8e9dada40e" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_Ymu</name></member>
      <member refid="classeos__nuclei_1abfff102abee916ed3e89a84c6880192e" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_Z</name></member>
      <member refid="classeos__nuclei_1a34f07f57a646e68b7ad8224cbff2cb25" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_zn</name></member>
      <member refid="classeos__nuclei_1a11ce9720370ac275fc54f1ed15e4b828" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>tg_zp</name></member>
      <member refid="classeos_1a8c5a293eb5e1a6800eadb5d345ba9967" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>th2</name></member>
      <member refid="classeos_1a5c9585cd6a83c158489d45c39025aaa9" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>th_chiral</name></member>
      <member refid="classeos_1a802488baa08672fdef78f95eb9707280" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>UNEDF_tab</name></member>
      <member refid="classeos_1a9fac0f5d859f20444f09bd04453587a5" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>use_alt_eos</name></member>
      <member refid="classeos__nuclei_1a78227dbf57ccbffc1cd8684894cfa55a" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>vdet_units</name></member>
      <member refid="classeos_1ad517930f035d4b54ca6a688fb5494bfe" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>verbose</name></member>
      <member refid="classeos__nuclei_1adc76328f89a19ae582e33e94f5fdf012" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>verify</name></member>
      <member refid="classeos__nuclei_1a7aa168037269f4ef8ab626b079988ec9" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>verify_only</name></member>
      <member refid="classeos__nuclei_1a3f1117145eaf9cbce21f15078b6dc9cc" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>vi</name></member>
      <member refid="classeos_1aca0e9051a7e04930041783302730ae15" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>vir_comp</name></member>
      <member refid="classeos_1a2dafcf25ad75a9a2b640bc845bf71d05" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>vir_fit</name></member>
      <member refid="classeos__nuclei_1a1be55c7bf591a308ee150480cc2c6dcd" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>vomega</name></member>
      <member refid="classeos__nuclei_1a2f2cbf1eaf75f60d69f4f6c4e95659d5" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>vomega_prime</name></member>
      <member refid="classeos_1af57f3af5a2b3e397232e7c6f9977f169" prot="protected" virt="non-virtual"><scope>eos_nuclei</scope><name>vsd</name></member>
      <member refid="classeos__nuclei_1ab1a3b47a2f9843632f6a539d42283d1d" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>with_leptons</name></member>
      <member refid="classeos__nuclei_1a2fdd3ed505fccdb2ccd0c76f74461aef" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>write_nuclei</name></member>
      <member refid="classeos__nuclei_1ad9e6df69a1d17e370375477ae090de08" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>write_nuclei</name></member>
      <member refid="classeos__nuclei_1ae8a14d1cd9bd89aade37fe44507226ae" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>write_results</name></member>
      <member refid="classeos__nuclei_1a0e6983e5c37d4203b6d3c467774d3966" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>Ye_grid2</name></member>
      <member refid="classeos__nuclei_1abcd0a5feca72f18f6b789d3d1709fb35" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>Ye_grid_spec</name></member>
      <member refid="classeos__nuclei_1aaf1dde49bf14b9a91f9524881943225b" prot="public" virt="non-virtual"><scope>eos_nuclei</scope><name>Ye_list</name></member>
      <member refid="classeos_1a25db96648576a8517d3b0dc93505b708" prot="public" virt="virtual"><scope>eos_nuclei</scope><name>~eos</name></member>
      <member refid="classeos__nuclei_1a58ccebd0fe88fbe499d7e88e739d2fd2" prot="public" virt="virtual"><scope>eos_nuclei</scope><name>~eos_nuclei</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
