<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classeos" kind="class" language="C++" prot="public">
    <compoundname>eos</compoundname>
    <derivedcompoundref refid="classeos__nuclei" prot="public" virt="non-virtual">eos_nuclei</derivedcompoundref>
    <includes refid="eos_8h" local="no">eos.h</includes>
      <sectiondef kind="user-defined">
      <header>Settings [public]</header>
      <memberdef kind="variable" id="classeos_1aa8930152bcf67361a3d99726c206dee8" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos::old_version</definition>
        <argsstring></argsstring>
        <name>old_version</name>
        <qualifiedname>eos::old_version</qualifiedname>
        <briefdescription>
<para>If true, use the EOS from the Du et al. (2019) paper instead of the Du et al. (2022) update (default false) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="649" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="649" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a9fac0f5d859f20444f09bd04453587a5" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos::use_alt_eos</definition>
        <argsstring></argsstring>
        <name>use_alt_eos</name>
        <qualifiedname>eos::use_alt_eos</qualifiedname>
        <briefdescription>
<para>Use an alternate EOS rather than the Du et al. combined EOS (default false) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="654" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="654" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1ac7d5a5cfdb371e944d4d830717edf87c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos::strange_axis</definition>
        <argsstring></argsstring>
        <name>strange_axis</name>
        <qualifiedname>eos::strange_axis</qualifiedname>
        <briefdescription>
<para>If true, strangeness is included as an additional tensor rank (default false) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="659" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="659" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a74f5a2586276e7bfd2290d956b291141" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos::test_ns_cs2</definition>
        <argsstring></argsstring>
        <name>test_ns_cs2</name>
        <qualifiedname>eos::test_ns_cs2</qualifiedname>
        <briefdescription>
<para>If true, test the neutron star speed of sound (default true) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="664" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="664" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1aef3af455de493d339ea33c47747e018d" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos::ns_record</definition>
        <argsstring></argsstring>
        <name>ns_record</name>
        <qualifiedname>eos::ns_record</qualifiedname>
        <briefdescription>
<para>If true, save the results of the neutron star fit to a file, and immediately exit (default false) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="669" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="669" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1afa72659710add3dd0b7139b7da0a07dd" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos::old_ns_fit</definition>
        <argsstring></argsstring>
        <name>old_ns_fit</name>
        <qualifiedname>eos::old_ns_fit</qualifiedname>
        <briefdescription>
<para>If true, use the old neutron star fit (default true) </para>
        </briefdescription>
        <detaileddescription>
<para>This defaults to true because the old fit performs a bit better than the new one. The new fit was never used in a publication. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="677" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="677" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1ad517930f035d4b54ca6a688fb5494bfe" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int eos::verbose</definition>
        <argsstring></argsstring>
        <name>verbose</name>
        <qualifiedname>eos::verbose</qualifiedname>
        <briefdescription>
<para>Verbose parameter (default 0) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="681" column="7" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="681" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1ad1c7d55cb03ff0f19ecc4b6195ffabf9" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos::output_files</definition>
        <argsstring></argsstring>
        <name>output_files</name>
        <qualifiedname>eos::output_files</qualifiedname>
        <briefdescription>
<para>If true, create output files for individual EOSs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="684" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="684" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a5a1b813d87a973d3552ddcbcaae4c2eb" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double eos::a_virial</definition>
        <argsstring></argsstring>
        <name>a_virial</name>
        <qualifiedname>eos::a_virial</qualifiedname>
        <briefdescription>
<para>Coefficient for modulation of virial EOS (default 10.0) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="688" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="688" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a828e85c817596153f6607355e42e5a85" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double eos::b_virial</definition>
        <argsstring></argsstring>
        <name>b_virial</name>
        <qualifiedname>eos::b_virial</qualifiedname>
        <briefdescription>
<para>Coefficient for modulation of virial EOS (default 10.0) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="692" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="692" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1adcd6aa9ad3fbe21200c70c877374aba9" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos::include_muons</definition>
        <argsstring></argsstring>
        <name>include_muons</name>
        <qualifiedname>eos::include_muons</qualifiedname>
        <briefdescription>
<para>If true, include muons (default false) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="696" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="696" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a2d54b943239f6dc81e07efdfd8b3e945" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos::select_cs2_test</definition>
        <argsstring></argsstring>
        <name>select_cs2_test</name>
        <qualifiedname>eos::select_cs2_test</qualifiedname>
        <briefdescription>
<para>If true, test cs2 in the <ref refid="classeos_1aa6e242360755e084e3845f8ad7ca5034" kindref="member">select_internal()</ref> function (default true) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="701" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="701" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Main EOS parameters [protected]</header>
      <memberdef kind="variable" id="classeos_1a7579e6411263dd0d2180b5b2a7f18582" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double eos::qmc_alpha</definition>
        <argsstring></argsstring>
        <name>qmc_alpha</name>
        <qualifiedname>eos::qmc_alpha</qualifiedname>
        <briefdescription>
<para>The first exponent for density in the QMC EOS (unitless) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="262" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a6ddc966f3bb9ccf15585fb3a33dade7c" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double eos::qmc_a</definition>
        <argsstring></argsstring>
        <name>qmc_a</name>
        <qualifiedname>eos::qmc_a</qualifiedname>
        <briefdescription>
<para>The first coefficient for the QMC EOS (in MeV) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="265" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1add88b86b2418c74c0f8140b959427f09" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double eos::phi</definition>
        <argsstring></argsstring>
        <name>phi</name>
        <qualifiedname>eos::phi</qualifiedname>
        <briefdescription>
<para>The speed of sound in neutron star matter at <formula id="4">$ n_B=2~\mathrm{fm}^{-3} $</formula>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="270" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1af00734826d37d4e2b40de82cffebc842" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double eos::eos_S</definition>
        <argsstring></argsstring>
        <name>eos_S</name>
        <qualifiedname>eos::eos_S</qualifiedname>
        <briefdescription>
<para>The symmetry energy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="273" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a4189930e80f2c9c6400fe4c35faa4646" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double eos::eos_L</definition>
        <argsstring></argsstring>
        <name>eos_L</name>
        <qualifiedname>eos::eos_L</qualifiedname>
        <briefdescription>
<para>The slope of the symmetry energy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="276" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a8cd68a65afed99d0baf75edd407f598a" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int eos::i_ns</definition>
        <argsstring></argsstring>
        <name>i_ns</name>
        <qualifiedname>eos::i_ns</qualifiedname>
        <briefdescription>
<para>The index of the neutron star model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="279" column="7" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a07f7d8c8b08ead664234f8c0a1a34e93" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int eos::i_skyrme</definition>
        <argsstring></argsstring>
        <name>i_skyrme</name>
        <qualifiedname>eos::i_skyrme</qualifiedname>
        <briefdescription>
<para>The index of the Skyrme model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="282" column="7" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Internal variables [protected]</header>
      <memberdef kind="variable" id="classeos_1ac62d7915bc25bbf00048aee31181e0ce" prot="protected" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1table__units" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::table_units</ref></type>
        <definition>o2scl::table_units eos::nstar_tab</definition>
        <argsstring></argsstring>
        <name>nstar_tab</name>
        <qualifiedname>eos::nstar_tab</qualifiedname>
        <briefdescription>
<para>The table which stores the neutron star EOS results. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="366" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a802488baa08672fdef78f95eb9707280" prot="protected" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1table__units" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::table_units</ref></type>
        <definition>o2scl::table_units eos::UNEDF_tab</definition>
        <argsstring></argsstring>
        <name>UNEDF_tab</name>
        <qualifiedname>eos::UNEDF_tab</qualifiedname>
        <briefdescription>
<para>The table which stores the Skyrme fits. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="369" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1af54fbf548389aaf2cdcc10bd3318c7aa" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos::model_selected</definition>
        <argsstring></argsstring>
        <name>model_selected</name>
        <qualifiedname>eos::model_selected</qualifiedname>
        <briefdescription>
<para>If true, a model has been selected (default false) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="373" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a0b14a8f3c4f4675cc67626a5db20ec14" prot="protected" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1rng" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::rng</ref></type>
        <definition>o2scl::rng eos::rng</definition>
        <argsstring></argsstring>
        <name>rng</name>
        <qualifiedname>eos::rng</qualifiedname>
        <briefdescription>
<para>Random number generator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="376" column="4" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>EOS outputs</header>
      <memberdef kind="variable" id="classeos_1a0e349604b1fbd0c44265a042d25caa85" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double eos::f_deg</definition>
        <argsstring></argsstring>
        <name>f_deg</name>
        <qualifiedname>eos::f_deg</qualifiedname>
        <briefdescription>
<para>The free energy of degenerate matter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="382" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a903b4089d53c001c24a5a5608882a9cb" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double eos::f_virial</definition>
        <argsstring></argsstring>
        <name>f_virial</name>
        <qualifiedname>eos::f_virial</qualifiedname>
        <briefdescription>
<para>The virial free energy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="385" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a2e1699b00bfc1d3d65d33c2ecea127cd" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double eos::s_virial</definition>
        <argsstring></argsstring>
        <name>s_virial</name>
        <qualifiedname>eos::s_virial</qualifiedname>
        <briefdescription>
<para>The virial entropy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="388" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a123f00b92ba314ddcb470a2b1f7ef59c" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double eos::Lambda_bar_14</definition>
        <argsstring></argsstring>
        <name>Lambda_bar_14</name>
        <qualifiedname>eos::Lambda_bar_14</qualifiedname>
        <briefdescription>
<para>The value of <formula id="6">$ \bar{\Lambda} $</formula> for a 1.4 solar mass neutron star. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="393" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="393" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>The fit to the neutron star EOS [protected]</header>
      <memberdef kind="variable" id="classeos_1a55791c582d903aaaf61de6e25ae5be41" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; eos::ns_fit_parms</definition>
        <argsstring></argsstring>
        <name>ns_fit_parms</name>
        <qualifiedname>eos::ns_fit_parms</qualifiedname>
        <briefdescription>
<para>Parameters for the function which fits the neutron star EOS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="408" column="15" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1ad75fc91b44b7c8a44c0820191d2e5ee3" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double eos::chi2_ns</definition>
        <argsstring></argsstring>
        <name>chi2_ns</name>
        <qualifiedname>eos::chi2_ns</qualifiedname>
        <briefdescription>
<para>The chi-squared for the neutron star fit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="449" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a03553fcb0bf2589de3324ad40d9543a9" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double eos::ns_nb_max</definition>
        <argsstring></argsstring>
        <name>ns_nb_max</name>
        <qualifiedname>eos::ns_nb_max</qualifiedname>
        <briefdescription>
<para>The maximum baryon density at which the neutron star EOS is causal. </para>
        </briefdescription>
        <detaileddescription>
<para>This quantity is determined by <ref refid="classeos_1ae02ba6f3224e7ae56586f9aca94f5c87" kindref="member">ns_fit()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="456" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a56066be90d4464ee499c2ed326d5b6b5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eos::energy_density_ns</definition>
        <argsstring>(double nn)</argsstring>
        <name>energy_density_ns</name>
        <qualifiedname>eos::energy_density_ns</qualifiedname>
        <param>
          <type>double</type>
          <declname>nn</declname>
        </param>
        <briefdescription>
<para>Compute the energy density (in <formula id="7">$ \mathrm{fm}^{-4} $</formula>) of neutron matter at high density from the neutron star data using the most recent fit (without the rest mass contribution) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Currently this just returns the value of <ref refid="classeos_1a11dcf97591da472a52cc06b72beb0d1b" kindref="member">ed_fit()</ref> . </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="405" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a7ea14982214528c766ec361401684e24" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eos::fit_fun</definition>
        <argsstring>(size_t np, const std::vector&lt; double &gt; &amp;parms, double nb)</argsstring>
        <name>fit_fun</name>
        <qualifiedname>eos::fit_fun</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>np</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>parms</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nb</declname>
        </param>
        <briefdescription>
<para>The fit function for the energy per particle in units of MeV as a function of the baryon density (in <formula id="8">$ \mathrm{fm}^{-3} $</formula> ) </para>
        </briefdescription>
        <detaileddescription>
<para>Note this function does not include the rest mass energy density for the nucleons. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="417" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a11dcf97591da472a52cc06b72beb0d1b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eos::ed_fit</definition>
        <argsstring>(double nb)</argsstring>
        <name>ed_fit</name>
        <qualifiedname>eos::ed_fit</qualifiedname>
        <param>
          <type>double</type>
          <declname>nb</declname>
        </param>
        <briefdescription>
<para>The energy density (in <formula id="7">$ \mathrm{fm}^{-4} $</formula> ) as a function of baryon density (in <formula id="8">$ \mathrm{fm}^{-3} $</formula> ) </para>
        </briefdescription>
        <detaileddescription>
<para>Note this function does not include the rest mass energy density for the nucleons. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="426" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a7b77c6340798d21d2115deece7efd8ca" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eos::dmudn_fit</definition>
        <argsstring>(double nb)</argsstring>
        <name>dmudn_fit</name>
        <qualifiedname>eos::dmudn_fit</qualifiedname>
        <param>
          <type>double</type>
          <declname>nb</declname>
        </param>
        <briefdescription>
<para>The inverse susceptibility (in <formula id="9">$ \mathrm{fm}^{2} $</formula> ) as a function of baryon density (in <formula id="8">$ \mathrm{fm}^{-3} $</formula> ) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="431" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a337b4bb929454134ff7295409fdf8dfd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eos::cs2_fit</definition>
        <argsstring>(double nb)</argsstring>
        <name>cs2_fit</name>
        <qualifiedname>eos::cs2_fit</qualifiedname>
        <param>
          <type>double</type>
          <declname>nb</declname>
        </param>
        <briefdescription>
<para>The speed of sound as a function of baryon density (in <formula id="8">$ \mathrm{fm}^{-3} $</formula> ) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="436" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1aa6e39d3d5519ba1b07a58bc84c8ba91b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eos::min_max_cs2</definition>
        <argsstring>(double &amp;cs2_min, double &amp;cs2_max)</argsstring>
        <name>min_max_cs2</name>
        <qualifiedname>eos::min_max_cs2</qualifiedname>
        <param>
          <type>double &amp;</type>
          <declname>cs2_min</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>cs2_max</declname>
        </param>
        <briefdescription>
<para>Compute the minimum and maximum speed of sound between 0.08 and <ref refid="classeos_1a03553fcb0bf2589de3324ad40d9543a9" kindref="member">ns_nb_max</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="441" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1ae02ba6f3224e7ae56586f9aca94f5c87" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eos::ns_fit</definition>
        <argsstring>(int row)</argsstring>
        <name>ns_fit</name>
        <qualifiedname>eos::ns_fit</qualifiedname>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <briefdescription>
<para>Fit neutron star data from Bamr to an analytical expression. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="446" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a4726c6da75a70d1e7294f20e1a297b5b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eos::mu_fit</definition>
        <argsstring>(double nb)</argsstring>
        <name>mu_fit</name>
        <qualifiedname>eos::mu_fit</qualifiedname>
        <param>
          <type>double</type>
          <declname>nb</declname>
        </param>
        <briefdescription>
<para>The baryon number chemical potential (in <formula id="10">$
\mathrm{fm}^{-1} $</formula> ) as a function of number density (in <formula id="11">$
\mathrm{fm}^{-3} $</formula> ) </para>
        </briefdescription>
        <detaileddescription>
<para>Note this function does not include the rest mass for the nucleons. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="465" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Parameter objects</header>
      <memberdef kind="variable" id="classeos_1a113d544db8f2fb842b57ff2f91eec588" prot="protected" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__int" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_int</ref></type>
        <definition>o2scl::cli::parameter_int eos::p_verbose</definition>
        <argsstring></argsstring>
        <name>p_verbose</name>
        <qualifiedname>eos::p_verbose</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="470" column="29" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1ab5cef53d24699c484d538a856ca03bd0" prot="protected" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__bool" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_bool</ref></type>
        <definition>o2scl::cli::parameter_bool eos::p_old_ns_fit</definition>
        <argsstring></argsstring>
        <name>p_old_ns_fit</name>
        <qualifiedname>eos::p_old_ns_fit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="471" column="30" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1ae04c7341212965d955c71cb688cebaa5" prot="protected" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__bool" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_bool</ref></type>
        <definition>o2scl::cli::parameter_bool eos::p_ns_record</definition>
        <argsstring></argsstring>
        <name>p_ns_record</name>
        <qualifiedname>eos::p_ns_record</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="472" column="30" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a368119648c8709b9d53ad13d375073f5" prot="protected" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__bool" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_bool</ref></type>
        <definition>o2scl::cli::parameter_bool eos::p_include_muons</definition>
        <argsstring></argsstring>
        <name>p_include_muons</name>
        <qualifiedname>eos::p_include_muons</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="473" column="30" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a5ff4775cbc9def7bcb9c123744397048" prot="protected" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__bool" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_bool</ref></type>
        <definition>o2scl::cli::parameter_bool eos::p_select_cs2_test</definition>
        <argsstring></argsstring>
        <name>p_select_cs2_test</name>
        <qualifiedname>eos::p_select_cs2_test</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="474" column="30" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1af8925da98b919072e94a34b493f0c185" prot="protected" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__bool" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_bool</ref></type>
        <definition>o2scl::cli::parameter_bool eos::p_test_ns_cs2</definition>
        <argsstring></argsstring>
        <name>p_test_ns_cs2</name>
        <qualifiedname>eos::p_test_ns_cs2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="475" column="30" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="475" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a1f7f15f61f329ddf72a0733d77a36bac" prot="protected" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__bool" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_bool</ref></type>
        <definition>o2scl::cli::parameter_bool eos::p_use_alt_eos</definition>
        <argsstring></argsstring>
        <name>p_use_alt_eos</name>
        <qualifiedname>eos::p_use_alt_eos</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="476" column="30" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1af18bdac8e8845a31672bcc5e89a2e103" prot="protected" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__double" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_double</ref></type>
        <definition>o2scl::cli::parameter_double eos::p_a_virial</definition>
        <argsstring></argsstring>
        <name>p_a_virial</name>
        <qualifiedname>eos::p_a_virial</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="477" column="32" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1ad4c78d840172ba24b525f562efe4a3d7" prot="protected" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1cli_1_1parameter__double" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli::parameter_double</ref></type>
        <definition>o2scl::cli::parameter_double eos::p_b_virial</definition>
        <argsstring></argsstring>
        <name>p_b_virial</name>
        <qualifiedname>eos::p_b_virial</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="478" column="32" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a06ea10ebf76e95b729bc34d5edb59427" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eos::rmf_fields</definition>
        <argsstring></argsstring>
        <name>rmf_fields</name>
        <qualifiedname>eos::rmf_fields</qualifiedname>
        <briefdescription>
<para>If true, then RMF fields are included. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="482" column="8" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="482" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Particle objects [protected]</header>
      <memberdef kind="variable" id="classeos_1a4e879d0da07e477432f13fd60e7eb962" prot="protected" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1eos__leptons" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::eos_leptons</ref></type>
        <definition>o2scl::eos_leptons eos::elep</definition>
        <argsstring></argsstring>
        <name>elep</name>
        <qualifiedname>eos::elep</qualifiedname>
        <briefdescription>
<para>New lepton object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="537" column="22" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="537" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a7d08a8fedcc33b7789cd889f30aff342" prot="protected" static="no" mutable="no">
        <type>o2scl::fermion</type>
        <definition>o2scl::fermion eos::electron</definition>
        <argsstring></argsstring>
        <name>electron</name>
        <qualifiedname>eos::electron</qualifiedname>
        <briefdescription>
<para>Electron/positron. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="541" column="18" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="541" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a9163e34ddcb615af9ec561fb44f1655f" prot="protected" static="no" mutable="no">
        <type>o2scl::fermion</type>
        <definition>o2scl::fermion eos::muon</definition>
        <argsstring></argsstring>
        <name>muon</name>
        <qualifiedname>eos::muon</qualifiedname>
        <briefdescription>
<para>Muon/anti-muon. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="545" column="18" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="545" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a5ff2fbd5f7622bf05e31bb03a63c900e" prot="protected" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1boson" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::boson</ref></type>
        <definition>o2scl::boson eos::photon</definition>
        <argsstring></argsstring>
        <name>photon</name>
        <qualifiedname>eos::photon</qualifiedname>
        <briefdescription>
<para>Photon. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="549" column="16" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="549" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a1d6a2e292171de1dc51960cc51c610f9" prot="protected" static="no" mutable="no">
        <type>o2scl::fermion</type>
        <definition>o2scl::fermion eos::neutron</definition>
        <argsstring></argsstring>
        <name>neutron</name>
        <qualifiedname>eos::neutron</qualifiedname>
        <briefdescription>
<para>Neutron. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="552" column="18" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="552" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a4644e7862f3fecbaa246beb554da8847" prot="protected" static="no" mutable="no">
        <type>o2scl::fermion</type>
        <definition>o2scl::fermion eos::proton</definition>
        <argsstring></argsstring>
        <name>proton</name>
        <qualifiedname>eos::proton</qualifiedname>
        <briefdescription>
<para>Proton. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="555" column="18" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="555" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a59936e5b4616951e3cb4b2a605b26698" prot="protected" static="no" mutable="no">
        <type>o2scl::fermion</type>
        <definition>o2scl::fermion eos::n_chiral</definition>
        <argsstring></argsstring>
        <name>n_chiral</name>
        <qualifiedname>eos::n_chiral</qualifiedname>
        <briefdescription>
<para>Neutron for chiral part. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="558" column="18" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="558" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a1e9900aedd76d412c6471bb41793a18e" prot="protected" static="no" mutable="no">
        <type>o2scl::fermion</type>
        <definition>o2scl::fermion eos::p_chiral</definition>
        <argsstring></argsstring>
        <name>p_chiral</name>
        <qualifiedname>eos::p_chiral</qualifiedname>
        <briefdescription>
<para>Proton for chiral part. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="561" column="18" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="561" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a60f53d36893b821e72e08aff3250ddd8" prot="protected" static="no" mutable="no">
        <type>o2scl::fermion</type>
        <definition>o2scl::fermion eos::neutrino</definition>
        <argsstring></argsstring>
        <name>neutrino</name>
        <qualifiedname>eos::neutrino</qualifiedname>
        <briefdescription>
<para>Neutrino. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="564" column="18" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="564" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Base physics objects [protected]</header>
      <memberdef kind="variable" id="classeos_1af57f3af5a2b3e397232e7c6f9977f169" prot="protected" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1eos__had__virial" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::eos_had_virial</ref></type>
        <definition>o2scl::eos_had_virial eos::vsd</definition>
        <argsstring></argsstring>
        <name>vsd</name>
        <qualifiedname>eos::vsd</qualifiedname>
        <briefdescription>
<para>The virial equation solver (now part of O2scl) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="570" column="25" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="570" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1afead2a3442d9ad320bcce5043a6a801e" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceo2scl_1abe7ceb41876bd41c87b259f6defe3e4a" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::fermion_rel</ref></type>
        <definition>o2scl::fermion_rel eos::relf</definition>
        <argsstring></argsstring>
        <name>relf</name>
        <qualifiedname>eos::relf</qualifiedname>
        <briefdescription>
<para>Object for computing electron/positron thermodynamic integrals. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="574" column="22" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="574" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a8c5a293eb5e1a6800eadb5d345ba9967" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref></type>
        <definition>o2scl::thermo eos::th2</definition>
        <argsstring></argsstring>
        <name>th2</name>
        <qualifiedname>eos::th2</qualifiedname>
        <briefdescription>
<para>Thermodynamic quantities. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="577" column="17" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="577" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a5c9585cd6a83c158489d45c39025aaa9" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref></type>
        <definition>o2scl::thermo eos::th_chiral</definition>
        <argsstring></argsstring>
        <name>th_chiral</name>
        <qualifiedname>eos::th_chiral</qualifiedname>
        <briefdescription>
<para>Thermodynamic quantities for chiral part. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="580" column="17" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="580" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a1ce709670f5e43caba65e040b9cc02f9" prot="protected" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1eos__had__skyrme" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::eos_had_skyrme</ref></type>
        <definition>o2scl::eos_had_skyrme eos::sk</definition>
        <argsstring></argsstring>
        <name>sk</name>
        <qualifiedname>eos::sk</qualifiedname>
        <briefdescription>
<para>Base EOS model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="583" column="25" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="583" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a672a26f8553d520dc941519e63e86fcc" prot="protected" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1eos__had__rmf" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::eos_had_rmf</ref></type>
        <definition>o2scl::eos_had_rmf eos::rmf</definition>
        <argsstring></argsstring>
        <name>rmf</name>
        <qualifiedname>eos::rmf</qualifiedname>
        <briefdescription>
<para>Base RMF model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="586" column="22" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="586" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a0373c607528d50a208fbe0bff038380f" prot="protected" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1eos__had__rmf__hyp" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::eos_had_rmf_hyp</ref></type>
        <definition>o2scl::eos_had_rmf_hyp eos::rmf_hyp</definition>
        <argsstring></argsstring>
        <name>rmf_hyp</name>
        <qualifiedname>eos::rmf_hyp</qualifiedname>
        <briefdescription>
<para>Base RMF model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="589" column="26" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="589" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1ae08253e92e8f4dec1d3e41ce2d5d0279" prot="protected" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1eos__had__skyrme" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::eos_had_skyrme</ref></type>
        <definition>o2scl::eos_had_skyrme eos::sk_Tcorr</definition>
        <argsstring></argsstring>
        <name>sk_Tcorr</name>
        <qualifiedname>eos::sk_Tcorr</qualifiedname>
        <briefdescription>
<para>Skyrme model for finite-temperature correction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="592" column="25" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="592" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a0e84093516ee705a0f759d12be6152f5" prot="protected" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1eos__had__temp__eden__base" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::eos_had_temp_eden_base</ref> *</type>
        <definition>o2scl::eos_had_temp_eden_base* eos::eos_Tcorr</definition>
        <argsstring></argsstring>
        <name>eos_Tcorr</name>
        <qualifiedname>eos::eos_Tcorr</qualifiedname>
        <briefdescription>
<para>Pointer to EOS for finite-temperature corrections. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="595" column="33" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="595" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a48c44c24584afa24b514959434cda651" prot="protected" static="no" mutable="no">
        <type><ref refid="classeos__crust__virial__v2" kindref="compound">eos_crust_virial_v2</ref></type>
        <definition>eos_crust_virial_v2 eos::ecv</definition>
        <argsstring></argsstring>
        <name>ecv</name>
        <qualifiedname>eos::ecv</qualifiedname>
        <briefdescription>
<para>The virial EOS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="598" column="23" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="598" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a48d645e17b016ffef047b73d2f517d11" prot="protected" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1eos__had__skyrme" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::eos_had_skyrme</ref></type>
        <definition>o2scl::eos_had_skyrme eos::sk_alt</definition>
        <argsstring></argsstring>
        <name>sk_alt</name>
        <qualifiedname>eos::sk_alt</qualifiedname>
        <briefdescription>
<para>Alternative skryme model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="601" column="25" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="601" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a2f327f60301c5def791ed3e2e31a505e" prot="protected" static="no" mutable="no">
        <type><ref refid="classo2scl_1_1eos__had__temp__base" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::eos_had_temp_base</ref> *</type>
        <definition>o2scl::eos_had_temp_base* eos::eosp_alt</definition>
        <argsstring></argsstring>
        <name>eosp_alt</name>
        <qualifiedname>eos::eosp_alt</qualifiedname>
        <briefdescription>
<para>Pointer to alternative model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="604" column="28" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="604" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a72b86f7d53fc7dd3947c556f7fa0d3b9" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string eos::alt_name</definition>
        <argsstring></argsstring>
        <name>alt_name</name>
        <qualifiedname>eos::alt_name</qualifiedname>
        <briefdescription>
<para>Name of the alternate EOS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="607" column="15" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="607" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>The parameters for the QMC energy density [protected]</header>
      <memberdef kind="variable" id="classeos_1aac78f7dc19ac34864c8903f6797378d5" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double eos::qmc_beta</definition>
        <argsstring></argsstring>
        <name>qmc_beta</name>
        <qualifiedname>eos::qmc_beta</qualifiedname>
        <briefdescription>
<para>The second exponent for density in the QMC EOS (unitless) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="613" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="613" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1aa1d4bd74068377744160c5aa5b6c46a3" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double eos::qmc_b</definition>
        <argsstring></argsstring>
        <name>qmc_b</name>
        <qualifiedname>eos::qmc_b</qualifiedname>
        <briefdescription>
<para>The second coefficient for the QMC EOS (in MeV) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="615" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="615" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1ad656a3078814fbeceb967e6d43f08bfa" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double eos::qmc_n0</definition>
        <argsstring></argsstring>
        <name>qmc_n0</name>
        <qualifiedname>eos::qmc_n0</qualifiedname>
        <briefdescription>
<para>The saturation density of the QMC EOS, equal to <formula id="12">$ 0.16~\mathrm{fm}^{-3} $</formula>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="619" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="619" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Output saturation properties [protected]</header>
      <memberdef kind="variable" id="classeos_1a01e4cfdcfa60927e73089f6bf586ff14" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double eos::eos_EoA</definition>
        <argsstring></argsstring>
        <name>eos_EoA</name>
        <qualifiedname>eos::eos_EoA</qualifiedname>
        <briefdescription>
<para>The binding energy per particle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="625" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="625" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1aa5d6c808833673220aed207a40dfe5fd" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double eos::eos_K</definition>
        <argsstring></argsstring>
        <name>eos_K</name>
        <qualifiedname>eos::eos_K</qualifiedname>
        <briefdescription>
<para>The incompressibility. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="628" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="628" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a7b0ce0f801d0318e5804d2b2daaab6cb" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double eos::eos_n0</definition>
        <argsstring></argsstring>
        <name>eos_n0</name>
        <qualifiedname>eos::eos_n0</qualifiedname>
        <briefdescription>
<para>The saturation density. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="631" column="10" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="631" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Basic EOS functions [protected]</header>
      <memberdef kind="function" id="classeos_1ac16f6a759590825144bea5e6944153a9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eos::free_energy_density</definition>
        <argsstring>(o2scl::fermion &amp;n, o2scl::fermion &amp;p, double T, o2scl::thermo &amp;th)</argsstring>
        <name>free_energy_density</name>
        <qualifiedname>eos::free_energy_density</qualifiedname>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref> &amp;</type>
          <declname>th</declname>
        </param>
        <briefdescription>
<para>Return the total free energy density of matter (without the rest mass contribution for the nucleons) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="290" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1abda7474511cb007f9549a59c137fae84" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eos::free_energy_density_detail</definition>
        <argsstring>(o2scl::fermion &amp;n, o2scl::fermion &amp;p, double T, o2scl::thermo &amp;th, std::map&lt; std::string, double &gt; &amp;vdet)</argsstring>
        <name>free_energy_density_detail</name>
        <qualifiedname>eos::free_energy_density_detail</qualifiedname>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref> &amp;</type>
          <declname>th</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, double &gt; &amp;</type>
          <declname>vdet</declname>
        </param>
        <briefdescription>
<para>Compute the free energy returning several details as output parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>f1 is g*f_virial f2 is (1-g)*f_skyrme f3 is (1-g)*delta^2*esym f4 is (1-g)*delta f_hot</para>
<para>so that the total homogeneous free energy is f1+f2+f3+f4 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="304" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a4144f3aff52bde7d7e2b00099061ae60" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double eos::free_energy_density_virial</definition>
        <argsstring>(o2scl::fermion &amp;n, o2scl::fermion &amp;p, double T, o2scl::thermo &amp;th, double &amp;dmundnn, double &amp;dmundnp, double &amp;dmupdnn, double &amp;dmupdnp, double &amp;dmundT, double &amp;dmupdT)</argsstring>
        <name>free_energy_density_virial</name>
        <qualifiedname>eos::free_energy_density_virial</qualifiedname>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref> &amp;</type>
          <declname>th</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>dmundnn</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>dmundnp</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>dmupdnn</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>dmupdnp</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>dmundT</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>dmupdT</declname>
        </param>
        <briefdescription>
<para>Compute the free energy density using the virial expansion including derivative information. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="311" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1ab3ce280e28cbe6afedd9a74815592090" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>virtual double eos::free_energy_density_virial</definition>
        <argsstring>(o2scl::fermion &amp;n, o2scl::fermion &amp;p, double T, o2scl::thermo &amp;th)</argsstring>
        <name>free_energy_density_virial</name>
        <qualifiedname>eos::free_energy_density_virial</qualifiedname>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref> &amp;</type>
          <declname>th</declname>
        </param>
        <briefdescription>
<para>Compute the free energy density using the virial expansion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="320" column="18" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="321" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a9d4b034dd1e222ce248e478a89d9004b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eos::free_energy_density_alt</definition>
        <argsstring>(o2scl::fermion &amp;n, o2scl::fermion &amp;p, double nn, double np, double T, o2scl::thermo &amp;th)</argsstring>
        <name>free_energy_density_alt</name>
        <qualifiedname>eos::free_energy_density_alt</qualifiedname>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>np</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref> &amp;</type>
          <declname>th</declname>
        </param>
        <briefdescription>
<para>Alternate form of <ref refid="classeos_1ac16f6a759590825144bea5e6944153a9" kindref="member">free_energy_density()</ref> for computing derivatives. </para>
        </briefdescription>
        <detaileddescription>
<para>This function does not include electrons or photons. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="332" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1aac2d380b4481aec1f81bef711df6ce01" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eos::free_energy_density_ep</definition>
        <argsstring>(double nn, double np, double T)</argsstring>
        <name>free_energy_density_ep</name>
        <qualifiedname>eos::free_energy_density_ep</qualifiedname>
        <param>
          <type>double</type>
          <declname>nn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>np</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <briefdescription>
<para>Alternate form of <ref refid="classeos_1ac16f6a759590825144bea5e6944153a9" kindref="member">free_energy_density()</ref> which includes electrons, positrons, and photons. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="339" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a105fb4842fa275a592d84df10b77b313" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eos::entropy</definition>
        <argsstring>(o2scl::fermion &amp;n, o2scl::fermion &amp;p, double nn, double np, double T, o2scl::thermo &amp;th)</argsstring>
        <name>entropy</name>
        <qualifiedname>eos::entropy</qualifiedname>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>np</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref> &amp;</type>
          <declname>th</declname>
        </param>
        <briefdescription>
<para>Compute the entropy density including photons, electrons, and positrons. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is used in <ref refid="classeos_1ac61da4952bdae6a0dcdd1fa5a037fa36" kindref="member">cs2_func()</ref> . </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="346" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a3289d875b0f100e291d26fe2391840ab" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eos::ed</definition>
        <argsstring>(o2scl::fermion &amp;n, o2scl::fermion &amp;p, double nn, double np, double T, o2scl::thermo &amp;th)</argsstring>
        <name>ed</name>
        <qualifiedname>eos::ed</qualifiedname>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>np</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref> &amp;</type>
          <declname>th</declname>
        </param>
        <briefdescription>
<para>Compute energy density including photons and electons (without the rest mass energy density for the nucleons) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="352" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1ac61da4952bdae6a0dcdd1fa5a037fa36" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eos::cs2_func</definition>
        <argsstring>(o2scl::fermion &amp;n, o2scl::fermion &amp;p, double T, o2scl::thermo &amp;th)</argsstring>
        <name>cs2_func</name>
        <qualifiedname>eos::cs2_func</qualifiedname>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref> &amp;</type>
          <declname>th</declname>
        </param>
        <briefdescription>
<para>Compute the squared speed of sound. </para>
        </briefdescription>
        <detaileddescription>
<para>The temperature should be in <formula id="5">$ 1/\mathrm{fm} $</formula>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="359" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Other EOS functions [protected]</header>
      <memberdef kind="function" id="classeos_1a5f918881edf43f4a4a0797eea8e70c9a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eos::energy_density_qmc</definition>
        <argsstring>(double nn, double pn)</argsstring>
        <name>energy_density_qmc</name>
        <qualifiedname>eos::energy_density_qmc</qualifiedname>
        <param>
          <type>double</type>
          <declname>nn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pn</declname>
        </param>
        <briefdescription>
<para>Compute the energy density (in <formula id="7">$ \mathrm{fm}^{-4} $</formula>) of neutron matter from quantum Monte Carlo (without the rest mass contribution) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="490" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a1363b6b6d6cb43829b672e35a2434832" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos::new_ns_eos</definition>
        <argsstring>(double nb, o2scl::fermion &amp;n, double &amp;e_ns, double &amp;densdnn)</argsstring>
        <name>new_ns_eos</name>
        <qualifiedname>eos::new_ns_eos</qualifiedname>
        <param>
          <type>double</type>
          <declname>nb</declname>
        </param>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>e_ns</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>densdnn</declname>
        </param>
        <briefdescription>
<para>Construct a new neutron star EOS which ensures causality at high densities. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="495" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a0450e91436baddef1b53ec21791373e4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eos::dfdnn_total</definition>
        <argsstring>(o2scl::fermion &amp;n, o2scl::fermion &amp;p, double nn, double pn, double T, o2scl::thermo &amp;th)</argsstring>
        <name>dfdnn_total</name>
        <qualifiedname>eos::dfdnn_total</qualifiedname>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref> &amp;</type>
          <declname>th</declname>
        </param>
        <briefdescription>
<para>Compute dfdnn including photons and electons. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is used in <ref refid="classeos_1ac61da4952bdae6a0dcdd1fa5a037fa36" kindref="member">cs2_func()</ref> . </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="502" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a1d556879c5caf09532ca7398dce99a61" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eos::dfdnp_total</definition>
        <argsstring>(o2scl::fermion &amp;n, o2scl::fermion &amp;p, double nn, double pn, double T, o2scl::thermo &amp;th)</argsstring>
        <name>dfdnp_total</name>
        <qualifiedname>eos::dfdnp_total</qualifiedname>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref> &amp;</type>
          <declname>th</declname>
        </param>
        <briefdescription>
<para>Compute dfdnp including photons and electons. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is used in <ref refid="classeos_1ac61da4952bdae6a0dcdd1fa5a037fa36" kindref="member">cs2_func()</ref> . </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="509" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a1f8ac29273e5e0f1fc6bb1da9c2c578f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos::solve_Ye</definition>
        <argsstring>(size_t nv, const ubvector &amp;x, ubvector &amp;y, double nb, double T, double muL)</argsstring>
        <name>solve_Ye</name>
        <qualifiedname>eos::solve_Ye</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>nv</declname>
        </param>
        <param>
          <type>const <ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nb</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>double</type>
          <declname>muL</declname>
        </param>
        <briefdescription>
<para>Solve for Ye to ensure a specified value of muL at fixed T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="514" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a76f06b1b3ab9e0fc55f6ff024a38db2f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos::solve_coeff_big</definition>
        <argsstring>(size_t nv, const ubvector &amp;x, ubvector &amp;y, double nb_last, double cs_ns_2, double cs_ns_last)</argsstring>
        <name>solve_coeff_big</name>
        <qualifiedname>eos::solve_coeff_big</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>nv</declname>
        </param>
        <param>
          <type>const <ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nb_last</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cs_ns_2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cs_ns_last</declname>
        </param>
        <briefdescription>
<para>solve for a1 and a2 when cs_ns(2.0)&gt;cs_ns(1.28) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="519" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a11c54a35b13fa5c9eb3229a019d1d164" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos::solve_coeff_small</definition>
        <argsstring>(size_t nv, const ubvector &amp;x, ubvector &amp;y, double nb_last, double cs_ns_2, double cs_ns_last)</argsstring>
        <name>solve_coeff_small</name>
        <qualifiedname>eos::solve_coeff_small</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>nv</declname>
        </param>
        <param>
          <type>const <ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nb_last</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cs_ns_2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cs_ns_last</declname>
        </param>
        <briefdescription>
<para>solve for a1 and a2 when cs_ns(2.0)&lt;cs_ns(1.28) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="524" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1aa6e242360755e084e3845f8ad7ca5034" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos::select_internal</definition>
        <argsstring>(int i_ns_loc, int i_skyrme_loc, double qmc_alpha_loc, double qmc_a_loc, double eos_L_loc, double eos_S_loc, double phi_loc)</argsstring>
        <name>select_internal</name>
        <qualifiedname>eos::select_internal</qualifiedname>
        <param>
          <type>int</type>
          <declname>i_ns_loc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i_skyrme_loc</declname>
        </param>
        <param>
          <type>double</type>
          <declname>qmc_alpha_loc</declname>
        </param>
        <param>
          <type>double</type>
          <declname>qmc_a_loc</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eos_L_loc</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eos_S_loc</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phi_loc</declname>
        </param>
        <briefdescription>
<para>Internal select function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="529" column="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Constructor and destructor</header>
      <memberdef kind="function" id="classeos_1a1df61d910b9ac311960ec8d4f1290fff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eos::eos</definition>
        <argsstring>()</argsstring>
        <name>eos</name>
        <qualifiedname>eos::eos</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="638" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a25db96648576a8517d3b0dc93505b708" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual eos::~eos</definition>
        <argsstring>()</argsstring>
        <name>~eos</name>
        <qualifiedname>eos::~eos</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="640" column="11" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="640" bodyend="641"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Command-line interface functions [public]</header>
      <memberdef kind="function" id="classeos_1ab08256bdce7d3ff415c484b774505e2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos::table_Ye</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>table_Ye</name>
        <qualifiedname>eos::table_Ye</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Construct a table at fixed electron fraction. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;filename&gt; &lt;Ye&gt;</para>
<para>Constructs the EOS as a table3d object and outputs to &lt;filename&gt;. Currently stores Fint, Pint, Sint, g, msn, and msp. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="714" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1aa295268eede25d82a2b192aa7b627083" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos::hrg_load</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>hrg_load</name>
        <qualifiedname>eos::hrg_load</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Load the HRG table. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;filename&gt;</para>
<para>Loads a list of resonances from a text file. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="723" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a5c3ca739dbccf7e530bc5bc660f575b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos::alt_model</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>alt_model</name>
        <qualifiedname>eos::alt_model</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Use alternate, rather than the Du et al. EOS. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;&quot;Skyrme&quot;&gt; &lt;name&gt; or &lt;&quot;RMF&quot;&gt; &lt;name&gt;, etc.</para>
<para>For a Skyrme model, the first argument should be the word <computeroutput>Skyrme</computeroutput>, and the second should be the name of the desired Skyrme model. Similarly for an RMF model. (Hyperons are not yet fully supported.) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="735" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a9037d1e643beb2a46975c2d6ee0f7701" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos::table_nB</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>table_nB</name>
        <qualifiedname>eos::table_nB</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Construct a table at fixed baryon density. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;filename&gt; &lt;nB&gt;</para>
<para>Constructs the EOS as a table3d object and outputs to &lt;filename&gt;. Currently stores Fint, Pint, Sint, g, msn, and msp. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="746" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1ae642fc617fe1b1b5af6c347a45ac59eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos::pns_eos</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>pns_eos</name>
        <qualifiedname>eos::pns_eos</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Construct the PNS EOS and the M-R curve. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;entropy per baryon&gt; &lt;lepton fraction&gt; &lt;output filename&gt;</para>
<para>Use YL=0 for beta equilibrium. Currently always uses a cold crust. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="756" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a8747580da79f5b7a67c2d398fc92da9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos::table_full</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>table_full</name>
        <qualifiedname>eos::table_full</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Construct a full 3D EOS table. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;filename&gt;</para>
<para>Stores grid information, Fint, Eint, Pint, Sint, mun, mup, cs2, mue, F, E, P, and S. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="765" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a2c05bd84679793e7df3b7f23a92b89fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos::test_deriv</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>test_deriv</name>
        <qualifiedname>eos::test_deriv</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Test the first derivatives of the free energy. </para>
        </briefdescription>
        <detaileddescription>
<para>Params.</para>
<para>Help. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="773" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1aa3bc65fa01f0eb33e795b5f2fe0c7d21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos::select_model</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>select_model</name>
        <qualifiedname>eos::select_model</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Select an EOS model. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;i_ns&gt; &lt;i_skyrme&gt; &lt;alpha&gt;  &lt;L&gt; <s> &lt;phi&gt;</s></para>
<para><s>Help. </s></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="781" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1aca0e9051a7e04930041783302730ae15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos::vir_comp</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>vir_comp</name>
        <qualifiedname>eos::vir_comp</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Compare the virial and full EOS. </para>
        </briefdescription>
        <detaileddescription>
<para>Params.</para>
<para>Help. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="789" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a9155f6ba7680bfc4c0abaf7fa7001a9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos::point</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>point</name>
        <qualifiedname>eos::point</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Evaluate the EOS at one (nB,Ye,T) point. </para>
        </briefdescription>
        <detaileddescription>
<para>Params.</para>
<para>Help. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="797" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a73f6d595ccaf7a58edd90f90e6d8e27b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos::random</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>random</name>
        <qualifiedname>eos::random</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Select a random EOS model. </para>
        </briefdescription>
        <detaileddescription>
<para>(No arguments.)</para>
<para>Select a random EOS, checking several physical constraints and re-selecting a new random EOS until all the constraints are met. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="807" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a572d844aa0cbd2fa62446886ca7c5f1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos::comp_figs</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>comp_figs</name>
        <qualifiedname>eos::comp_figs</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Compute the data for the comparison figures. </para>
        </briefdescription>
        <detaileddescription>
<para>Params.</para>
<para>Help. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="815" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a0704d6eea1ea797affeb42a358b7971f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos::mcarlo_data</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>mcarlo_data</name>
        <qualifiedname>eos::mcarlo_data</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Compute the data for the Monte Carlo figures. </para>
        </briefdescription>
        <detaileddescription>
<para>Params.</para>
<para>Help. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="823" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a2dafcf25ad75a9a2b640bc845bf71d05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos::vir_fit</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>vir_fit</name>
        <qualifiedname>eos::vir_fit</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Fit the virial EOS. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;no parameters&gt;</para>
<para>Fit the virial EOS table to the functional form specified in Du et al. (2019) using <ref refid="classo2scl_1_1eos__crust__virial_1ac7bb386251cf9ff82329462272bc44da" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">eos_crust_virial_v2::fit()</ref> . </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="832" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1aea1bd679e9f8b33ea8079b7cfd85ab0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos::test_eg</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>test_eg</name>
        <qualifiedname>eos::test_eg</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Test the electron and photon EOS. </para>
        </briefdescription>
        <detaileddescription>
<para>[filename]</para>
<para>This function tests the electron and photon EOS to ensure that it does not call the error handler (it does not test accuracy). It uses a larger grid than the default EOS grid and stores the results in tensor_grid objects. If a file is specified, these tensor_grid objects are output to the specified file. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="844" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a2763ba531a632f0924afaf81c6bd478d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos::eos_sn</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</argsstring>
        <name>eos_sn</name>
        <qualifiedname>eos::eos_sn</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>itive_com</declname>
        </param>
        <briefdescription>
<para>Compare to other EOSs? </para>
        </briefdescription>
        <detaileddescription>
<para>Params.</para>
<para>Help. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="852" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a0b672fd7170daab632111f4e26cc0c68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eos::free_energy_density_s</definition>
        <argsstring>(o2scl::fermion &amp;n, o2scl::fermion &amp;p, double Y_s, double T, o2scl::thermo &amp;th)</argsstring>
        <name>free_energy_density_s</name>
        <qualifiedname>eos::free_energy_density_s</qualifiedname>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Y_s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref> &amp;</type>
          <declname>th</declname>
        </param>
        <briefdescription>
<para>Free energy density as a function of the strangeness fraction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="858" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a4c6a1d2ba60fbb06bd3b3eb40b3ef5c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eos::free_energy_density_detail_s</definition>
        <argsstring>(o2scl::fermion &amp;n, o2scl::fermion &amp;p, double Y_s, double T, o2scl::thermo &amp;th, std::map&lt; std::string, double &gt; &amp;vdet)</argsstring>
        <name>free_energy_density_detail_s</name>
        <qualifiedname>eos::free_energy_density_detail_s</qualifiedname>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>o2scl::fermion &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Y_s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type><ref refid="namespaceo2scl_1a460e43ee0206e03188c364087815398f" kindref="member" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::thermo</ref> &amp;</type>
          <declname>th</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, double &gt; &amp;</type>
          <declname>vdet</declname>
        </param>
        <briefdescription>
<para>Free energy density as a function of the strangeness fraction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="865" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Miscellaneous functions [public]</header>
      <memberdef kind="function" id="classeos_1a4480600e93a338f8a2618b03b69efd13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos::solve_fixed_sonb_YL</definition>
        <argsstring>(size_t nv, const ubvector &amp;x, ubvector &amp;y, double nB, double sonb, double YL)</argsstring>
        <name>solve_fixed_sonb_YL</name>
        <qualifiedname>eos::solve_fixed_sonb_YL</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>nv</declname>
        </param>
        <param>
          <type>const <ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nB</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sonb</declname>
        </param>
        <param>
          <type>double</type>
          <declname>YL</declname>
        </param>
        <briefdescription>
<para>Solve for fixed entropy per baryon and fixed lepton fraction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="875" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a8d1df2f651c5278f9c0b1e6a31d4e264" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eos::solve_T</definition>
        <argsstring>(size_t nv, const ubvector &amp;x, ubvector &amp;y, double nb, double Ye, double sonb)</argsstring>
        <name>solve_T</name>
        <qualifiedname>eos::solve_T</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>nv</declname>
        </param>
        <param>
          <type>const <ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classboost_1_1numeric_1_1ublas_1_1vector" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">ubvector</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nb</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Ye</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sonb</declname>
        </param>
        <briefdescription>
<para>Solve for T to ensure a specified value of sonb at fixed Ye. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="880" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classeos_1a95f4ca5114228035d40de725eefc521a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void eos::setup_cli</definition>
        <argsstring>(o2scl::cli &amp;cl, bool read_docs=true)</argsstring>
        <name>setup_cli</name>
        <qualifiedname>eos::setup_cli</qualifiedname>
        <param>
          <type><ref refid="classo2scl_1_1cli" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::cli</ref> &amp;</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>read_docs</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Setup the command-line interface with commands and parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="887" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classeos_1a15e16e70ada929ed33667a05842a3553" prot="public" static="no" mutable="no">
        <type>std::vector&lt; o2scl::part_pdg_db::pdg_entry &gt;</type>
        <definition>std::vector&lt;o2scl::part_pdg_db::pdg_entry&gt; eos::part_db</definition>
        <argsstring></argsstring>
        <name>part_db</name>
        <qualifiedname>eos::part_db</qualifiedname>
        <briefdescription>
<para>Particle database. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="247" column="15" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a26747a345bdc51dd4b21f4dfe531464a" prot="public" static="no" mutable="no">
        <type>std::vector&lt; o2scl::fermion &gt;</type>
        <definition>std::vector&lt;o2scl::fermion&gt; eos::res_f</definition>
        <argsstring></argsstring>
        <name>res_f</name>
        <qualifiedname>eos::res_f</qualifiedname>
        <briefdescription>
<para>Fermionic resonances. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="251" column="15" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeos_1a26a9aa2bd8891eddc06dbae463307896" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classo2scl_1_1boson" kindref="compound" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag">o2scl::boson</ref> &gt;</type>
        <definition>std::vector&lt;o2scl::boson&gt; eos::res_b</definition>
        <argsstring></argsstring>
        <name>res_b</name>
        <qualifiedname>eos::res_b</qualifiedname>
        <briefdescription>
<para>Bosonic resonances. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/awsteiner/wcs/eos/eos.h" line="255" column="15" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Phenomenological EOS for homogeneous nucleonic matter. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>eos</label>
        <link refid="classeos"/>
      </node>
      <node id="2">
        <label>eos_nuclei</label>
        <link refid="classeos__nuclei"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>o2scl::convert_units&lt; double &gt;</label>
        <link refid="classo2scl_1_1convert__units" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="9" relation="usage">
          <edgelabel>fc</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>o2scl::cubic_real_coeff_gsl2&lt; fp_t &gt;</label>
        <link refid="classo2scl_1_1cubic__real__coeff__gsl2" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>eos</label>
        <link refid="classeos"/>
        <childnode refid="2" relation="usage">
          <edgelabel>UNEDF_tab</edgelabel>
          <edgelabel>nstar_tab</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>rng</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>p_verbose</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>p_include_muons</edgelabel>
          <edgelabel>p_ns_record</edgelabel>
          <edgelabel>p_old_ns_fit</edgelabel>
          <edgelabel>p_select_cs2_test</edgelabel>
          <edgelabel>p_test_ns_cs2</edgelabel>
          <edgelabel>p_use_alt_eos</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>p_a_virial</edgelabel>
          <edgelabel>p_b_virial</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>elep</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>photon</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>vsd</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>sk</edgelabel>
          <edgelabel>sk_Tcorr</edgelabel>
          <edgelabel>sk_alt</edgelabel>
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>rmf</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>rmf_hyp</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>eos_Tcorr</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>ecv</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>eosp_alt</edgelabel>
        </childnode>
      </node>
      <node id="50">
        <label>eos_crust_virial_v2</label>
        <link refid="classeos__crust__virial__v2"/>
        <childnode refid="51" relation="public-inheritance">
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>iv_ba</edgelabel>
          <edgelabel>iv_bpna</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>o2scl::find_constants&lt; fp_t &gt;</label>
        <link refid="classo2scl_1_1find__constants" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="7">
        <label>o2scl::interp_base&lt; vec_t, vec2_t &gt;</label>
        <link refid="classo2scl_1_1interp__base" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="6" relation="usage">
          <edgelabel>svx</edgelabel>
        </childnode>
      </node>
      <node id="52">
        <label>o2scl::interp_vec&lt; std::vector&lt; double &gt; &gt;</label>
        <link refid="classo2scl_1_1interp__vec" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>itp</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>o2scl::interp_vec&lt; vec_t &gt;</label>
        <link refid="classo2scl_1_1interp__vec" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>itp</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>o2scl::jacobian&lt; func_t, vec_t, mat_t &gt;</label>
        <link refid="classo2scl_1_1jacobian" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="19">
        <label>o2scl::jacobian_gsl&lt; func_t, vec_t, mat_t &gt;</label>
        <link refid="classo2scl_1_1jacobian__gsl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>o2scl::boson</label>
        <link refid="classo2scl_1_1boson" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="36" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>o2scl::cli::parameter</label>
        <link refid="classo2scl_1_1cli_1_1parameter" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="13">
        <label>o2scl::cli::parameter_bool</label>
        <link refid="classo2scl_1_1cli_1_1parameter__bool" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>o2scl::cli::parameter_double</label>
        <link refid="classo2scl_1_1cli_1_1parameter__double" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>o2scl::cli::parameter_int</label>
        <link refid="classo2scl_1_1cli_1_1parameter__int" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>o2scl::cubic_real&lt; class fp_t &gt;</label>
        <link refid="classo2scl_1_1cubic__real" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>o2scl::cubic_real_coeff&lt; class fp_t, class cx_t &gt;</label>
        <link refid="classo2scl_1_1cubic__real__coeff" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="46">
        <label>o2scl::deriv_base&lt; class func_t, class fp_t &gt;</label>
        <link refid="classo2scl_1_1deriv__base" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="45">
        <label>o2scl::deriv_gsl&lt; class func_t, class fp_t &gt;</label>
        <link refid="classo2scl_1_1deriv__gsl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="46" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>o2scl::eos_base</label>
        <link refid="classo2scl_1_1eos__base" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="37" relation="usage">
          <edgelabel>def_thermo</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>eos_thermo</edgelabel>
        </childnode>
      </node>
      <node id="51">
        <label>o2scl::eos_crust_virial</label>
        <link refid="classo2scl_1_1eos__crust__virial" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="48" relation="public-inheritance">
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>alpha</edgelabel>
          <edgelabel>deuteron</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>o2scl::eos_had_base</label>
        <link refid="classo2scl_1_1eos__had__base" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="43" relation="public-inheritance">
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>def_deriv</edgelabel>
          <edgelabel>def_deriv2</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>beta_mroot</edgelabel>
          <edgelabel>def_mroot</edgelabel>
          <edgelabel>def_sat_mroot</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>eos_mroot</edgelabel>
          <edgelabel>sat_mroot</edgelabel>
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>sat_deriv</edgelabel>
          <edgelabel>sat_deriv2</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>o2scl::eos_had_rmf</label>
        <link refid="classo2scl_1_1eos__had__rmf" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="48" relation="public-inheritance">
        </childnode>
      </node>
      <node id="49">
        <label>o2scl::eos_had_rmf_hyp</label>
        <link refid="classo2scl_1_1eos__had__rmf__hyp" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="47" relation="public-inheritance">
        </childnode>
      </node>
      <node id="39">
        <label>o2scl::eos_had_skyrme</label>
        <link refid="classo2scl_1_1eos__had__skyrme" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="40" relation="public-inheritance">
        </childnode>
      </node>
      <node id="41">
        <label>o2scl::eos_had_temp_base</label>
        <link refid="classo2scl_1_1eos__had__temp__base" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>fet</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>def_fet</edgelabel>
        </childnode>
      </node>
      <node id="40">
        <label>o2scl::eos_had_temp_eden_base</label>
        <link refid="classo2scl_1_1eos__had__temp__eden__base" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="41" relation="public-inheritance">
        </childnode>
      </node>
      <node id="48">
        <label>o2scl::eos_had_temp_pres_base</label>
        <link refid="classo2scl_1_1eos__had__temp__pres__base" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="41" relation="public-inheritance">
        </childnode>
      </node>
      <node id="38">
        <label>o2scl::eos_had_virial</label>
        <link refid="classo2scl_1_1eos__had__virial" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="15">
        <label>o2scl::eos_leptons</label>
        <link refid="classo2scl_1_1eos__leptons" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="16" relation="usage">
          <edgelabel>mh</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>frel</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>ph</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>th</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>o2scl::fermion_rel_tl&lt; class fermion_t, class fd_inte_t, class be_inte_t, class inte_t, class density_root_t, class root_t, class func_t, class fp_t &gt;</label>
        <link refid="classo2scl_1_1fermion__rel__tl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>alt_solver</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>density_root</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>o2scl::fermion_thermo_tl&lt; class fermion_t, class fd_inte_t, class be_inte_t, class root_t, class func_t, class fp_t &gt;</label>
        <link refid="classo2scl_1_1fermion__thermo__tl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="25" relation="public-inheritance">
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>crcg2</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>massless_root</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>o2scl::fermion_zerot_tl&lt; class fp_t &gt;</label>
        <link refid="classo2scl_1_1fermion__zerot__tl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="5">
        <label>o2scl::interp_base&lt; class vec_t, class vec2_t &gt;</label>
        <link refid="classo2scl_1_1interp__base" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="6" relation="usage">
          <edgelabel>svx</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>o2scl::jacobian&lt; class func_t, class vec_t, class mat_t &gt;</label>
        <link refid="classo2scl_1_1jacobian" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="17">
        <label>o2scl::mroot&lt; class func_t, class vec_t, class jfunc_t &gt;</label>
        <link refid="classo2scl_1_1mroot" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="16">
        <label>o2scl::mroot_hybrids&lt; class func_t, class vec_t, class mat_t, class jfunc_t &gt;</label>
        <link refid="classo2scl_1_1mroot__hybrids" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
        <childnode refid="18" relation="private-inheritance">
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>def_jac</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>df</edgelabel>
          <edgelabel>diag</edgelabel>
          <edgelabel>gradient</edgelabel>
          <edgelabel>newton</edgelabel>
          <edgelabel>qtdf</edgelabel>
          <edgelabel>qtf</edgelabel>
          <edgelabel>rdx</edgelabel>
          <edgelabel>v</edgelabel>
          <edgelabel>w</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>ajac</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>o2scl::mroot_hybrids_base</label>
        <link refid="classo2scl_1_1mroot__hybrids__base" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="29">
        <label>o2scl::poly_real_base&lt; class fp_t &gt;</label>
        <link refid="classo2scl_1_1poly__real__base" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="30" relation="usage">
          <edgelabel>rbg</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>o2scl::rng&lt; class fp_t &gt;</label>
        <link refid="classo2scl_1_1rng" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="32">
        <label>o2scl::root&lt; class func_t, class dfunc_t, class fp_t &gt;</label>
        <link refid="classo2scl_1_1root" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="31">
        <label>o2scl::root_bkt&lt; class func_t, class dfunc_t, class fp_t &gt;</label>
        <link refid="classo2scl_1_1root__bkt" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>o2scl::table&lt; class vec_t &gt;</label>
        <link refid="classo2scl_1_1table" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="4" relation="usage">
          <edgelabel>si</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>o2scl::table_units&lt; class vec_t &gt;</label>
        <link refid="classo2scl_1_1table__units" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>cup</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>o2scl::thermo_tl&lt; class fp_t &gt;</label>
        <link refid="classo2scl_1_1thermo__tl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="36">
        <label>o2scl::part_tl&lt; double &gt;</label>
        <link refid="classo2scl_1_1part__tl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="33">
        <label>o2scl::root&lt; func_t, func_t, fp_t &gt;</label>
        <link refid="classo2scl_1_1root" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="34">
        <label>o2scl::root_brent_gsl&lt; func_t, fp_t &gt;</label>
        <link refid="classo2scl_1_1root__brent__gsl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>o2scl::root_brent_gsl&lt; std::function&lt; fp_t(fp_t)&gt;, fp_t &gt;</label>
        <link refid="classo2scl_1_1root__brent__gsl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>o2scl::search_vec&lt; const vec_t &gt;</label>
        <link refid="classo2scl_1_1search__vec" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="37">
        <label>o2scl::thermo_tl&lt; double &gt;</label>
        <link refid="classo2scl_1_1thermo__tl" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
      <node id="21">
        <label>boost::numeric::ublas::vector&lt; double &gt;</label>
        <link refid="classboost_1_1numeric_1_1ublas_1_1vector" external="/Users/awsteiner/wcs/eos/doc/o2scl.tag"/>
      </node>
    </collaborationgraph>
    <location file="/Users/awsteiner/wcs/eos/eos.h" line="241" column="1" bodyfile="/Users/awsteiner/wcs/eos/eos.h" bodystart="241" bodyend="890"/>
    <listofallmembers>
      <member refid="classeos_1a5a1b813d87a973d3552ddcbcaae4c2eb" prot="public" virt="non-virtual"><scope>eos</scope><name>a_virial</name></member>
      <member refid="classeos_1a5c3ca739dbccf7e530bc5bc660f575b7" prot="public" virt="non-virtual"><scope>eos</scope><name>alt_model</name></member>
      <member refid="classeos_1a72b86f7d53fc7dd3947c556f7fa0d3b9" prot="protected" virt="non-virtual"><scope>eos</scope><name>alt_name</name></member>
      <member refid="classeos_1a828e85c817596153f6607355e42e5a85" prot="public" virt="non-virtual"><scope>eos</scope><name>b_virial</name></member>
      <member refid="classeos_1ad75fc91b44b7c8a44c0820191d2e5ee3" prot="protected" virt="non-virtual"><scope>eos</scope><name>chi2_ns</name></member>
      <member refid="classeos_1a572d844aa0cbd2fa62446886ca7c5f1e" prot="public" virt="non-virtual"><scope>eos</scope><name>comp_figs</name></member>
      <member refid="classeos_1a337b4bb929454134ff7295409fdf8dfd" prot="protected" virt="non-virtual"><scope>eos</scope><name>cs2_fit</name></member>
      <member refid="classeos_1ac61da4952bdae6a0dcdd1fa5a037fa36" prot="protected" virt="non-virtual"><scope>eos</scope><name>cs2_func</name></member>
      <member refid="classeos_1a0450e91436baddef1b53ec21791373e4" prot="protected" virt="non-virtual"><scope>eos</scope><name>dfdnn_total</name></member>
      <member refid="classeos_1a1d556879c5caf09532ca7398dce99a61" prot="protected" virt="non-virtual"><scope>eos</scope><name>dfdnp_total</name></member>
      <member refid="classeos_1a7b77c6340798d21d2115deece7efd8ca" prot="protected" virt="non-virtual"><scope>eos</scope><name>dmudn_fit</name></member>
      <member refid="classeos_1a48c44c24584afa24b514959434cda651" prot="protected" virt="non-virtual"><scope>eos</scope><name>ecv</name></member>
      <member refid="classeos_1a3289d875b0f100e291d26fe2391840ab" prot="protected" virt="non-virtual"><scope>eos</scope><name>ed</name></member>
      <member refid="classeos_1a11dcf97591da472a52cc06b72beb0d1b" prot="protected" virt="non-virtual"><scope>eos</scope><name>ed_fit</name></member>
      <member refid="classeos_1a7d08a8fedcc33b7789cd889f30aff342" prot="protected" virt="non-virtual"><scope>eos</scope><name>electron</name></member>
      <member refid="classeos_1a4e879d0da07e477432f13fd60e7eb962" prot="protected" virt="non-virtual"><scope>eos</scope><name>elep</name></member>
      <member refid="classeos_1a56066be90d4464ee499c2ed326d5b6b5" prot="protected" virt="non-virtual"><scope>eos</scope><name>energy_density_ns</name></member>
      <member refid="classeos_1a5f918881edf43f4a4a0797eea8e70c9a" prot="protected" virt="non-virtual"><scope>eos</scope><name>energy_density_qmc</name></member>
      <member refid="classeos_1a105fb4842fa275a592d84df10b77b313" prot="protected" virt="non-virtual"><scope>eos</scope><name>entropy</name></member>
      <member refid="classeos_1a1df61d910b9ac311960ec8d4f1290fff" prot="public" virt="non-virtual"><scope>eos</scope><name>eos</name></member>
      <member refid="classeos_1a01e4cfdcfa60927e73089f6bf586ff14" prot="protected" virt="non-virtual"><scope>eos</scope><name>eos_EoA</name></member>
      <member refid="classeos_1aa5d6c808833673220aed207a40dfe5fd" prot="protected" virt="non-virtual"><scope>eos</scope><name>eos_K</name></member>
      <member refid="classeos_1a4189930e80f2c9c6400fe4c35faa4646" prot="protected" virt="non-virtual"><scope>eos</scope><name>eos_L</name></member>
      <member refid="classeos_1a7b0ce0f801d0318e5804d2b2daaab6cb" prot="protected" virt="non-virtual"><scope>eos</scope><name>eos_n0</name></member>
      <member refid="classeos_1af00734826d37d4e2b40de82cffebc842" prot="protected" virt="non-virtual"><scope>eos</scope><name>eos_S</name></member>
      <member refid="classeos_1a2763ba531a632f0924afaf81c6bd478d" prot="public" virt="non-virtual"><scope>eos</scope><name>eos_sn</name></member>
      <member refid="classeos_1a0e84093516ee705a0f759d12be6152f5" prot="protected" virt="non-virtual"><scope>eos</scope><name>eos_Tcorr</name></member>
      <member refid="classeos_1a2f327f60301c5def791ed3e2e31a505e" prot="protected" virt="non-virtual"><scope>eos</scope><name>eosp_alt</name></member>
      <member refid="classeos_1a0e349604b1fbd0c44265a042d25caa85" prot="protected" virt="non-virtual"><scope>eos</scope><name>f_deg</name></member>
      <member refid="classeos_1a903b4089d53c001c24a5a5608882a9cb" prot="protected" virt="non-virtual"><scope>eos</scope><name>f_virial</name></member>
      <member refid="classeos_1a7ea14982214528c766ec361401684e24" prot="protected" virt="non-virtual"><scope>eos</scope><name>fit_fun</name></member>
      <member refid="classeos_1ac16f6a759590825144bea5e6944153a9" prot="protected" virt="non-virtual"><scope>eos</scope><name>free_energy_density</name></member>
      <member refid="classeos_1a9d4b034dd1e222ce248e478a89d9004b" prot="protected" virt="non-virtual"><scope>eos</scope><name>free_energy_density_alt</name></member>
      <member refid="classeos_1abda7474511cb007f9549a59c137fae84" prot="protected" virt="non-virtual"><scope>eos</scope><name>free_energy_density_detail</name></member>
      <member refid="classeos_1a4c6a1d2ba60fbb06bd3b3eb40b3ef5c1" prot="public" virt="non-virtual"><scope>eos</scope><name>free_energy_density_detail_s</name></member>
      <member refid="classeos_1aac2d380b4481aec1f81bef711df6ce01" prot="protected" virt="non-virtual"><scope>eos</scope><name>free_energy_density_ep</name></member>
      <member refid="classeos_1a0b672fd7170daab632111f4e26cc0c68" prot="public" virt="non-virtual"><scope>eos</scope><name>free_energy_density_s</name></member>
      <member refid="classeos_1a4144f3aff52bde7d7e2b00099061ae60" prot="protected" virt="virtual"><scope>eos</scope><name>free_energy_density_virial</name></member>
      <member refid="classeos_1ab3ce280e28cbe6afedd9a74815592090" prot="protected" virt="virtual"><scope>eos</scope><name>free_energy_density_virial</name></member>
      <member refid="classeos_1aa295268eede25d82a2b192aa7b627083" prot="public" virt="non-virtual"><scope>eos</scope><name>hrg_load</name></member>
      <member refid="classeos_1a8cd68a65afed99d0baf75edd407f598a" prot="protected" virt="non-virtual"><scope>eos</scope><name>i_ns</name></member>
      <member refid="classeos_1a07f7d8c8b08ead664234f8c0a1a34e93" prot="protected" virt="non-virtual"><scope>eos</scope><name>i_skyrme</name></member>
      <member refid="classeos_1adcd6aa9ad3fbe21200c70c877374aba9" prot="public" virt="non-virtual"><scope>eos</scope><name>include_muons</name></member>
      <member refid="classeos_1a123f00b92ba314ddcb470a2b1f7ef59c" prot="protected" virt="non-virtual"><scope>eos</scope><name>Lambda_bar_14</name></member>
      <member refid="classeos_1a0704d6eea1ea797affeb42a358b7971f" prot="public" virt="non-virtual"><scope>eos</scope><name>mcarlo_data</name></member>
      <member refid="classeos_1aa6e39d3d5519ba1b07a58bc84c8ba91b" prot="protected" virt="non-virtual"><scope>eos</scope><name>min_max_cs2</name></member>
      <member refid="classeos_1af54fbf548389aaf2cdcc10bd3318c7aa" prot="protected" virt="non-virtual"><scope>eos</scope><name>model_selected</name></member>
      <member refid="classeos_1a4726c6da75a70d1e7294f20e1a297b5b" prot="protected" virt="non-virtual"><scope>eos</scope><name>mu_fit</name></member>
      <member refid="classeos_1a9163e34ddcb615af9ec561fb44f1655f" prot="protected" virt="non-virtual"><scope>eos</scope><name>muon</name></member>
      <member refid="classeos_1a59936e5b4616951e3cb4b2a605b26698" prot="protected" virt="non-virtual"><scope>eos</scope><name>n_chiral</name></member>
      <member refid="classeos_1a60f53d36893b821e72e08aff3250ddd8" prot="protected" virt="non-virtual"><scope>eos</scope><name>neutrino</name></member>
      <member refid="classeos_1a1d6a2e292171de1dc51960cc51c610f9" prot="protected" virt="non-virtual"><scope>eos</scope><name>neutron</name></member>
      <member refid="classeos_1a1363b6b6d6cb43829b672e35a2434832" prot="protected" virt="non-virtual"><scope>eos</scope><name>new_ns_eos</name></member>
      <member refid="classeos_1ae02ba6f3224e7ae56586f9aca94f5c87" prot="protected" virt="non-virtual"><scope>eos</scope><name>ns_fit</name></member>
      <member refid="classeos_1a55791c582d903aaaf61de6e25ae5be41" prot="protected" virt="non-virtual"><scope>eos</scope><name>ns_fit_parms</name></member>
      <member refid="classeos_1a03553fcb0bf2589de3324ad40d9543a9" prot="protected" virt="non-virtual"><scope>eos</scope><name>ns_nb_max</name></member>
      <member refid="classeos_1aef3af455de493d339ea33c47747e018d" prot="public" virt="non-virtual"><scope>eos</scope><name>ns_record</name></member>
      <member refid="classeos_1ac62d7915bc25bbf00048aee31181e0ce" prot="protected" virt="non-virtual"><scope>eos</scope><name>nstar_tab</name></member>
      <member refid="classeos_1afa72659710add3dd0b7139b7da0a07dd" prot="public" virt="non-virtual"><scope>eos</scope><name>old_ns_fit</name></member>
      <member refid="classeos_1aa8930152bcf67361a3d99726c206dee8" prot="public" virt="non-virtual"><scope>eos</scope><name>old_version</name></member>
      <member refid="classeos_1ad1c7d55cb03ff0f19ecc4b6195ffabf9" prot="public" virt="non-virtual"><scope>eos</scope><name>output_files</name></member>
      <member refid="classeos_1af18bdac8e8845a31672bcc5e89a2e103" prot="protected" virt="non-virtual"><scope>eos</scope><name>p_a_virial</name></member>
      <member refid="classeos_1ad4c78d840172ba24b525f562efe4a3d7" prot="protected" virt="non-virtual"><scope>eos</scope><name>p_b_virial</name></member>
      <member refid="classeos_1a1e9900aedd76d412c6471bb41793a18e" prot="protected" virt="non-virtual"><scope>eos</scope><name>p_chiral</name></member>
      <member refid="classeos_1a368119648c8709b9d53ad13d375073f5" prot="protected" virt="non-virtual"><scope>eos</scope><name>p_include_muons</name></member>
      <member refid="classeos_1ae04c7341212965d955c71cb688cebaa5" prot="protected" virt="non-virtual"><scope>eos</scope><name>p_ns_record</name></member>
      <member refid="classeos_1ab5cef53d24699c484d538a856ca03bd0" prot="protected" virt="non-virtual"><scope>eos</scope><name>p_old_ns_fit</name></member>
      <member refid="classeos_1a5ff4775cbc9def7bcb9c123744397048" prot="protected" virt="non-virtual"><scope>eos</scope><name>p_select_cs2_test</name></member>
      <member refid="classeos_1af8925da98b919072e94a34b493f0c185" prot="protected" virt="non-virtual"><scope>eos</scope><name>p_test_ns_cs2</name></member>
      <member refid="classeos_1a1f7f15f61f329ddf72a0733d77a36bac" prot="protected" virt="non-virtual"><scope>eos</scope><name>p_use_alt_eos</name></member>
      <member refid="classeos_1a113d544db8f2fb842b57ff2f91eec588" prot="protected" virt="non-virtual"><scope>eos</scope><name>p_verbose</name></member>
      <member refid="classeos_1a15e16e70ada929ed33667a05842a3553" prot="public" virt="non-virtual"><scope>eos</scope><name>part_db</name></member>
      <member refid="classeos_1add88b86b2418c74c0f8140b959427f09" prot="protected" virt="non-virtual"><scope>eos</scope><name>phi</name></member>
      <member refid="classeos_1a5ff2fbd5f7622bf05e31bb03a63c900e" prot="protected" virt="non-virtual"><scope>eos</scope><name>photon</name></member>
      <member refid="classeos_1ae642fc617fe1b1b5af6c347a45ac59eb" prot="public" virt="non-virtual"><scope>eos</scope><name>pns_eos</name></member>
      <member refid="classeos_1a9155f6ba7680bfc4c0abaf7fa7001a9d" prot="public" virt="non-virtual"><scope>eos</scope><name>point</name></member>
      <member refid="classeos_1a4644e7862f3fecbaa246beb554da8847" prot="protected" virt="non-virtual"><scope>eos</scope><name>proton</name></member>
      <member refid="classeos_1a6ddc966f3bb9ccf15585fb3a33dade7c" prot="protected" virt="non-virtual"><scope>eos</scope><name>qmc_a</name></member>
      <member refid="classeos_1a7579e6411263dd0d2180b5b2a7f18582" prot="protected" virt="non-virtual"><scope>eos</scope><name>qmc_alpha</name></member>
      <member refid="classeos_1aa1d4bd74068377744160c5aa5b6c46a3" prot="protected" virt="non-virtual"><scope>eos</scope><name>qmc_b</name></member>
      <member refid="classeos_1aac78f7dc19ac34864c8903f6797378d5" prot="protected" virt="non-virtual"><scope>eos</scope><name>qmc_beta</name></member>
      <member refid="classeos_1ad656a3078814fbeceb967e6d43f08bfa" prot="protected" virt="non-virtual"><scope>eos</scope><name>qmc_n0</name></member>
      <member refid="classeos_1a73f6d595ccaf7a58edd90f90e6d8e27b" prot="public" virt="non-virtual"><scope>eos</scope><name>random</name></member>
      <member refid="classeos_1afead2a3442d9ad320bcce5043a6a801e" prot="protected" virt="non-virtual"><scope>eos</scope><name>relf</name></member>
      <member refid="classeos_1a26a9aa2bd8891eddc06dbae463307896" prot="public" virt="non-virtual"><scope>eos</scope><name>res_b</name></member>
      <member refid="classeos_1a26747a345bdc51dd4b21f4dfe531464a" prot="public" virt="non-virtual"><scope>eos</scope><name>res_f</name></member>
      <member refid="classeos_1a672a26f8553d520dc941519e63e86fcc" prot="protected" virt="non-virtual"><scope>eos</scope><name>rmf</name></member>
      <member refid="classeos_1a06ea10ebf76e95b729bc34d5edb59427" prot="protected" virt="non-virtual"><scope>eos</scope><name>rmf_fields</name></member>
      <member refid="classeos_1a0373c607528d50a208fbe0bff038380f" prot="protected" virt="non-virtual"><scope>eos</scope><name>rmf_hyp</name></member>
      <member refid="classeos_1a0b14a8f3c4f4675cc67626a5db20ec14" prot="protected" virt="non-virtual"><scope>eos</scope><name>rng</name></member>
      <member refid="classeos_1a2e1699b00bfc1d3d65d33c2ecea127cd" prot="protected" virt="non-virtual"><scope>eos</scope><name>s_virial</name></member>
      <member refid="classeos_1a2d54b943239f6dc81e07efdfd8b3e945" prot="public" virt="non-virtual"><scope>eos</scope><name>select_cs2_test</name></member>
      <member refid="classeos_1aa6e242360755e084e3845f8ad7ca5034" prot="protected" virt="non-virtual"><scope>eos</scope><name>select_internal</name></member>
      <member refid="classeos_1aa3bc65fa01f0eb33e795b5f2fe0c7d21" prot="public" virt="non-virtual"><scope>eos</scope><name>select_model</name></member>
      <member refid="classeos_1a95f4ca5114228035d40de725eefc521a" prot="public" virt="virtual"><scope>eos</scope><name>setup_cli</name></member>
      <member refid="classeos_1a1ce709670f5e43caba65e040b9cc02f9" prot="protected" virt="non-virtual"><scope>eos</scope><name>sk</name></member>
      <member refid="classeos_1a48d645e17b016ffef047b73d2f517d11" prot="protected" virt="non-virtual"><scope>eos</scope><name>sk_alt</name></member>
      <member refid="classeos_1ae08253e92e8f4dec1d3e41ce2d5d0279" prot="protected" virt="non-virtual"><scope>eos</scope><name>sk_Tcorr</name></member>
      <member refid="classeos_1a76f06b1b3ab9e0fc55f6ff024a38db2f" prot="protected" virt="non-virtual"><scope>eos</scope><name>solve_coeff_big</name></member>
      <member refid="classeos_1a11c54a35b13fa5c9eb3229a019d1d164" prot="protected" virt="non-virtual"><scope>eos</scope><name>solve_coeff_small</name></member>
      <member refid="classeos_1a4480600e93a338f8a2618b03b69efd13" prot="public" virt="non-virtual"><scope>eos</scope><name>solve_fixed_sonb_YL</name></member>
      <member refid="classeos_1a8d1df2f651c5278f9c0b1e6a31d4e264" prot="public" virt="non-virtual"><scope>eos</scope><name>solve_T</name></member>
      <member refid="classeos_1a1f8ac29273e5e0f1fc6bb1da9c2c578f" prot="protected" virt="non-virtual"><scope>eos</scope><name>solve_Ye</name></member>
      <member refid="classeos_1ac7d5a5cfdb371e944d4d830717edf87c" prot="public" virt="non-virtual"><scope>eos</scope><name>strange_axis</name></member>
      <member refid="classeos_1a8747580da79f5b7a67c2d398fc92da9a" prot="public" virt="non-virtual"><scope>eos</scope><name>table_full</name></member>
      <member refid="classeos_1a9037d1e643beb2a46975c2d6ee0f7701" prot="public" virt="non-virtual"><scope>eos</scope><name>table_nB</name></member>
      <member refid="classeos_1ab08256bdce7d3ff415c484b774505e2e" prot="public" virt="non-virtual"><scope>eos</scope><name>table_Ye</name></member>
      <member refid="classeos_1a2c05bd84679793e7df3b7f23a92b89fb" prot="public" virt="non-virtual"><scope>eos</scope><name>test_deriv</name></member>
      <member refid="classeos_1aea1bd679e9f8b33ea8079b7cfd85ab0a" prot="public" virt="non-virtual"><scope>eos</scope><name>test_eg</name></member>
      <member refid="classeos_1a74f5a2586276e7bfd2290d956b291141" prot="public" virt="non-virtual"><scope>eos</scope><name>test_ns_cs2</name></member>
      <member refid="classeos_1a8c5a293eb5e1a6800eadb5d345ba9967" prot="protected" virt="non-virtual"><scope>eos</scope><name>th2</name></member>
      <member refid="classeos_1a5c9585cd6a83c158489d45c39025aaa9" prot="protected" virt="non-virtual"><scope>eos</scope><name>th_chiral</name></member>
      <member refid="classeos_1a802488baa08672fdef78f95eb9707280" prot="protected" virt="non-virtual"><scope>eos</scope><name>UNEDF_tab</name></member>
      <member refid="classeos_1a9fac0f5d859f20444f09bd04453587a5" prot="public" virt="non-virtual"><scope>eos</scope><name>use_alt_eos</name></member>
      <member refid="classeos_1ad517930f035d4b54ca6a688fb5494bfe" prot="public" virt="non-virtual"><scope>eos</scope><name>verbose</name></member>
      <member refid="classeos_1aca0e9051a7e04930041783302730ae15" prot="public" virt="non-virtual"><scope>eos</scope><name>vir_comp</name></member>
      <member refid="classeos_1a2dafcf25ad75a9a2b640bc845bf71d05" prot="public" virt="non-virtual"><scope>eos</scope><name>vir_fit</name></member>
      <member refid="classeos_1af57f3af5a2b3e397232e7c6f9977f169" prot="protected" virt="non-virtual"><scope>eos</scope><name>vsd</name></member>
      <member refid="classeos_1a25db96648576a8517d3b0dc93505b708" prot="public" virt="virtual"><scope>eos</scope><name>~eos</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
